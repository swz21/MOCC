saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\371P-\276i\033\270\275\262\273~\275\032\350\024>V\330\007>\230\370\206>UA\356=,\252\245=\374\033u>\177F\240=\342\0370\276\240\313\361>\223\262\006>W\252\037=\210\340\340\274\372s\206>a3\261\275/\tW>\277{`>\001\036T;\270Cj>\276\221\035=N;\216\276\322\252\217\276\217\252\222=\016\377#\275\360\240\300=R\177!=\342D^\275g\376\215\276\316\371\254\276\'\2431\276\270\014\022\276N\277\n=\t\007E>H\335\250\275\246p\326\276z\250\005=Aa\373\275\3729\357\275\003_\032=\271,\242>\370\330\204\275\330\010[\275\302#\217\275d\343\275\274o\037\277=\2558\275<\350\177c><\245\270\275r\033\235=\033\235v>7\320\325<\314!A\276\n\357\266=\216\274c\275\030T!=\n\267\037>]\254g:V3\214>\210]\270\276\205\3462>4\226[>!f\241\275\r\351[\276\341\345\n\276<\247\233\275\034C\037\276\355o\r>\035\254\213;\274F\215>\263-R>\303\310?\275\314L,>\252\305\214=\357]Y\275\252i\240<\246\031Y\276\325\245|\2762e\037>\331\203;\276\301u*>\324\203\323\275\212\271a\2768\351\003\276\230\2439\275\320k\201\274\025d\341\275@\'\263\276)M\343=\365\351\270\275&\201_\276\210\374D>\202\222\322>|a\371<m\267m>\241X?>\322\332\361;^\206\213=\027\322\020>1!\250\274\235y\205\276n\"\321>\355A\004>\025\000H\276\222aM=d&O\276\247\367W>\312\335\303<u\366\300>)\030\000>Rw<\275\310F\372\274!/5>2S\277\275\305\262\002=\320P\365<\345y\202\276\212\325p>\353\214G>\266\236\200=\373\177\304>F*\022=\242\300`=\200#\331\275\307t\267\275S\001\023>\"\265>=\200J\326\273\203s\236\272;^\">`\313N>\201{\215>\245\322{\276\036\247\202\276\2230\237=\377\266f=\206\253\017>\020p\373\275W\250\026=\312\231=<\323B\365=0\306\271=\357\004\274>_\332\306=\023yY\2763\336\227\276,\3353>\332\331\266\275\215^a\274\303\034\227< \2765\273\232a\261=v\215\337=9\343\334\273GT\255=s\343\020>D\313\004>\347\252\234\274\233\323\251\275\265P\370\275\377p\206\276\314s\235=\370(\270=\254\233\013>)\313\351>\212\221Z=\256\347\202\276\266\006\260\275\271 \036>\262\026\240>\350\211\320>\324\376\344>r\230\207\275\263\205->\347^x>\\\305v;\262}\243=\356\306I>\222\253\241\275\2523\375\275\250\014\313\275s\3731>\232\317\312\275yo!\2755Y\261>(\203\245\2759\337\351<\014\346;>o\006\363<\224\235\261=\"\033\305=Q\242\022\276q\267\303=\201(\242\275\006\260\236=\360\007]>\220\324&\276?\357\244\276\217<S\276\036$\230=\177\261\227\276X\236#\275\240\243y\276\037\252o>\"B\351\275\320)y\276N\037\003>\230\036\036=^&\205=u\215h\276\261\371H>H\306\226=k<\035>\010\374K\276\021\235\340=\310w\261\274\351\312\300:O!\252\275l>\205\276\314m\240<\307c\241>\210\267\361=*\334\353\274\260\255X<\342\351\237=\271\202v\275\303\024s\275USz\275\351\362M>\346\372\317\276\020\"C>\255e\221\275`\325@\276\177O\237\276\333\364H=h\n\310\276\203\224\217\274\206\323q>\255\377\242>\213d!>,\375^\276\027MR=2!\201>\021\242\264>\254 \306=\363\270\272\275\306\027\306=\225\n\375=\371\237\342=\007\2041\276\"\n\333=AI7\274)\353\\\274<\016\230\274\356o\244\275\361\337\030>*\323\232\276\010\363\033\276\263\2635>\343\325\225\2765\033\005\276\335F\360\275\231h=\275T{\316\276s\370\221\276\326$\216\276\201\007*\275\027\t\344\275\336!\014\275\210\255t=\\\267\234<\330+\263\275\214\270\256\276~J\201=8Fo\2733t\025=\217\004\027>\010\350\252\273\'b\244\275blR\274\245\217\315<o\203F\276Gj\250\276\301\352\337\275^&\347\275\262\343\014\276W[\n>\223\334\357\275\262k\243=\206f\327>f\357\357=\177\003 \274\326lt>\345\266;>\316\236\'\275d\350\005\276\203%\356=\027\033\314=\341\361\214\273_\211\224\276\234\253\254<\030\243n\276\312B\320\275\016\211\037\274R\276!\276\\\316\352=^\304~\274@\360\217\275/\211\255\274\320,\307=\t/\272>)\3107=\246l\235;\003\315\320\275[m\016>\274\337\027\276\257\t\r\276\241)/\274)d\001?\364\274\316;\270\317c;F\273\'\2768D\351\275\274>\\\274\257\332\006< \316\255=y+L>\233\332\275\276\307\260\300;\227m4>_\250\347\274~\235@\276j\036\230>\032\177i=HS\330\275\342\364\312\2753\020\027\275\345\321O>\235\251\026>\347\202Z>\205\000h\276P5\200\276\035~\302\276\336\017\t\275+\203\002\276\321\313h>\034A\305\276U\271R=o\354\331\275\342\360\210>\216\346\002\274T\207\303\274\243\013\225<\353\005\330\276=qE\275w\315u>\227b\335<\364\306\214\276\017\335\354=Q\2050=T\306\005>\260o!\2754\377\224=;\266v>\215?\361=\2376\351<m\207\207>\242L@\275\007Y1>{1\300>\367XI>\343\213+>\252\226e<fX\024\274oQ5\274}\253\240=W\"\214\2740\313q>\360b\247\274a\337\'\275=I\034=>D\374=\237\346\246>\265Qb\276\261\276\226\275\270\025&>6\335\002\277\306\233\317\276I\261V\275\t\264/>E3A\276b\365\260\276z\007s;\224\327\350\275E\256\215=\2357\250>\227\242Z=[+\353\275\312\213!\276\272\024_=\312_\030>\031m8\274rc\303\275#R\212\275\324)g>\3218\021<F\370\001\275)\235\021\275\316\2425\275\003Ni\275\000\362\242=\260\275\'<\230K\364\273z{\021\276u\363Y\276\345^O>\256\220\367\275k%\351>\273\251\007>\003\030\005>%\264\216>\025\342\212\276*\341\">\337A\330=\343\t\266=\036\231\276\275\236g\t\276\0338\223>\0312\304\274\310|\2269\326\267\022>9\204m=\200\253O=\304\005t>\026\014<=\321Rb=\337\375\251\276\315\252`\275\0210h<n\034\260:G\273\000>Gq\222=\240)\\\276f\266\006>\244\035\004\275\316\236J\276\210]O\276\344\363\374=JT\253\276\232\222\327\275\005;\031>\327|\233\275\364c\305\276\002\366\236\275d\376\375=\277\216&\275\354\353\016>9\313\225\276%yu>\321\255\336=\004\016\033>\213\222W\276\351\222\007\276\302\264\001\2769TC>b\2759>\222\nQ\276\2557\316\275\222\277\257\275\367\\n\2764\3516\2726\217\r\275v\177o>1\\\265>\r_a=\201d\007>\262\352f\275\\\201\376=q\r#>\nj\026>\327\t\t\276\313\352\374\275\026\000\350\275\272\2313>\335\271\321;\0032\203=\262\035\001>(\026\200>\2258\274<C\351\310\275\366\236\000>\023\313V=\242\332\246\276\001\3763>\276@\005\276\346\272\020>u\004\016\276\306\024\244=\356^\311\275\021\354I=\014\304\243>;=1>%\230F>D\357q\276\254#\016\275\t\036d\276\357m\022>e\3602\275\356\230\270\276\322\306F\276\326\247\207\276)G\277>\315\363\235\276-\332E=\031\255\217\276\265\205\236\276[\335\312=\031\013\002\276\313\004U\276\246\341\036>:\211\331\273\314:\234=\220\314Z>?\213\231<`f-\276\220\037\324=\025\355 >\233p\221>\212\026\031\276m2\254\275N\354b>\022\341\242=\274\367\256=\034q\022\276\321_\375\275V!\313;:\r1\276\337\\5\276u\337J\2762]}=s@\256\275fB*>v\373\231=\323(\n\276A\270,\276\304\312\217=\323p\233\274\3324\341=:\211\177\276\036f\276>\"\024\302:\261\225&>+\377_\276\013C\277\276\376\251\213\271U3\201\273)\035M\275\367\367\253>\314\267\\>J\233\203>m\002\203>\316\365)>\235\032\201\276\023\026\340\275\317>\237=:\231\331\275\234\363\342\275\316\312\030\276\3405v<\\*\203\275\237n\000>\331&W\275\020\326\201>\037>\303=V\227N\275\016|\326>W@D\275\030\315\274=\0379\301=\340\373\251\276\372\211D\275C\211\266\275\242\014\237\275\240d\233>G\207,\276JV\315=\323$$>\317QO>\247\347\305\2759\001\244\276\341\210\230\275\251\255#\275\017\334l=JC5>\356\260\025=\260#*><}V\276m\313\272\276\212\3050>\344R\201=0\002O<vR\360=\014\226r\276t\310\213=\306\373k>\205\375\226\276\3142%\276\340\312\006\276:\304m\275\277\276/\276\313\\M\276^|\337<X\004\024>\030^\235=\251] =\021a\224\276\360nu<\311*~>\0202\340\274\235@\245=S:\205>\353\366\225\275\024k\317\275T k\276\307\2546>\002\020\370\275}\246I<\330z\335==\031\264\276\350zn\276\352\020\026\276y\344\035\276\300\230\335<+l)\276\231\240u\276\323\271\267<]p\205\276J\254`<\030\"H=\367/\372=\215~@\276\224}\211>\366\375\206\275\276\003\262\275\351\233\352=\364!\202\274\354\006\205=\004MR=\271;\264\275\347\2159=\270Y\016\275j\365k\276\"F\250\274\356\354X=ec\013\275\346Sb\275\251\334\275\276gv\237=\375\303\230\276\033A<\274\214\364j>\0244\236\275\305z\272<\226t[>\251\031C=\341\353\234>\300\2034>\310\251\243\276\357mW>`\016\252=\231c\006\276E\310e=\375\271\005>\267\342D\275\336\323\271>;\026/\276SLq\276\354m4\276\002\025\366\275\002\003\256=\201y\016>8l\223=\220s\010\275b*\034\276\326u\265=\357\313\274;\254o\322>1\226\357=s\2741\274\000Z\321\275\375\302&\276\237\247\252>_\203\026>|\2262>\351B2\275KM\235\276k{\307>\230\374&=\332\202\224\2766\352\334\275\274\023Q\276\331\021\020>\375\032g;\354yI\276\034\271\272>N\016\206>\317\200X\275\027+;\275?\334\326:\326\301\250>\355\317\305:B\323\250\276\315\254X>\267\026-=\201\345\206=\017aP\276\350t\032>\331\216\016>\037\032\205>\027~\237=\275\261\233\275\216[\345\274xO\226=\2767s>_}~=\335\335y\276M\227\306=A\245,>f\021\257\275\366\233\224\271\201\305d\275\202\325\213\276\021\032\256=\376\217\367=\351\346]\275\021Ll\276\202\240\255\276\360~S\274\257\177O\275\010\273\200=\256\027\240=]6\006>^\374\206=\265\260\031<\377\244>\275\036\030\344\275\016\307e>g3\027\276\307\004\027\276w8\003>M\367\014\276\225\333\032\276\035\262\321<\251\021\302\276\251\202Q\275\233\034\224=\335\352\200\275=9\243\276\312\302\250=\2318D\275\022W\022>\267\215t\275\235\213#>\335t\266\276\255\304\203\276\362#\323\276\276\224\001\275p\324J>\354\273\260=\033\346\263<\020\302\211=\nH\013\276\006$\001>\215\224\276=2\035\366=\020E\217\276&|\353\275\006\332\326<\005\2426\276\245U^>:\217U\276\213\t\267>\317\341%:\354\026\304\275\320\023\021\273\330\277\316<[\347\261>\225\3379\276\325.Y>\230\243z<s\254\211=V \270\276O\353\362<\004\343\005>F\244\344=y\364\342\274@m\271<\322\230\027\276\'\337\201\276\346a\273=\376%\t\276|H\205\275\\F\331\275p\274\206\276HLW>\177\'\016\275}\035\214=\3519\020>\236\026\n\276E\003\031=\360,\t>\004\320\330<|0\\=\273;\020>\205\n\225\275\351\370\325\275\327\306\344>\227\301\216\274\341\363\322\274\233\301\346=\3568Z>\203\r\316>>Y\216\275\016\373C>\014?r\276\313\305#\276\007\214#;\216\276\257\276\200\003r\276+A\226>\377\234%\276\207\'\023=\352p\307>:\347\035\275+\261\314<\256\3205\276h\375z\2749\370]\276\024\366\325\274 \260M\275\333I\271=\350\001$>\231^m<\347\341\016>\000\355\000=\2054@\276\211+\351\275\357\262Q\276\371\277K\276\216\226\261\275\243\002\036\276oq\315=/\370\276>)^\242\276<\213B=.@\361\276\325\016\223\2769\232\301>\234s@>\260\243\316=\212O\022>\3066F>\355\3101\275Rh@=\323\256)\276P\207\223=\212\032C>\232\242\357=>\017*\275b\"\200>I\301\355\275\030U\353\274\352\205\300>?5X>\\=T=\374og\276\310\377\210\275\272\267\236\275;\3269\275$\350\251<|e\324\275\016\277\244=\221:\210\274p\316\034\274\367H\355\273\302\211C\276\316XM\273dC}=\"\352=\276\034\222a=W\006\215>\3337\000>\273\027\237>z\214>>\230)\272\275\002\323\242\275\372\340\206=\337\007M>\343\325\200<{\351A\275\257\376\010\276W\314\003>Y;\330\275\036\301\217\275N\253\331=Y\347}=\265\355K\275\205-\326\275\324t\300=\231t\245=\2327\371\274>>/\276g_\345>}\211L\275\336k\213>\364\223]>,\346\371=\273\013\\\276\342\207F\274\032~\035\275\177\315\004\276j1\034\276\233\336\367\273?\310\233>D\003S\276\306\210E9\356L\333\275\252\210o\273Z\001:\276O\3516\276\320\000,=\3353\331<ZL8\276i\321\341\274\336\355\367\275t\205)\276\242\334\220\276\307\302\202>\244\253&\2766\247p\276\234\2128<wyR\276\037{\326>\"\205\217=]\026\212\276\334\320\216\275*\032\245\276\272\246F\276A\005`\276\216\361\357>As\224>?\230J\276\305\314\023\275C\222\033\276\017\313\242\275<\377g=]\263@\275$7\313=\211\315\230\274\243\312l\276\273Jo\276FH\222=Q\370\007=\331\250\256>e\361\025>.\241\333=\315T\000\275\005\374m\276aRH\276\350\357{\275\213#m\274X+\222\274\325c\311\276\305\304d\276$\325\003>\352n\261\274ldo\276s\321\217=\210\265\327\275wq\236>\361\355\271=\017\2362=\304ZZ>\374D\035\276W\250\317\276CF->Y\214r\275\000\211Q>\303\314\350\276@\034C>m\021D=\362\347\\>\256\024R;\234h\337\275\037\023B\275\361&\242=?{\205>\260F\350=\315=\r=oF\242\275\240()=\005\235e<K\2735\276T\3135>\024$f=\3563\t>\273\213R<\261p?>Dh\233\275Jx\205\276\017;r=\302\177\205\276\037\243\325=P\006\333\275\267\333\210\276\023ht\275\364!\023=E\035i\276\3754\212\276\245\357 \274\321\037I\276\035\332}=gc\177<]\300\030\276~\234\356=:\310\004\276\007\352I<\266\302\001\276K\020\366=\022\250>\276\306\344U\276\177T <\233\')\276\000\361\254\275\226\367\'\276\302\234\361=\255\361\204=\261\206\037\275\217m\312\276\\\240\256>\312\307\217\275$k\350\275\021{\177\276\266\304\213>\353\"\227\273\260\206\376\275+e\266\276\234\337O\276\300\0327<\"\324d\276\373\003\"\275\327\244\241>\222\253_\274W|\241\275\002T\004>\020\274@\276\344,\027\276\234\216\033\276\376\233\010>\247\336.\276\031\350-\275\375;\340\274\321\377\327\276\007\361\275=\033\321E\275Xl\023>\326\236\350\273m\014M>\017ur=\030\271Z>\260\200`\276\027\351\201=B\2610\275\305\277t\276\356\337P\275\214\"o>5,\336=\254H\253>\311\344J\276\331\300a=e\036\362=G\243\034>\241\\m;\211z\"\276\255\034\266\275,\325\274\276g\363U=\245*\231=\357\246\016>L6\353\275W\n\265>)z`\276\302\355\343>\177\212\330=\336\347\343\276\337D.\276\346\223\223\275\357I\221>\254\024\372<\251\010\235\2760\331:\275\365K\371\274|\273\004>\361\354/\267\216r\001>\312m+<\330\276[\276Ln\232\275\323\246c\275\315\317\216\2765\371\034\276\246\360\206=&\031\037>-\034\371\275.O\335>\276\"<;\276\262\217>X\234\036>&W4>-\323\216=+\225X<\253M\025<\271Rw\276H\300==\330&\213>g\252\246<S1\212=j\314\216<69\002\275gg\026\275\265\004\361\275\276\3501>(\375X=\304\273\024\276\244H\227=b\013w>\034\244\025>\224&c=:\206\220>\274\241;\276\301.(>\3372\354=\003\341A>\245\204\217\275\313u\005>\037\002\217\276i2\010\275\335*\326=\270\177\276=\257\300-\275\272\267\332<q,\222\276\313\255\376\275\335\337\366=I\255,\276\345\035\006\276,\221i>\010\013\217\275\352\333\010\275\324\3148\275\264\3146\275\236\252\007\273\264\367\342>\211[\201\275C\342\266>\201\253T\276\252\243\037\275O\250\r\275\227i\321\274\371\374\t>\177\2358=\302\n\247>\032\315\005\275\267$\272>\366\365\014>$\327s\276#/(\274\202S\210\276\236`\202>\'\004\r>B\375\250>\376\305\322=\202\2656\276h\206\201\274\267\325k>*\342\203=zY\206\276\034!\r\276\300\214G\275\035?k<\030\336\014>d\212\346\275\022\310\345\275\022\365\201>kde>\247h\246\275\367\3315\276\375w\271>;P0=\276\273\303\275Y\307\327\274|C\221=|\307\322\275N\311\214=\255\370a>\303\331\"\275Xd\017=\302\352t\275h\242\021\276\177\2604\272\311\343\266<\3055\245=:<+\276\034\236S>\001\275\244>\001\301\344>\234M4>-^\257\276\240\016\357\275T\264\206=3\263><\315j8>\324L{\276u\253\203\276\205\327\370\275\260*\351\275\'\370==R\201\227\275\013\251\227>\007}*\274[dj>\262f\010\2762\220 \2757O\006\275\"k\270<\317\010\264=_\343\240\275U\334\273\275.\032\240>\322$%\275-\210\231=\n\356==\271[\362=^\310\227>D\242I\276\375\014\226\276\002W_>\275\002\316\275^\370\214>\005\213\352<J\264\304>\273\000~\276\301\362\317\275\223\342\210\275z=\021>\276J\212>2\333\020=\234v\005\275\246\360#>u}\261=\347\212h>$\243\233>:\230{>C\367\227\276\255s\327\275b\326O\276\303\005/<\256 \304\275\237\3148\273K\332\247\275\'p4<!\210?<\340[\233<\351\024\242\274\340\255u=\t\267i>\316@\360<\004\312m\275V\344\364\275\022\266\302\275\363\264<>\337\017\207\275\004\202\252\275-A\003\276;\247\004\275\1776\020\276\267\240o\275f\271\254=\365\210O\275\330\024R\276\347\307\221\273\227\366\211\276\273\315?\276\277\t\033=\267\201\304=\236\216\231\274\311\221\245\276\321\322\224>\306\177\002>\177\304<\276\211\331:>\262\025h=c\250\226\276\214\3455>\277\327\316=\256G\340=\030\262\204>O@\213>\364\243\212\275\330r\026>O\261d=\004G\327\275\373OQ\274\306\225\361\275\235\214\254\274\2236\301\275\024\274(\275\247\346\304\275)j\255\2759\341\324\2761\366\260=2/\240\276/mD>8\020\352;\326E\311<\273\314\232>D\255\301\275\345t\352=\310\t\022\274\310\010;\275\032b\260=\003\233\373\273Rv\361\276g\357\357<\3257\215>\230\262\177\275(6\343\276\254?\372=\247A>\276\261\256\022>\214\276|\276\032\336\344<\306\037!\276/\217\204\274\275J\262\275\"\364\016\276\267\024w=(\352\372\275t\246\225>-\355p\276\364\000T\276\004\347#\276bP\224>q\221\302\276;\360\233\276\rn\272\275\252YA>8K\255\275\305d\206\274\261\025\030>M\336\312<\333\215\366=D\334\013>\317\224(\276\350C\206\275\013\2159>\027rQ>B\241\340\275gy\276\2745\247\310>\247\026\351=UI?\2747\002j\276\253?\037\276w\364\320=\000&\345=\007\tc\276hI\205=\334]\313\276\344V\373\272\201\221\247\276\350a*=YM\247<(\033\347\276\277\227\250\275V\354\000>\204l%=\262t\301\274\327\216\023>X\225\302\273\215\003j>P\030\017=7\247\357<\361\202\255=\274\271\205\275E\302V>\363R\241<\2525\025\276\373U\343\274\223\002D>\002\'\251>\036\332^\275T\022\256;k9#\276\331F(>\356)-\276\2532=\274\330\362Z>\263q\251\275\212\246\010>\337\334\033\275/\214\205\274\373\n\277\275gw)>H&\232>\027\221\033>\200\342\207\276\020}\\\276~se\275\315LS\276\035\322|>\260\371\375<\330\330\245=\251\317\351\275\010i%=\344\325\246>\371\3417=rN\304<.aD\275\255\025\017>\247]d\276\346\364\\\274.\034V\276I\351\001\274\266k\251\274\3413U>\232^\250>\3230\212>:\244Y>>9I>\346\366=\276w\3471>\"\236O\276\217&1\276\232\225\277>\377/\376\275\001\370t\275\346\372N=f(\334=\303c\217=\377$\007\276\000\027\306\276w\261|>?\203\216=N\3678={\266\212\275|+\305=d\275\305\275*V]\276A\034 \276\003r\036=a\014c=\261\027\\\276\005\250\002>\013\352n=\266\275-=\235\022K\275\035\272\036=}\225\247>N:\253\276\024\006~\276\254\272\000>\227\266\373\275\334\2106\276\372\200\250\274\002\005\360<\330\202\036\275/S+\276\017\\\022?V\275[\276`\"\250=\210o\027>\315wq\276\256\353\242\275\357\220w<f\000\303\276\356J\265=\237#\236<\025\r\342\275(p\027<\037\322i\274MwN>^\221.\276\310O\215\276#\\\202==Q1\276\337\351R>\2227\212\276fe\340>s\3749=\340\2008\276\303a\r>\3478\010\276\270\253\260\276D\n\006\276\217n\376=j|\265=\2026\234\276&\007\240=>2\024\275\275X\360=)A\010\276(\214m\2764\035~\276\336\207\027\276/\320\226;\026\363q\276SgM\276\243\303\315\275\337\361\326\274\252G9=\030G\352=0\367H\276\312{\272=\017Y\200\275\367R\230\275\246\351;\275 \322\200=\t(\022>6\343\370<w\332x\276\323\225\n<\020\365\351=@?s=\214\022\274\275 \363\367\275\270\026P\276\310\007\014?~r\302=W\"\325=\254\2304>\321\324\253\274\177\322s=\301\263\205=ID[\276\037\205\255\275\037\250\025=m)B=\237\240\006>\305\250\247=1\371\242\276R\300\245\276\246U\257\275\310\215\'\276\230\'d>\262\332o\276D\263X\276\211h=\276\205=S=3\264s\276\221\3157>6\237X<n\336\335=V\247p\275\225\242d=\312\362\346=t\271\235>C\372)\2761W\230\275\002\306\371\273\243r\301=\345S\017\276\n\364\230\275\330\372\326=2{\r\276\",h>\273i\006\275\352A1;\305\016&\276z\216\222>\275\204\365=\265k\016>\'\\1>\037\0134=xsk\276\\3H=<\352i=\033F\037\274y_D\276\220O\276\276\'\271u>\350\177\205>mZT\276lX9\276&\350\030\276j\317\207\2763j\213=}i\207\275\361`p=C\262.>\342\311\354\274>\314L>\260\002\322<\317;0>\370\302\235=\374TP>\350\354p=w\215Z\275*<\256>m\375+>\025\340\213<\034S1>d\217#\2766\332\236>\266\246J\276\321\033I\276\235p\220\276\211\230\035\276\363\320\310\275h\206g=\340\241J\273\"\026u\275\343\243t>5\030\307=\330D8\276\017\243a=\010U7\275\225\367\230>\'Dj=\207e\026\276-\213\327>.\007S\276\210c?\273E\024*>g\257\217\276)\001\306\275\267\360\032\274\222\260n\276\214\003\245>#\260\361\275\326i\236=\243\302\007=\375\353\213\275\n3\242\275\000^z\276\204\331\035>\277]+\276\313N\037>R\304\016=i\375\255=\t\226\035=\201X\264>\370/\024\276\233\022\231>\376\301\342\274\357[l\276\365\215<\275#\277 \275\272\273E\275\227\334.>1~s>\277F0\276\023\372l>\375\261\355\271\247f\317;\241\253A>\'?\016>%\253\014=\343\372\013>\244\321\034\276\315\202\334\274\277F\002>\277X\016=1\376\001\275\334W@\276KT\214\276\305\205\274=\257m\253=\356e\350<\260\211`\276#5\221\276\2405C>G\253\302<r\327U>\001\326\224<\363C\217\275@\234}=\010\345\274\275\240\275B=\016\204\344\274(\211\271\275\004\220b>-\266\010> Ox\276\030Dz\274\323\305\256>n4\310=\313!\n=>\007W>\331\254\225=\250\344)\275\221\217W\276\210\255C>\335\350\005>\312j\370\276l\373\342=\303$\217\275\017H\r>B\206\257\275^\n\016\276\3431]\276E*\301>\222S\025>:e\027>q\224\263\275\004\245\034\276=\240\202\276\221\3675\276\211\001\317\275\035\253\013=\304\253\022>\363\346t>\333\000\005?\366]\002\275\240\310\210\276\032f :d &\276\341\003\313\275\007\230u\276\220n\352\275\217nz\276!\270\020\275\261I)\276B\321\027>\205\201W\276Z\026\314\275\313\276U\276\251[\316\275%\2135\276\343p\351\275\342\210#\275#\036\225=!+\237\275\351\254\002\277\256If\275rv\270\276*?R\276\345r(>y\236\226\276\222\"\257<\244cN\275\001\351F>,4w\267L\344\267=\023of=^\374\026\276\245\221\013<S\002\236\275\204%\030\276\251SJ\276:P\021=\355\233\303\275\373C\030\276\013\335\337=\020\313\316=\325\026\340<L.\224\276\202\247\234\276\327GA\275\221\306\374=q\350\241\276N\225\330\273\313\2308\276\007@\246>\224`\245\2756\364\273\275\031\236\222>.=\226\275h[2\275/\324A=\370n\225=\333\236!\275\223\362F>/\251o=\271\275\257=\2636\210=\204\257\222>@\321\210=\3038\032>\376Ww>\260\314\271\276\265,\271>\357L\320\275#\274\035=>\002\r\276\246\200\204>P\333\230=\315\370\343>\226\217T\275\245,a=E\342\n\276!\344\013\276^\035\231\275\254\177-\275P\221\032\275\000\272\027\274\243\333H\276\342/\253>#\256[</\207\243\275T\230\242>\272{d>\2536[=\026(\203=\251\314\354=\375\032\261\276\261t\025>ay\001=\252\202\017>\242\t\207\276\205\210\210\275\202\\\223>\246\355\r\276;\336\271\275\005,\304=K`\271\275\004\306\314\274\377:\215<L\341\261\274\320/>;\016\262\036\276\325\305\\\275\230,\177=l\257E>[\301\r>\224\277\024\276\326\2778>3\320\227<9\363\256\276\362\006?>x\343\356\275\354\275\310>\343P\227>V7\313\273\253V%\276\242\267\026=\334\002=>A_\204\276\006 _>\367U\341<h0\335=\03456>\000h\236\275\301d\025\276\243\332-\276UL\002=\334\034\026\276\340\355\010\276\367>|\276\217@A>\023\033*=\r\350\322\276\343o\223\276\344\244h<p\027\272\272\355\206\205\273\026\241f>\271@H\274?\210\022>\201\235\037\273\024\026\006>]\364\217\275\373q\310\275\344\300e\276(\257\025\276\365b5\2764\032r=(p==\276\034!>\220\267\024\276\333\274Z\276\277\265\246\274\222\310|\274\224\231\334\275lZg<\017Q\232>\353\243\366=\017=`=?*\257\276\266\035E\276\251\2226\276\257\255\270\276h\234\037\275\263\274\247\276w\346Z<>\223\010>]E\244<;v\301\275\365\334K\276u\t\036=\374~\025=\271\255\201\276\236>\037\276w\002\353\276K\323\336=h\263\222={\234\177=\303z\202\276\315P\212\276%\016\032>\270\216\254=y*\236\276Nd\223=\202?\307=\225\346\n>\317\266\\\276r}\035\276:\224M<\n0\177=\010\331X>\2730\005>\260\274\222\274\243\274b\276\027\3267>m\3245\275\034m\242=\305\247\017=W\217.\276z\004;\276\025h\355\275\363\020\340;\316\206\240>K\330\217=\233\200o>J\202\325\275D\321A\276{V\026\275\244\265\227>\032\344\233\276\342\314\r\276\256\355Z>\217\025\024\276\361\375\002>$\241\214<.\205\004>\215;\372\276!\263\023>C<\023=\321\n\253<\377\310\242=\336\313m=T\225;=@\347Y>\332\022V\276\354\365q\276\320\320\213>\212\356\276\275\225\036$\276x\022|\276\000U\252\276\275\310\215=\325Z\020\276\350]\220>\271\235\010>\251Q\033\273\375+%\276\242\355\226={\347\261=,\351\025\276\260o\003=yvO\276\232\305\241\275\350\2269\275\245\356\022\276\371A\225\276:\217\220\275\026\212\277=z5Y\276\230\360*>\272\005\261\276\266\335\344=\241\036\320=b\376\007\274\310\264x\275\014\001\262\275`\220\222\275\304L\031>\356&\260\276\021>\221>_\376\023>\341t\344<\370\244\022>C\213\262>%\030n\276\363\221\313;\366\300\315=\260\356\235\272\265\355^<(\372\316>\013\214+\276f\005\261\275\351:O\276[}\214\275d\271\027\275\027,\030=\327\036P\276Fz\237>/t\335=\205\034\034>\312B\'\275\026\372\270\275)\007\271=\237:4:\177\334\265>\000\302q\276\3600\013>G.}>j\221\370\275\311\322S>\013\227>>BL\307=\333zk\275e\2701\276\217-\274\275v\360\035\276,\274\r<T\360j\276\211{!\275w\361M>\257\376j>&iZ\276\345\223^\276q\275f\276\204\274\244>)o\030\275\227\025\021=\325\220\005=\266nY>W\3708\276\333{\325=\243\325N\276\016H\324=\255!\354\275\006oI\276\003\223\343=\030Ow\276P1\235=\022\343F\275GbQ\276s^8\276\205\263S>\235\035\001>\314\032$\276\371\336\205>\324\253\353<7\244\n>\022\014\344=p\226\366=,\205\346\274\226\204\237\276\314>\323<\374M\262\2757\237\233\275\3458B>~a\353\275vo\224\276)\3406\2766\276+>\221,\313>*\006\006>\007[\3549\014\342\360\275\206\375\027=.\\\225<\004N \275\326\254s>W\333\036>5\256\242\276\337\375{\276\370\276\207\275\025$R=\260\337\005\276\335\244\375\275\364\354\247;\372\356*\276C\305\213\2765w\261\275\317\222\231=\2251\227>\035\250\020\276\313\331\210\275\221g\r=K\214R=\246\356\036\275\363M\353=\252\224B\275h\265\222>\235\037\210>\002T\225\276\017\335\031\276R\'\226\274\343\317\177\276`\246>>\222\000/>_\364Z\276\0258\311\276\010\343\223\275\373\325?\276\037}<\274\343\355\207\276I\237\026<"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "AddV2"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: ";\306\264>\036*\257\275\337J\243\275\256s\003\275\031H\206=\335D\316=QK\203\275U\372.>\261\335\322=!a\360=m\306\005\276\365\"f;2\365\253<;\t\246\276\3320\254\276ph=\276\250\347R=\264~\253\275\262\242\273<\027\227\337>\230\316\300>\313\370B>*\213\313\274\376\016\330>\232\2273>Z9\247\274\003i\225\276\240\332\217\276\245^\271\275\355[\233>\036A\210\275\343\333\211\276|\266\311\274\263r\202\276\032r\241=4S\243=p\304o=\251\270\021\276BBk=8\336\247\275*\036\025=[ij\275\364[\245\276.\3034\2760i\243<\322\254W<\3243\321\275\222r\231\274\347\310N\276;H,\276q%\302\273\241\020\252\274\244\010T=R\337\254>K\036\017\275s\344R=&m2>\265x&\276\253\311Z<\235x[>\000.)\276\347\377\037\2749\245\347<Q!\201=\306\305v\2761jF\2752T\212;<\332\236=ro\235=\242\304\227>\242K\212\275/O\332=sP/>\207\246\206>\316\204\362\275\213\307\204\273W\031\317=X!\231\275G\216\\>O4j\275z\031\225\2763\005\261\276\036\330\020\276\026\036\226=\335\037<>+\243+\275\331\373\236\275l\343r>\020\361\376=\350\345\351<\273Z(>\204\036H>\025\307\375=vf\026\276X\340.>\260\275S\276TB\345=\212\321\032>]Y\'\276Zsg>ah\210\276~\200\215\276\341\355R\276\245\324 >ip<\276\264%\202\276/\"X=\230\2109=\324\260\230=\020\353)\276s[y\276\n79>\306\033+=\014\273\220>aZ`\2760U,\276\207\353\031\276\022@\323\275\220\013n\276U\211\323\275\330\302\t<\273\273\364=\373\336G>X\355)>4@\262\275_\272(=L\030\021>\022\275\350\276\021c\333\275S\261\306>~M\032\276\304YO>\373\'\271>\016\361\317\274q\231\320\275I@\273=\232\255\315\275q\2048>\347\337\375=;QM\276\376\272x\274+h\322=y\217\023\275\210\333\267>\257\275\024>c]\257>\013\370\225>=\027@>\231%\022\275\275\301\314\275Sk:>\2723\205>\252/4>)\200\353\275\356\246\224=\237pg\276\'\242\325=\274\327E\275u\352\322=tK2\276\004\304\001=\221\334\243\275\030C\250<\231\255\270=\223\337t\276\203?\351<\373\355[\276\243\361\000\277NFs=~\241e>\275\306\360\275_r5\276\322\256)\276\255m\250\275\323\267\211\274\327\207\027\275\336\316==g\223\020>\256\'*>\307\363\212>\333>\234=6\257i\276\345q\210\275\177\006\222\274Io%=\211\301>>H\326\200=\331\215e\276\215f\304=_z\001<\302\234\206=\270\250z\276\'v8\276\364\265\250\276\275\n|\274\275(\037\275pw~\276\366D@</X\247\276h\315\\>\305#\223\276\230\200\355=\267\266\037=jy*>\034\002\t>\304G\276<\274)w\274\361t4=\265\307p\273vE\024=\274\322d=6\031\271=\267\211\t\276\022UY\276q,f\274\357P\245\275\226\322\345<\010,\254\275\356-\037>Vv\206\273|\271U>\022\257=>\370Y\233>\350W\024>\347\301<=\035\254\242\275\374\214\220\276R\014\252>\222\333\001>\2677\231>\271\373u\276\3461\361=4n\203<\r\325e\2769\247\241\276\265S\014=\323\023w\274\005\2206\275\353?\025=\260i~\276IMN\276\231e\263=\3774\327=\235\336P>nO_=s\177\002?\020\314\217\276\325X\010\276\177\346$\276L\2339>\255\306\346\275:_>\276\311\224\262=cG\224=*2|\275\027l\375=\017C\200\276\005\036\200=\2412J>\377\242\356\275\021\315\237=\276\005\242\276\315\357\007\275\022U\206=Z\376\344;\323j\260\275\366\253<\2764\035^>\207\354\225\274\210Bv=\344<\227\274$\220\010\275-\327P\275L\212\234\275\227Kn\275T\034\025=w\'\312=#P7>\264\340\251\276\202\245\347=\266}\205\276H-\311\275\3147\340\275\002%\024=\312\023\264=\300\276\200>\342\242->\276\206\263>\337\357 \276\261\206.\276\204\035W=\014\355?>\024\375\244\275=\\\245\276\311\216\223\275\320\333\357\276\025\0201>z\231\235\276\331\342\026>\025\'\332=?\225\032=\304\265T>\315\201m=\316\236\201\276\265\302\320>\270\306\375=\211\236\031=0G\204>\006\266\236\276)\212\022\275\214\001\037<\010\353\244=x[]>\177}\202\275\234G/=nr4>\246\0342>\264\227\241\275G\340\347\275\316\016\232<\253\313\343=\304.\354\273\345\024\320\275\337\216G\276y\004\205>(9\327>\243\237U\276N;\\\275\271\2330\276\035\265!>\251\032\035>\207?]=h\177\027>=\374s>\327{\361\275\366\007S\2752\242\014\274\332\312\345\275\310V\336=\016n\032<\375\365\321=\255\271\223\276\020\001\205=\343\326.\276OOf\276E\220\261=<\352,\276\033c\243\276\206\320*\275\216\275\000>\305\234?\276^f\t\276\246\006&\2751ux=\277\257\364=R\023\232\275\220o\252=\325V\312\27513\200=uu\000=\354\201[=W\r\226\276\324\251\311>\220\274\265=\351P\203\276p0\222>\204g\014>\272\030C\274\237\277\017:1\342\260\275v\324\031=%\301H>\3231\"\276\337w\375\274\177\240\007\276\005\371\242\276P\270\240\276/\356\026\276Y\351p\276\302\257V<2\036\024\276\346\221\232\275\220\017\206\276b\"\273\276\201\005\346\275\336}\340=\271\375e\276]\001`\276-\240\266\275\007\201\024\276|\335==V\356P>=%}\276=\210\275\274\332\373Y>,g8>s\325\223<gM\r>\222XE>u4\312\274\263\351\340=\2025M\276kE\337\276p\2711\276\275f\303\276\223\367\211\275\373M5\275\253\305\320>\327\377\n>\010^\027\276\021u\370\274dw\004;\245\267\204\276\262V\034\276\025\202\032\276\004\262x=Js\202\274nPC\276\3147\215>p\000\376\275\375\004\226\276r\272d\276\364\316K\276\033\"E>%\322\220>\347\306Z>\2755\004\2766\276;\276\010\002\357=\330\347\030>\2567\211=v\300\006>\301\2265=\372\257\340<~\376\220\275\342\004]>MYu>\004\030m>\247\021>\275\251Xc\275\240\2215\276\357I\017\275\026\362\251\275z\304Z>N\327\311\275\001\177P\273\030!\223\275{\202\361\275x\025!\274M\"\213=\306\313\365=\030\371\205<\342[\315\2760\262\214>\312\254\245\276l\223\304\275\272\003\211\273\241\216\374=ol\024\276\336@\305>\035cI\276\240\025\006\275g\331\021\276\32579=O3\203>\362\351e>\266\253V>O\037\252\274\217\374\220=\n7N=?\205\353\273\025\3239>\277\367&<3\334\361\273\311J9\276\311Gr>\367\217\254=\367\362t\275[?\032\276\315\024m>X\257\325=\324\034\023>\205\025\235>\336\323\\>\254\234%>\211\222\361\275\257P*\275r\030\t\276\206\023N>\352\004\216>\352\215y<\251nv>\354\003J>\244\t\005>B\016\014\276\026\014\303=\236`\251\275\232\351\217>:\020\231\275\215\365\216\2768_\276=\343\246\305\275\345\302*=~\337\256<X\327Q=\233/\233=\372\036\207\276\364\261.\276KOr\276X\354\207>\355\003a\276\207qW\276\351\356\271\276\0227\007?\2477\021\2757ei\276\240\231Q\276S@\354\275h\317L>wrJ\275~\303\033\276\224\317\">\323\213\206\276\356C\014<c+\016=iy\353\273^\265\242\276Ar\177\276\030a.>*v#>]P\317\274\330Wi>\'\341\275=@y\272\275 \227O\276i\372\270\275\336\021\035>\352\177->w\251\205=\326\271\024>\312R\265=\262a\007=Bur=,2?\276P\227y=T\027c\276\215\362\323\274\316=\251\276\333z4\276B\033\263<\025\354j>\366\226,>\2674\365<xNe\276^p\024\275\326\343\034>\\\334\204=\266-\325=E\324\203>\032\0233\275,P\253\275l\223K>\375k\342<\300\006%\276\324\254\000>G\357\271\274QG|\276\241\373\376=\352#\"\276u\231\252\275>\347\030>\273,\243\2762\332\301\275\316\200\232\276\315\026\317<DC\031\275\273\370\335=\226mM>\262\261\033>\033\007\335\275_\276\201>\275\333\203\275\252KZ=\274v\217\272\305f\346=\364\341p>V\245W=\271}X\275x\213\210=FQ\243\276\024c\'>\374\024.\275\016\341j>\346\231\355=!<M>\246\037\274\275\374\256?\275\327\330H=\314\201\304=\264^\031>\347\320V>\304\270K\276\364\022\021>\226\343;>\031\346\007>\302\314\030\274\023\006->b\'Q>\225\030W<\236\232\035\276\205\344\016>c\272\333\274\260\335\244>\247x\225\275\023\374\036\275\n\244%=\317\016J=\366\205/=\226\374\263<\235t\004?_\332\264\276\347\037\205\276[\024\311\274q\343\021>\217\"\256>\277\'s\2765+&\276\313v\305\274\264\321\231\275#\2774>\275\3458\276\312\316U\275\223\324\350\276\346G\245\274o\032\254\275o|i>\304\225\030\276\3221\363\275#\226\371=\314\224(>\315\374x>\030\302\345=\255\341\223\275\002\220\301\276\227\3316>{\203\352\275:\273E\276\253\\q\275E\231*\276QK\037\276\256\207u=\r\271H\273t\324\023\276?!\222=\340\2322\2765*B>+\262\331\275ts\261\275z\235\227\276\225\242c\275|j\323>8m\341=\200\204\010\275)\252s\276\300\326/=<\375\t\276l\220+\276\227^\210>]\023p>+[m\2765\303\374=\305\326\251\276\242S\005\275r\t\262=\243\361b> \366]>\352\211m\276\001\226->\355H[\276u\\\035\276)\363\264\275\206\353\336=\251,\303=Z#\321>\035\352\035>\3303\307\274\300\3027\273\307\302\023<U\002\314\275\265} \276\006\307\253\275\362U\271;\2775\256>\245 \206=,\217\276\275j\320\200\276O\r\004=\244\304\341\273\331\223\376=\222\277F=\214j\203>\270\200q\275\347\313\376\275\361\370/>~\321\033\276\221\211\377\273\362\324\'>\345<z\273\300#\346<.\033\240\273\351\252\033\276\224].:\264\373*\2754\242\200\276\356tc\276?oY>\201\023\007>\322\236->\240\323\355\275\".\230=\246\237\245\275\267\344\025>\216wg\274\333\344\313<\223\265\221\276\025\221\264>\020#U=T\245q> \016\312>\237[\035>+\320.\276\343\315\234=\356e\366=\227\215\000\275w7\246\276\212\353W\276K]\022>Y7\363\275\001;\036>\271\350F=\313jk\275\326\031\205\272\245k\212\276K\266.>\323\014\254\276\253\215P\276\030\306\244>x\2360<\255Q\236\276\253\360\036\276\326\311\235>\005\000\252=\337\306\222\275!\333c\276t\013#>`\224.\274&\254\236\276[\246\">\246\017`>wY\003>%\210\231\274\022k@>+{\270=I\317\324\275\207\024\241=\240<f>W~\207\2753\0376=C\333\206\276G\275\037<\323\342$\2764\304Z\276\311y\201\276\341{o\275L\362-=\026|\222\276\2672\217\275[D&>\216\377\255\275\017x\006<\323p\007\274mx^\273\331^q=\"\nN>T\\\024>\014\374v=~\321\302=z\024o\276}\2413>\346\237\213\276\3631c>\377d\316\276\221bX>6\230?\276n\t\371\274`#V\276\025\212\222=\322!\236>\300J\202\276\263\336\222<\301\2510=>\300\374\276\205\240\003>N\320~>l\356\267\275J\233\246\275\262.\347\275\335\365\003;y\031\356\275#\3075\276\2021\311<\006z\036\276\351\213\226>\231\232}\276\316\014\302\275\r\367\006<\371\235\257\275\367\244\020\276i\000-\276\240\027Q;\256i\226\275\022/\207\276\'\201\365=\357\027.=\017W\316\274\225\2616\274(\004\305\274\223\376\271>O\027\177\275\204\330\010>\2356_>\362\211Z=%f3>\213\030\242\275\333\234\356\275\324\274\260>\341\322\211\276(F\014\274\373*E=\003\362\261\276\224xf=\032\217J\273\354\363\377=\'\\\020>\346\026\361\275\345\001V\276\242N\365=\340\3031>\0202\260\275\234f\267<\210\021\231\276S\220\177\276\026\304\202\276B\277\357<\021\263\340\275WX\314;\312K\370=\375\261\272>UFH\275\204E\314\274\314#\"=oS\253>;.\023>\257\336\204\276\tN\222\275\266T\032\276Y\350\211>{\245\352=\354i\373\275\307\014$>\250\370r>\222\224\035\276\264\225^>2\242\347</\201V\275\246\0273>\352\344\300\275\236N\007\275\001i%\276d=j\275\241\303N\275\303qn\276\030\252\364<\321\246\303\274\320\311\210\276\276D\303<\017\003\215\2765\265\026=\003\353Z<z\033w>\303\301\014=\235\204v\275b\240\304=\365\226\313\276\220\003\275\275\232\r\244\276@7\006\274M\320\014\275\327;\224\276\010\\\216\276\277\2641=\'-\221\275cr?\276\232\2275>\224\234\202>\024\333\257>\031\372J>Z\216^\275\353rt\276\254\323\337\2758\2205>\345\256?>\r\242\376=\027\323\225\276\226\026\003>\355\304Y<\224\332d<\233~S>\273^\247=\243u\034\276\263A\202>\207s\345\275\273Kg>M\206\247=\367\260`=t\330\023<{y0\276\363\321\177>#=\245\275\204\241\203>\201sD>%\251K\276\377\222&\275\020\304|=\\+\377=\316Z%\276Iw\242\276\363z\023\276R\002\374=\367za\276LK]>q\210r<\276\347q>\362\017;\276\n\204\271=\375\020#\276\356\n\000>U\321,\276\013\307*\275\347\'\216>,\241\031\276\373b\212>\347B_>\244\274\006>d\256J\275\225g\025\276\251\245\352\275mp8\276\340\371q\276\025m\035\2768xN\274&\317\033\2769\350\326=\016u\001\276GI\303<a\272>\276\225\350\332<\023s\241=Q\324\327\275h)\036>E\213\367\275\020X\245=y\305*>U\351c\276-\245\325\275\342\254\\\273\201\035C\275\311\325\215\275\373\352\223\272\257\322\202\276\325\367G>c\271+\276,X\255\276ZF>>1\324+\276\260\323\336>~\336\013<\257\225\272\276\"\311\250=O\2019\276\331\342\215\276\222X\302>\330m\377\275d:\202\275\275\241\001\276\377\214R\276pC\207\276u\007\303=\276\337\013\275RHn\276\267|\372\275\\\364\327=V\317\355\274\010\240\370=A\006s\274\345\350\347\276S7\031\275\225x\'>\014\031\r\2756\005\022\276\235\205\324>kKk\276*\267B>(C\346\274\304t\250\275\233F\022\2764\244\313\275/=\220=\211\236\237\275\231\215\206<\306\261\266=\313v\025>\373\3775\275\362\302\362\2752Uk\276\355h\265==vU\276\215\340\301=Er;>3\0274\276\211_\027\276N\367M>\243\310\020>\342QT\276\263\2264>&&\245>\335B,\275\321\221\027>aJ\r\276x\224y\276rJ}>Au\266\276\273\024!>\366\3009<\004l\021\276\233\313\270\276a\206\233\2767 \356=\366\324s>O\362\001\276Q\320\253\276\003\313l\276\371\221\212\276?\003\036>\200\332\206>\010\370F<\377B6>29Z>\211\345\207=<\256\017>.aJ>\204WB>\010\276!>\'5B=pNt\276E\215\362=6\222\265<\274\344!>Uz\302=\002\272\330\275z\024\n<t\321\201\275\337\257\231\272T\021.\276\244\351\227\275[\347Q\276\203\335~\274\321L\253\276H\336\353\274\235V$\275s\303\010\275Q\202\374=\275OB>\3072S<\324\n\337=;\304O<\362o7=\342\271o=\374P\234\275l\272\237\276\023\374\347>\345\240r=v\356\204>\247\375\216\276\030\342[\276%p\263=\031\264\305\275\213E\007>\\\251\356\274\370>\210\275z\322\234>\3727\277\275D\215\273=1\303J>j\276V>F\031\031\275\317(P\275]\210\345=\003\3045\276\203\222\242\275\377\033\006=\353I\273=\2431\225\276\370\227_\276\307&Q\275\210\033=>\314T\326\275\177\036\271\275\226Z\224\276\n\214\251\276\357R0>\205\205b<\nH\250>A\203i>\374B\022\276K\343R>C\016\267>c\324\212=\227B\227=\260\023\021\276\226\226\036\274KU\013\275\001\340b>\334Y\205\276\027nS\275\353\270c\275D7\213<\330\223#>\000\001#>)v:\275\302,k\275\010a\031\276W\332\233\275\346E\"=%\334q\274k\310\200\276T\355\214\275\206a\350\275\371XN\276\304\322|\276|@\';K\204\354=\245$\324\275\0248\262\276\227\037Y\275\017;5\276\240\253I>\255\013\031\276~\213\274<\220\2463=\270P\230\275\314\246 \276\326\214/;?\r\203>L\302\026\276v\252\220\275\023\223\034>T\244<>A\370\277\276-d\371=\246$}\275\016\036\037\275\025\276M=\350LM\276\266f8>\006\231\201=&\033\326>ei\316\275M\341I<\224\251\265<+b(\276\307\352,>\363U\245;\236\267q\276Bz\027\276\251\311\034>\356b\306\276\305\377-\276V\372E=\024\000\213\276wm>=\304\262\214\2768JM>LR9\274\274\274\305\275\211\036\302>\244B\302\273*>\212\2759\213|>\252\022\320\275\377\241>\276\333)\033>\323\231g=+\303N\276u\370\025=(d\325\275\002\201z>\005\010\\>G_\367\275\321\370]\276\031`\224\276\251G\227\275\3048\010\276\225\333\305\275\241\177T=j\332\240\275\022D&=\241h#\276nt\203>)F\001>\374\237>>\266\203\327\275\266\013Z>\242\350\243\276\304Bm>\203\345\034\274H0\304>\356\315\312=\373\346\232\275\2463K>D2\316\276\177d,\276\200\317\250>\201\373Z\276\324\021A\275\243\205\014>\032\002\006=\014\350\025\276_\200\t>\333}\317=vZ\355<S\261\313=\r\274\217>\335\031\311>\373\212\010>d\201\013>\232\030\312=\313\341\240=\037\346F=\030\032\257\275\2473*\275XI\224\275\244\362T\276Z\030\002\276\236\276\272\276\300q\313=~\377\215=\344\340\377\275\332\t\036\276\271u\323\275\025\205\020\275\302\017\342\275\371\300\253=X\330\200\275\375\030\342\275\302\205\226\276\254\2531<\300\033<\275\334B\020=\000of\276\304\260]\275s\373J\275\032\2354>\007\'\007\276\315\277\327\276\036<\251\275\217\334\236=\224\214\226=\277O\r\276\352\355\305\275:_\037\276`\207\036>\360r\000?\3469\352\275\231\214\324\275\356\312\260\275\376TJ>0\242\031>\375\014\222\275\350\301\225>\204\332o>\363\304m\275k\246\211\276&\352\025>3\236\004\276\n\010\274\275\374\262\026\272\375(E>d\226T\276\321\206r\276\253_V=\355\334\\\275\255\005d\276|\022[\276\t]\026>rL\236\275\300*\204\275\034\305\260\276-\314\240<\377\372\202=\002Y\263=\226HK\276\367\253\215\275\372\r\333>\261K<>\211d`>b\022\274=\240\272&\276]+\223=\241\002\302=\000\355\375\275\002T\232\275\377\3429\276\213\032\241\275q\030k\276\301\245\010\276)\262{\275\n\334\225>\242\033\370=\223\256\002=\317\010\037<Kc\216=:mF;\224,\222>\2414c>w\242\266\274C\374\224>@\033\215;\365\336\207\276\206\201\320\275Z\000!<\246\262\224\275\247d*>\271\250\320\275\376P\365\274+\353\014\276\3513g\276M^\036>\226q\373=\263\321w\276UqB>\232-\356=\035\314\267=0\213\246>\"\317\\>\251%\027>\016\276\232>\217\316s\276\25651\276\276a8>\232p\271>\245\374\235\275Fb\257\276\"Q\265=\240\354,>\337\327\026>\317\201\n>{\177:\276\304\004\354\274\320\272A>\033M\032\276\213Y\016\275\374\002\000>\242\017\004\276\220\205\234<\331?k\274\037\250\003\275&$\233\275K\212\356\274_\317\311=\225g\265=\341\036\n>=\374\255\275\247\376B>\232{\037\275\327\224\331=\220\3601=y(K>qF~\275\211\375\313>}\027\366=\327\255D\276\315\230\310=~\374\251>w\343\024>\246g\353\275S\022\275\275\353\034A<\233\230\356>\236t\257\272\251\265\260\2756Nk>\024Li\275\021\355\365=\273J\002=YN\205=zd\221>-x;\276\327\033L>\331x\031\276Mg\371\275{-\220\275\253\350\316=\271\217\303<-\243\304=mY\277;~\037\266\275\373\352\367=n[\325\276\035\346\215=\037%\024\276\272\245{\275\030\272\023=\325H\016\27676\343=\254\213\211\274(\277\243=\211\314\270\276t.\000=w%\266\276\361l7;\325\240=>\316\256\242<\333\020;\275\202\321\230\274AH\001>\237\227\212>~\247{\276\216\332\267\275G\340\213\276\342o\347\275\313\371\035>\240\222:=\264\016\002>\365\275\205=\237f\205\2768\024\214\272\212\224\200=\327D\307\274\032\274Q\274\306\026Y\276\241\254O\276\267E\363=6\332\364>}\314g<\376\001r\275\252\314R>(\355\225\276\3527\227>f\236:\274\032\354d\276\326$\013\276\271\270a\276m\307\006>\221\224\365\275\254\322\007>z\227\263\275\221\270]\276GIm>\341}\230=a \235>38h>O\026\037>\314s\204=PI1\275I\225\244>\226\232\214=\377\025\234\276\232Fh>s5\220\275\016\033\267=\356\250\344=H\026\016\276\031\365I>\320\022\021\277\030\020\310<;\351\207\276\337\375\203=\004I\203\275\243\\\013\275\250\234\203=up\247<\202\036\023\276\214\323\222\275\312\333\373=O\227\316\274\177\006,\276\203\376:\276\253\306\325\275\277xe<c}-\276\037\272\256\275\307tS\276\343\351\002\275?\013\333=\254N\243=l\002w=X5\254\276\322\343\231;\270v\262\274v\201\031\276\257\341\"\276\317L\013\276lX\242\276\'\351\336<\370\215`<\\\346N>\t\354$\276>(\205\276\313\302\270\275\261\017\016\276\2704\232>\204\244\214\275qY\t=~\230\\\276p7\270>\017NY<|<\267\276\006\365\300\276\0219\310=\370\004p=\2116\200\2736\302\255=\036\002\031=\201_\211=\277\017\242<\003\034>\276s\366(=>\363\n\276\356\254\322=\036M\236>MR\021>\355\217\360\275T\362\221\276\367\374o\275\302\016\001\276Sk\243=l\036\260\276i]z\275A\361\237\276I\313\210\275\245\347b<oTg=\024\341\001>J\013\026\276)\005\272<\265\343\222\276{!\005=K\330\234\276d\235}\275\031b\255>\256}1>\251T\021=\304\306^\276T\323\234\273L\232\375\275[\304\261\2762\251\243=\017E\225>\266;f=\314\252\014\276f\366 >\031\327\300<\375x\333<\217V7\2759o7\275h3\317=\010\247\355\2752\313\020<D\027^=\343\275\017>\240@A>\300\331;\275\214~7\276\252\240m>\'\033\022>\2547y\276\340\014\203\276\233\340\266;(\t<>l\204W\276\242\210\013\276\006\376\025>\321*\272\276\333\021\214\276\246\024\336<\302\013\236>V\236)>\306\326\323<\3372\370=k~d\276\204\003\035\276l\360\356=\005\0335\275\350\332/\276\210\230-\2762*\026?\2244\206\276\240\302\300<\303~?>\215\237\005>\266\316\234\274\023\302m>\255\207\007\276y\351\362=\327\322\347<\206&)\276D*]=\017\214Y>\242\335p>\310|\255=E\277\244\276\350\375<>\234\373q>\301\333<<\375R\216<\224y\222\276P\202\224=Z\370\277\274C\242\021\276\260\025a=$\201U\275\236<\267=\243\265%>\316L\266<\214D\204>\307h==\325i\342\274\235\304$>6~H\276Y\307\240=N\344\023=\244\250\274>\365\0215\276]Y\037= h\261=\301\233\026>A_\270\274\330\031\010=Z\264F\276\340\204g\276\261\235\207\275\2737\202>(\246\251>\026@!\274\207=\305<\006\323\260\275\253\002\265=\025A\032>b\243\372\274\317xz>\253\216\r>\242\t\234\276\310+\017\275\213C\217=\',2>\027\315k\276x9m\275\364\355\031<\244\261\003\276\323\345\356<c\334\232\276x^\374=\342\333f=W-\210\276\343W#\273\345x\263>\322\307T=\213\371\201\275rD\037\276\371\265V\276,\237\314=i6\333\275\370S\362;\213\343\035=9\253\033\276\203\026\341\275\316pF<H]\014>\212\247Y\276\351\370\216>0\033:>\341\3376\276\020pP>\020\207\303\275\214\244\000\276B\320R>\273\003\325=s\010\233\275\376\301n<\273\354+>\004\331\220\275\372@\205=a\204\205=\237Uj;\253\332\230>\014\322\250=*f\1779U\277\325=\277\323\021\276\222\234\202<G\024(\276!\273j>\017\3059=(\216\326>\020k\311=\260\tu\275S\352\000>\342\010\334=\210\221\014\277a\003\263>f&\246>\036\2615\276e7\276=\267xq\276hE,\275\016\272&\276\032\260:=\256\324\212\275\356x\001>\352\001\267=\254Gf>T\2316\275\256\344\236\275\374L>\275\002\037\242\275\261tY>\344\222.>\342l\360\275<\206\000\276\256\305\247\274\226z\213>|4\'>?\202\366<v\237o\276V0\336\275m\001\355\275T\226\000=\\\307d>oyb\276\203\010>\276[\"Q\275\377\372O\275\231\020}>D\r\373\274\350\t\271=6\325\241\274\212ku<E\366\\\275z\010\267=u\211\360>6\323\262=o\202\001>\024,R=\'\200\007\2763d2>\263Q\353\275j\347{\276\332\321\227\276\270\350\306>}\217p\276-a\372=\235|6\275\317\211c>\245\ry>\215\026\323\275\307{*\276gV\353\275\n\0136\275\2036\212>\321y[\276b\373;>;\307>\274l_\224>xOy\276\317\313\243\276\335_\007\276\023\n\034>\323f\235\276\231t\203=\226\303\341=A\'\241=&\272\255< \345\005>\345u;>^\235\312<\346\362 >\322\270\207\275\374\313)>\316\031P>\271\331@\276\307\250\226\276\213$\362\275Ig^\275\202Q\">P\245\250\276\350\377D>\341\223\326\275YW|=\214\263R\276w\372\344>\322\300T\276\250z\201\275\021\245\311\275\202\234|\276\036\203\177\276t\207B\275;g\325\275W\032\005\276\266\373D>\254[o=c\223\350=\216\353G\276\035nx\275\343f\335=\357\013\022\275\374\262\177\275N\370\007\275\307\267\010\276E&\036>g\273\332\276Qj\016\276\340V\374=a\024\345\272\017Y\221\275Kw\262\275\321o\307\275L\375\212>\212\230\215\27523\"\273\027\023T\276\300\021\033\276\321un\276\212\034I\276\354\305\312<\306X1>\353\231\205>\245_\004\276}*9>\241rQ>\327-N\275\257\260\300\275x\210\200\276\014\252\241\276\271A\202=T\334\213\276\301\330K=.`\004>\2212@\275\273\2222\275V\333\324=\322\224$\276\232/\377\275\363\265\325\272\364\254\323\275\233m\016>\251\330\344<b/8<N\233\317\276\264\242G>|:\212>\257\364\361\273?\232\000>FE\010\276\347\362\336=+\353m>\324\222c\276Y\341B\2763_\252\274).w:p,A\276\227\014\352>\227\255\351\275\000\262q><\016r>\005\177>>\037\273T\276\20673\276p\316\267\276\257t\324\275y\027R\276M\334w>\265\250\366=g\274\332\275\033\363g=\372\367x<\217c-\275\301\247\201>\025j\257=\365@,\276n{v\276R\021\000\276\370_\212>\215W\262=\235F\203\275@\336\223>\036\252/\275\211\000\213\276\276\370\312<h\330\250=\215\326\300\275Z\002>\276\233\272\">\366T&=\374\363\236<\027\362\256>\233\325B\275FW\241\275\230\264\007=\037\010\200>)5\220\276\275Q;\276JX\254\276\032J\341=\006\305\227>\303\nQ>s\3256>\260}\341=\007\340\331=\216\314\217>^w\007\277\331\373\216>\347g\201\275s\232 >\000\366\033>\243\302I>\033\213\202;\315Ms=\210\366\216=\261]4=\373\245\254<\340L[=-\323\024\275\253o;\275\355\271\332\275\301\267\005>\ra\362\275W:\224=w\000\027\276r\236\314\275YR\364=\"]\032\275\017\351F\275\277\204!\276\212\324\002>\017~\036\276\256\033\025\275\277\374\232>\270\310\214=_\001\345=\363.\025<\274-\341\275\022\001}\276\017\000\270=\316\276\277\275\311Z\273\275\342\323h<\365\262\201>\337\3467>\344\350\016\276\364/\265\276\006`\034>\213\372 >\347\223e\273\334\342\027>\017T\261\275#9\240>E\346\022\273W[\304\276x\325p\275\016\367(>\345\221\250\275\307\'^\276z\024\347=\320\375\212\276\032\366R\276!\020\033<\377\332\257\2760\n:<\322\350\223\274u\260\360\274\257K\204\276\216j\353>\203U\232\276\237\336i>\341^\354=ZD\027>\313\021\020>\361\336+=N41\2762\230\336\275q\305\t>\215\025\232>\310l\330\275\362f\204>\340Xj>\004+&=\305\234$>\246\002\010\276\340[\327=\201]\222<\t\265d\276\323r\241=\375H\254=\214\257C\276\266\313S\276\246\024\227\275\266j\003>G\306\203>\224\377\t\276\273\225;\274\027\264L>\314\374R\276\257\354>=p\263\200=\377\265\374=\313\244~\276)\231\001\276\003\226\361<\373\217k<X\211g=+\307\r\275\014[\021>\360\224\307>\362\204\031\276\226v\332\274\320U\255\274\327BB=\3473g\276\rC\210\274\013\004V\276\313A\206>\2014\001\2769{b=V\351\371=\314\244\206\276\344\277=>l\344\363=%kf>\305Uo\276k\354\241=\210)\036=\367[I<\233ID\275\332\321\210<\260s\245\274\205\330\010>\347>\351=\2618\226\275\337\316\223>\031\275\202>8\220;>\243\337f=\365\244\r>\344 \242>\360{\364>|k\032\276\256-\360=\3715g\275\332\274\031\276#i\242\276\331\317\353\275nB\037=\217\332\246\276\202\017\236=Y\005j\275\201\314\032>\240F\373=\331(\211\276\331\022k\274\376\233\322\275\304\237\325=C\007\211\276\033)S\276\232_\036\271\337N\n\276\277\344#\276o,\207=O`\246\276m\233\205>1\025s\275/\355\201\272\236\2542\275\331\350\007>\334\022\032\276\034g\245=\304\310\345\274!\276@\2739Hm\276\363\2152\275+\310#\275\343z\317<\216\307\"\276&\315\346=Cu\251<\004\256D\276\353H\270>\224\014\014>)Ae>\334Vj\276\305\t\231\276\tU,\276"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "AddV2"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "7.\014\276\000\206\003<\006@$<>\376!>Z\214c>\333\311d=2Y=>\212\243\330\274\273h\275\276e2\023\276\314\265\331=\246\241$>\033=\272\276|\377\202\276\305\177\003<\020\034;\274f\373\342\275\326\336\313\275\321b\'\276\243J\350<\333>\231\274\034\023\301\275\330\200\301\275Om\322\275\2361->\202O->$Vs\276\241\254P>\356\024\214\275oI\275\275f\016 \274\226k\317<\334l\017=\260\240d>J\267\274\275!\226\226\275\005\255\r>\033\224\260=r\t_>d\241H\276Q\226B>\263\305\264\276=^\256\273\352\3134>\007\024\254>\302C\253<\304%\226\276\014c\261=\372\266\267>!c\335\274\331Q{>O\014\200\276\001o\267\274<=3\275\356\330.\276\371\207\037=f\210\204>\273\224g>7|5\276\302[\010\2765\300g=9\007\200=\272\360\244\274\311\367V>v\316\367\275\353\235\035\2750\223\235\276_\316\034=\333w\310;\344\327\324\273q9v=]Z\253=\332\276\251=\247\351\335\273}\354Y\2734\202\245=Y3o\276;\377\367\275\231\267\247\276Q\221/>\324\302\257>ma\372\274F\267\304=\345\3679\275 \237\231=\345\327\014\275O-\004\276\320\321\\\276\374\373\214<9\350\030>\351\303c\276\270\323\221>\365\033\207\274\221-\243=\300\003\'\276\213\2006\276VHS\275\320\274\274<\237\221\253<p\261\r<\333k\373\274 \365\232=\210\033\225>\213\341\034\275!D2=\'\312(\274u\251\325\27619\353:W\374Z;iJn=Q\025y>odv=iR\212\276Y\207\276\275\025\235\005\276\355L\311\275\303\322%>\271\264\311=\301\n\001>\200\2507\275\020m\225=\213\177\216\275{I\004==\n\217\276-\374\313\275=\201\000\275\274\002\253=\374\314\210\275\335\235\235\276\013C\004?|A\365=\377J\023:\353\323\202\276\205x\337\275X\270\230\272i\026n\276#\346\220\274\374%M\276N\362\315\275@\274g=kH\361=\\C\370\274\030\2723>\207\300\333\276Q\016\225>\343\333\000>4\267\t\276\342\222\030>\347\006\241\276\t\220T>\330\226\204\275G\210\331<\262/\227<\346\021\007>:\367\303=R\273\276\274\330\377\224>\256\310N\276y\024\261\275\362\344\023>\223V\330=\362\005\263\275(\"\316\276A\356\010>\365\206\036\276\r\356\212<\035\212F>$\266G>\325\304>>\t\177M<RC\026>\001\035\205\276\r\270\236\275\n1\033>p\236\n\276=\224\277\276\306\355\204\276\341\027\027\276e\2468;]\"\254\275\235\265\323=\304\342t\274\024`s\276\264\247\260=\367S\020>\275o\034>\316\337\316=L{%<\277\346\376<\335\344\264\276\344\3122\276l4U>\267\266&\275+\005\357=i\241\250;\2208[\276`\311&\275\234\235\347=\023\303W\276\340\350\216\276|\205\023\276\366i\013\275[}3>\225\032\222\276\330\233\030\276v\340[;X\265\237\274\322\032\377=`|\206\276g^\022\276\364\232,\276\0375\204\276\253\217\327\276;\250\201\276F\3157\276\311\356+\276\0004\014\275]\376\027=eG\316\275\343(\315\275S\0067=\322h\246>,\202\035\276\272C\353=u#\305\273\005\371\224=\001\3237>\313\302\370=\261\276\327=^\2429=HDF\276`\277\313<\021\375\326\274M\370/\275J\034|\276|G\260\276w\240E=\301v\010\276$\214\262\275N\366\250=}Eg=\224\267\326=\365J\317=!\352h\273^\351\312=y\203\">\230Ia>\306\232\341\275\253;\006>u\310\227>\303`\253\274\333\343\037<\2039L\276\2639\022\276\'\336R>\315+f\276D`\024;\313\241;\275\212\256\244\276\t\205\371<<TS\276!3\031\276B\223\324=[\311f\276$\360\205\275(,\216\276\005\360\353\276H\361\202>\234\n\235\275\333\367\250=w\211V\276`\177\271=\372\215n=D\005\325:\3331\212\275p\237\330\275\271\036`<\271\207\365=,=\234\275UH\240\2765\215\335=\365\355\243\276\240\027\351> \353\346\275\213\016\013<\273\317W\275,/v=\3345\226\276\247\336\333=<u\203\276\234\317o>!\226\033\276\016H\t\276<\337\241>\r\016C>\027\372,=\243\004(>k\243x>C\362\020\277\255\251\347\275\213\235|=Cg\">%\211Z\276\306zv>\336\344|>40\257=B\220\373\275\247p\200=h\316g\274\253Zg\275\354\346G\275\222\352\017>\233*\370<I\232\177>\rsJ\276\374\224+>3\302\375=\222$\253\274g\204\003>\245\021\321=\001u\352\274U\305\010>kR\235=\245\223}<R\251\237=\210\002\205\276U\343f>99\010=\352\352\253\276\035\273H=\373Z\254=\342\027\223\276eB\242>\241w\016\275\026\257\220\275u\345->\0362P>O\270\331;\374|?\274\362f\372<\324\350\002=\001P\231;\312\024\322\275\323\344x>\202Z\234>\215MX\276D\302u=\210^0>\256\366\021\276\304=\226\276P\333\301\276\227Gs=19m\275\233-\325=\215PL=jy\223\275\253\341 \275\376\177\274\274[c\031\275\316\215@\276)N\311>\203\037K\275\034\241\342\275\372\216\263\276\034\343\000\276\250\023\215=\353\351Y>\220\326\036=N\364\270=mU\351=\2754\323\27642\031>\313\371\020\276\331\205)=\223s\005>\260\206\221\275\317\000f>mk<\2751\253k\276k\257Y>\225\357l\276I\351Y>9\235\212\275\234\365\004\276\2052<\275\325\323\263>R\374\355=1\200\241>\256P\277>N\311\203\274O\312\027=\035\001\r>&Y\365=\254\352\014>\357\030\374\275H\230\374=\375J\032\276\353%\243=\266!\362\275EPN=T\233N\276A<B>\220\025\271\275\277\354\335;y\017\031>i\001\314>\202\242K\276\230\253\375\275\222\344>\276\341\301\215>\302\302\020>a\333z>p\232\213\275+2\367=}\242\n\276#\027:\275\200\247\021\276qs4\276\"\374\232>\370w:\2751\034Y\276\204\315\236>!\301\354=\231\302\244\276\335]\204\276\'YU>K\206\230\274pX\324\275\2431\331\273yy\301;\360\014\224\276\0372W<\303rV\275\004\037\217\276\310,\242>;X\344<\212\3441>\214\371\005>\361&\243=\023\216\262\276R\340:>\344\010p\276\266\326\301=,\213\352=#\2409\2764\344v>\304\010\243=\014\346\230>[z\301>\232\026\231=\203\326-\275\366\037B>\365\2114\276\210\220\317>\312O}>\361\201#>G5\031=A\364(\276\347\231I=\272r\035\276\355\357\354\274\366\032\000>\240a\226=\251x\217\276@8\037:\022\221i>,\376\254\275\356\004\327\275\023\031\307=\316\020\244\2768\256\247>if\247\275\021P\267\275\323v\247\275\016\217~\275\'z\201\276\335X\377=\213\000\214<\255\374\360=\205\245\021\275\354\341\010>\233px=\225\253P>\302\326i=X\365\371\275n\333\273>\223\030\277\276\367Wf>\223p\216=hi|\274\303\252\030={\r\235\274m2\362=\'\035\002\276\007\313\240>\323+\177=\236\021_\276i\305\224=\355\307\233=\205\324\030\276D(\212<K\214\371=\037)\264\276N\351a\276\310\022O\275\t\337.\276\2217\202\276\205? >V*\214\276\364\361R\276f\374\224\276\001\264\001\276\312\002w\275w\030\252<\236;\037=,6\216\276\357p\247\275gl\220\275\344\315\014=\373\356\263\276\265\270\214\275c\r\211>\0078\266\273\027\206Y\267s\376H\275\331\237<>\345\263\274\274V\r\026=9\244\264\276\307\366\207\275\023\002L\275\177#\261\275\303\213\231=\tjp>\004\235J=p\037T>\204\357u\276e\267\210\276&\306q\276(\335\255=\014\215\272>eh\352\275}\306e\276\364\331\315=\317\024+\276\305`-\276X\001\005>\277{\316=4\312\334<\323!;>c\276$<\014\206\010>Rb\000>\243\033\027\276\221n\320\275\274\311\013\276N6W\276\336\247x>p\312\237\276\342D\220\276h\0059>\212\004\177\276\333\030\331\275~n\003\276\206<\346<\033\241\226=\222\032\255\275\002\336;\274\343.\202\276\222\311^=\013{i>97\271=x\200\216\274\024p\364=\3453U\276>Sj\276\251\277H\273\r4\266=\362\001\266\275\346\244\025>-\256{\276Hv\213\276]\003\306\276!\314\260\275V\007\237>\220L\304=\365\002\322>I\336\013>\r\261\005>\361\374B>\207\006\037\276\353J\267=\035\032\334\275>\\,\276\335\205\036=\252\217\202\275\2626\264>\rOd\276\000\256\237>\027\215n=Tj\337<C\367)>W\203\">yWE>\234\240\027\276\247E\033>\366\313y=C\324h\276-\355\202>7#\262=o\033\030=\313\2146>*\007\020=`@\306<[*\227\276\346ON=\330\273\351\276\177\307$<j\374\004\274v\311\035\276\366\337\037\276\200\245#>\2329O>\271\3510=\217G\277>\013\336\226\275D\206\031\276\001@Q=\216c9>\3316\206\275\255\251\217\274!F\'\275\342\317\363\275\347\231\025\276\333\225\234=\231\325\t\276\236\276\207>\006\375\006>\014\274\262<h\232\363\276\307\357%\276 :\270\274\3622\262=\200\331E\276\242\351\255:)\214\215\275\255\254\033>\333s\211\275\351E*>g\207A<j\025\376=\270Jy\275\366\033%\276\341\220Q\276\340\020\314\274\345\364\315;\362\322\376=U\362\203\2761\014\203>;\341\347>\035l\342\275\247\0330>&V\316=\246\310\031\276\210A9\276\2201\211\276x1\204\274P\305\314=\237OE=\244\210i\276\003\016\201>\341\226m\276\006\273N<\255\2438\274\242\210Q=e\226\264>)\270\315=[eU=\213\016p\275TL\256\275\263\240\346\275R\260\031>\002\222.=r\t\003>\334O\241\276< _\276\366\212\343=a\301\024\273d\003.>\225\035?\276\340\r$>BI\022\275\033ch\276\016\367\375\275%\030\213=\255\243\001=\\X\356\275\225<\277=\302\301\375=47\267=\213\317\216\275\261C\372\275\005_\266=\342T\253=D^\326\276\277\2514\276\365\007\335\275\355\"\277=bVY\276l\0169>\346|\"\276\241\346\360\275\030O\021\275\361\261\227=\306\030\224\274M}\r=[\313\347<xk\376=6\242\224<\300\370\261=\343$\227\276\350D\330=\177D\316\275Jl\214\275(!\005>\336\343e\276\322\271\273\276\304\347\031>O\031\277>\236b\201=M\302C=Y<T=\354\366f<\2528K\276\347\220K=\373\035t\2763\230\302\275f\303\366\275\356_ <\207k\232\274\350 \235=S\307\">\254\231\026\276x\372\016\275\251\254\322\275)\344\325\274Tk\t=Q\322\333\275\316cX\276\010\257\244>\0008w\276\353j\243\276\225\277\035\275}}\255=\251k]\275\373>\235=\266\001r>T\\\252=\t\250t:\244\216\321\273X\242z>\312g,\276\316\232\366\275\273(\216=\rGh>\t\354\360\274\374n\266\275\232\340\324\275\033\302\232\276\327\241\222\273\347\3750=Xi\225\276\003\227P>\373\257\272>0\245\263\275\354U\366\275a\014r\274\334\306\262\275\332\231\020\276u\177\257>\261W~=\336Z?>\276\353\254=\244\036>\276\236\210Q\275\311\245\262\274\214\017\336\275H\266\217>\224\371=\275\347X\271\276\210\254\032>p\250i=\353\353\206>\341\2325>~\210\241=\"\\\206\274\001\367\275:\314\340\031\276\2017\350\274\2015Y\276\223f\243\275\246\337\351=\003+;\2764Jf\276\2178;\275\2378\300=4\377\200>\317`\263>\007\320\216=k\0350\276\002\311\177>\271\366\373\275L\206%>/p\001>\220W\253\276\307\340\000>1\300E\276>\201m>\031Q\212\276\226\334\260>%\344\364<Z\230\346=/\321%>C\234-\276\236\232\225\276\265\210\267\275\001\267I\276(\':>\253\205\324=\002\361V=6{\337=\204\220\020>\242\271O>zC\315>e\017\261=\317\374\237<\214\313W\276\211\022[>^\233\235\274`_d\276\006a\037=\245\241\245\276\216\264P\2750\217\255\275\277L|\274\262\376J>SM#\276\243\332\203>\271\'\355\275D=1\275\226\371\014>h\334\237=W\226\177=J\264\371\274!\305N\275V~\024>\325\374\201\275\333\301a>\033\017\305\275q \300\275tV\277\274\355\362\177=[\335u\276-4\202\276\312t\231\276\303\321%\276\276\352O>\'!F=xy\313\275LF3\276\212\262\327=+\221 >7\353*=\005\375X=\272A[>^\216\266=\274\237\257\275}\273\213>\263\216v>?s\241>\272\020\232=\007\274\236\275\305\264\340\276\034\365\316\276\233\252\034=\210\204\327=\371\3574\276\343I\n\276PM,=\310J\005=\026\204\262\275}\'\212\274\203X\270>0Y\024=\342\345\315>\377\214\211=\311^\260\276GKO>]\007\325\275\305A\000>\300\003\030\274*A\241>\221za\273\272\352\302\274O\301\"\274Gg(>;\315[\275U\366\301<<;F\276 \372Q\276\366\273\023\276\334\337 >\353\204\'\273\255\007\267\274=L\006;@N/>\213\210\'>\260\226\334\275u\240U>B\365\256=\3579\230\276^\354\206\274\030\275\025>@=(\276\2502\260>c\332\203=\371\224\334\276\225\371\356<\346\177I\275q\343(\276\347L\360\274\376|\350\2756\271U>\2473\274=<g:\275\205<(\276<>\235=\325R\266\275\327C:>\254G3>\0365\272\276\341\321{>\001_,>\'\332\302>,\205\326>\311\2010>\215\035\224\2758\034\375\275.\r\273<\3407\311\275\312CS>\361\253\223>x<\216\274\013b[=\201\177\263=\010\3219>\014g\'\275\266\313e=r<\262\275r\254\230>dN\305<\230\rP>\330\222\325\275\317l\203\276\255\003\240\276\371\260\373=\334\322@\276r\244\254\272\"qY:\203>\027=)@\376\274G\215\017>7\274\010\275n/\266\274@\370\026>6\277n<\307\346\305=\31466\275\333!y\2756\301\204\274\350\225\017\276\313\316\361=\225}L>o\023\224=\242\355Z>\361T\236\275\241\271#\276\320vB>\302\202\216\274h\375j=\306\222\237\275\314\236\021\275\202?\006>\017Q?\274\302\354\010\276nUA\276a\212\323=)\026\263<D\327\223=2\323\361\276 \010\210\276\216\231\001\274\266\233\235=\230U\244\275\336\034)>\350\333q\276\276\356Y=(&8\276@oL=\317\257\007>\023\255\275\276&\201\201\276\264\017\315>\300\352\251\275\262\321\334=\"<{\274\251C\003\276<\3221\275\034\322\024>\274\333Q>\222\250,\276\205\311n\276\021i\211=\260\021\335<q\320\227=\310\306\020\276\222\267C\276\033x\306\276:\266\264\274e\203!\2763\316\323<\275n\230\275\203\020N\275$\367\342\273+\235>\275|\177Y\276\247\263W=\354bW=\312\0163>V:b\275\000Q\003>\354\264C<\027\002\005>\232S\006=\207\037Y\275a\006\320=bE\353\276\237\024\337<\303T\354\275\252\"a>\374]K>d6\315=O\272l>\r\372o\273,^S=(l\243\276F\t8\276KR=\275\340n\206>\037\233M=\255\246\310=\205\216\220\275{1\353\276\031\027#\276a\027\004>bN{\276\376\007\207=\325\342\216\275\374\330\374\274\261,<\273\277s\345\275\253\007<\276\311\353j\276A(8>\007\023\022>\367wB>\351\330\216=\301&x>\266/\274=X\200\036>y1\213>\276\210\017>\\\212\317=\311\3078\276tN\330=\0247J>\rj\210>N\214E>!\'\245\274\267Z8<\020UO\276BU\000>1\362\232\275\\ln>\257 @>\231T=\275\3778\200\275|;%\276\207\363r\276\330\217K>\002\017,<{\001>\276S\374c>M\335\027=\\v;\276\203F\027\277\363\214r=\025\220\242\275I5\340=X\207\321=G\272#>\345\231\207>+\n\010\273e\330\206;\2500\250\276U\032\303=\302L\260:s\306\351=\032\352\314=\341\201\216\275\246\337\262:?\014i\275\022\276\314>\230\255&>L:\216\276lr:\275\210\363T>|\205\337\275<\241\212;F \306=^u/>,7\222>\264\346h\276_\272\244=U\021\022\276Fq\247\275V{Y\275\271\206\250>\021\254\213>\243\177\275\274~\341\220\276\004#\300\276.\377\332\275\204Y\215\276\224]-\275\266\332\346:\340\361\001\276\370\005P\276/\343D=0w\217\276]}S=\023T\024\275\242\274F<\317\005\207=\312<\354\275\341\230\202\275\364\340\227\274\324\334\200=(\220u\275\227.\027\275~\267`\276y7\265\275\236!J>g\252\227\275\214\307\247=\3214i\276\223\355\214\276\344\361\374\274\247\263\315<\033\247(\272=\215R\273\205\357\217\276%\254@=3\271\244\275R\204\201=!11\275\250\366\002=\t\232\206>$FK=\001B<<*\007f>{\007\237=\270\222\240=\357\223\256\274\201\262\241>iCr\276\246\r \275\231E\235=$\233\177\276Y\274\214>\223\347\233<\367\265h\273\274\371\205\275\272u\221>oj\022>\261\274\020\276\216\226W>wh\031\275\026\242\212\275\340\216\366\275\000\2302>\307\302\360=\235\366\243<\343\307=\275\217\013\216\276d\262\036>\327$\n>\261#\271\275\373\026\214>\\\220\375=\330\021\214=\330V\227>4\036\242=\370\306\343=Q\024\033>\251\332\t\276\2376\366\275\273\236\227>\371\014\355\273o5\237\275\317Hq\275\210\360#\275\220\\\211\275D\226R:\370\362\001:\356\273\027>\324\271\035=N\211\343\275Y\303]=\221\034\t>ysZ\276\016\2527=LB0=AHP\276At\213\275\265\000\333\273\235\304j\275\30503\276\327\205q\275]\376\377=\221\023\245\276|h\020>\313\3660\276\251r$\276\322:E\276\303X\314\276\362\264\257>\210\255\036\276>S\217\276a\313+>\247\306\321\276h\026\365\275l\345%>\037L\032>3\255\203\276}\340>>fJ)\276\304\277\236>\021(\200\276\375b\020<\276\247\000\275\335\233\365\2750\207i\276N\205\220\275\254\354O\275\336(Q>\2633Q\276j^(\276(\251\273\276\360\275\333\275^\242\016\2759D\262\275\375\342\253\275eO<\2750\235\305\275\021\242\266\275{\267\221\276\362h\253;\022}\223>\233\254\253\273\3726X\276\240\353\233=o\274\177<^\262\361<\007\033\274\276& 0\276L}\315>\341M\'\276\322\225\233>\362OX> j\251<\360\230\261\275E_\014\276\0244\017\276\247\014\000>-_\013\276!\nH=\3135\200>6\303~\2753 7\276&\210\365:E\361\204\276*\013\233=\013g\262=Vt\267\275\257\n\020\275\026\204\034>\213\204\324;\361\263\267\276\177=\233>\306\315\210\276N\315,\276\237\276\213\275\371\th=\010\306\002\276\364\347Q>~5\326>|<\001=(\276\024=\272H\\=\274\305\233>\322\3062\276gZD\275,\237\005\276e\350R>\035\352\033>\204o_=\034\033\315>g\0107\276X\020\274\275\344l\001>\310YD\276\007vh\276FNe\276\360\261I>\036\354\223\276]\227\177>E\003\204\276\207\260)>\327\215\375=\0213P>\260\204\217\276\027\215\277\275\354\226:\275#\351\345=!\327\223=!$\224>\022\001L\276k\265g\275\243\372\024\276\336d!\276\335\232@>F\2446= V\206\276\242m~\275\257q\361=a\3750\275\321q\201=1\345\346\275\267\350\013\276\252\2776>6w\231\276\265\316\025\275\342~\367=BB\372\274\203&\243\276]\227^\276\372\236z=\244\247\r\275\213\330\205\276u\037^\276\244Fn>S<V\2760\223\341<\222\240+\275\010~u\275\377*\250\275\212\2171\276\343k\030\2768\225\212>Z\266\277\275N\3630\276\330\372G\276\222\007\277<\353\277\210>Xx\232>\357I]\276\335\324\245\275 \346\214>x\316\214\276\031\356\357\275[G\344\275\343d\022=\360r\264\276\343Z%\276S\374\215>[$\207\275[\372\267\276\342\272;\276\313(\013>\241\226\331<\233jR\275\266X\336<A\265\013=\023\275\216>\364\tW>SZ\377\2739\376!>\332)\277\276\t\246\232\276\307\240\214\276\336\344\177==h\237=G\275\275\274v\270\337\275\306|\023\276\016\233\030>\310\350\333\275\026)[<\032\325\346\276\035\306\026\275\323s\250<\373LP>\266O\257\275\231(1>\3560w\273e\345\226>\230\3771\276\001\270A\276c[t>\335\351$>\253\001)\276\301\213\324\2758G\271<\246\306S\276\301F\217\276q\247#\276\'\216d\273\002CU\276\\\307\214\274\366\326\214<-{\\\276\223\3304\275\350\304\273\275\247\266*>\341V!>P\\\327\273\344\207\027>\273\341C>c]\177\276>\240\305\275\211b6>\2140.>\340\027\\\276\341c\252>\302\264Q\276{\332)\275i\324B>\"\240\352=\232\231\034\274s\r\035\274\324\356%\276\026\250\310\275\342X\020\275\235-`\276;\025\221\275!R\211=\t\203\371=:\234\211>\214\020\234>\361\352\264<O\206`\272k\377\233\275\252Y\202=\034\234:\276\202\343B\276^J\010>o\243\n>\227{\375=\274\315\027>\205\220\246=\370N\'\2764*\262>\'\'*\272\2400\335\275\363FI>\255\230J<\000\000\007\276\222\333{=-&4\276QO\367=\3046\257\273\267\354(\275\227\324^\274w\010\232\275\t\2132>\303\320\'>\354\236\310\276Y\301%;\3313\357\275\357\276?\276NO\343=\2652N>/\251\007\276\330,D>\203\0200\274\370\370\035>\265Bb\276\256\222%>D\343T=\241K\301=\277\336\272\275\225\330\203\274 \305\271=\324\025\305=\245Nt=a\230W>H\342\006\276=\250}=\007\023#>\211u\236\276\"\343/\275W\355X=f\227\250=)L\216\276\351\032\021\276\373\340\023<\327\254\364\275B\221\242\274\'\351.>\177\033\224>w\342^>\321\230\026>\314\225\262=\3016c\276,\336\177\276I7o\276\361\337\021=\333\317\227>\032\317\214>\316\004\242\275j\005\013\275RY4\275\354\346\370=\337\372\274\274O\177\216\276\332B\257\275.?Z\276Aw\317<U\227\226\2767\221z\276tF\274=\"\256\343<xe\214>\374\220\017\276\0259\302\275,\376\331\2742E\010\276\031\273\307<\366X!>\301\337\275=\255\014\t\277\337\372\233=\356on>\274&7>C_6\273\222\261\277<\241\226]\275\315@\227\276\250\210,\275J\017\">6gR\276\337\317\253\276)\245K\2756\221\351\275\361A\361>\207B\277\276\\\372\240\276qm\'\276\236\010\213\276\323O\272=\347|o=!2\316=\212\314\001>\t\276@<\2773)\276\362H<>z\242W\276vEV=\006\036D\2763v\314=i\224\364\274\014(-\276J\032a>x\213<>\375\372\020\275u\016\025\273\030\341\217=\322&\n\2767\224\220>$]\021\276\263{r\276\323\033\320\275\010\030\306=\025\334E\276\003\322\312<\2671k\276\177w\340<\201s\233\275\242i\001\2764k\267\273\357\257A>H\006\250>\\\275\020=\037\002|=\230\021B=\2703\270=\374g\026=\266\037\003\276\247\325\342=9T\007\275P\303h\274\225\254\347>\215C@\275\315\247{\276j\265{=\310\354\360<\263W\034>2\246\001\276F\025\317\276\tD\252\275C\014\242=g\024/\275\210\322\t\275\231\260g=\000\254\354=\313\257\235<#\014R\274\305V\000>B\340\212=\210m\336\275\226K\017<\353t\236>\033\361\265=\357\017\210>w\322\204\276\274\027\312\275\004A\214=Z\r\004>\'\002X\276&H\361\276<\240>>;\322-\275\345?\023>X\307\250=t\007\207\276\252}\213>{a\261=\222\305V\276C\213\006\277Z\216q=\336ZW>\251\227e\276B\356P\276\312\030\261\275[\224w\276\244\313\245\275\033zu=\346\362r\276\354\020)\276\315A\303=U\342\245>~hy\276\253N\210\275Q\320O\275^\263\251>c\352\215\273O-6\274\245\336\363<\373\275\303=\247\263\313\275\224\347\207>\304\\?=\234\\+>j\344\241<\275\002)>\3717\212\275q,\225>\031\251?>\313\241\224=\227\336\247\275\'\026\001\276\361\022\211\276\236{=>\024\217J\276\013|\244\275\"\265y=\030\314H\276\0058\263<(\205\002\276G\311u>\331\272 \276\233\3451>\306\266\031>\300=\'\276\343\364{=\272z\242\274~c\262\276\241\264\257\276\237\274h\272C\003v<\212T\244\274\206\231\002\276\345\243\001=y\263&=\211\313o>\024Z\n\276\301\224Z\276\216\355\213>\013X\217>\273\372\200>\326\362J>\337\234\243\274\343g\212\275\244\355\315=\322\315\016\276\240\261\025\276\311\274(\276B\300\206>\324|\003=\352\361\020\276\037\005y>\324\374o\276&\304\324\276$\002\243<C\\\'\276\355\271n\275\237h\240\276\216\372l\2761\272\033\276i\377\212\276\215\334\371=\000}\352=\330X\314=\366 ^\276\310Z\014\276\266f\014\276\367\231\207>M\205\233\275,\305\026\276r4H=\310\024\222\276\320\003R=\340\342E>j\355\007\276#\205(>as\034=\027\004%\2749\313\007>\006\226d>\206a\233=V\322\211\276Lm\213>\0364\230\276\326\371\342=!Z\255\276\352\"\356\274/\207\324\274\341\364\001>\363\275E\272Z\320 \276\260W{=\023%\257=\351h\365\275\311\206\227\276\020M\">VD\026\276\247L\305<- \255\274\304Np\276\330\242\205\274\340dS\274l\265\036>\206\214\301=\356(%\276%\252(\273\2105\311\275\217n\272\276\217\021\024\275\2628\323\274\232\255\027\275\3411\232\276\363\255\234\274\'\372\251=\226\360\253\276\307\225\306<\242\244h\276\354\377)=\200P\202\273\300P\211<\367\206\222\276`\376\306<\264>\204=e\013N=y~\273<\243\016\204>@)D\275\351\252\251>OA\331\275\352\224$>\244\364;>\210\324\207>K\375\276\276yz\333=\311\320\017=\010\337[=\213\321\t\275^\272\274\275\022\202o>\327\026R=\002\247\275\274\314\024h>\340f\352=\010\275z\275\304R\360=\234\2109>\233{\236=Y8\224\275\357\254`\275\376\332\323=w\236\345\275\277wn>s\316,>\224\020\326>\370@\261\274O+\221=,\210\373\274\000w\207>\302Y#>,\024\364=\301zq>\204\254Z\276+\017\227\275+\251\317=Y\352\036=Ggy=\037\352H:\226\257Y\276\367PX>\311eI\275\001-\207>\306@\237\276\271\214s;\234NK\276\316\370m\276\320\261Z>~X!\275\344J\266\276\3503\276\274\2217\312=\236\004\201>K\376\364\275C\016]\275\202\331u\276\336\272T\276\251\361j\275Y\362v\275\255\336\330=\177\271\213>\203T\346>\226\3374\275\223{7\276{{Q=\037\036W=\353\010\333\275`\301\201>\341\231\252<x\3260\276\304\205\275\275\225\313\303\276\354\002u\276\204\3252<r\\C\276x\276\203;\030\262V\2764*\352=\360\365\227\276\374\222\363=[T\257>\362\352\265\276\240z\206\274*h\001>_\021\t\276G\377\020>){s\276\031\250\311\275\t\022\007>\2610{\276u<h=\2027%>\0326<\276\374s\262\275\200y\234\276\030\023\221<^\327\031\275\264-\330\275FL\243\276\212\206\035\276\307\266\362\276\332\200\253>\267\t\262< :\231>\341\331\323\275A\003\215\275,,\225=\246\320\246\275\266Mu\272\326\010\207\2763\371f\276s\343]=(\324\201>z \n>\337\232$\275\200\235\340\276+\035\250=\023\263\314\275\205\243;\276\350\212@>\035\304J=>/\275\274\317\2670\276\230t\217=\245[\237\276y\246J\276\016\367*\276\365\243\262\275\215\255z\275\266\010\305\274\314\304;\276\032V\206\274\026$\232=&$\271\275\321\333n=*M?\276Z\337A>\254\215\244\2754R\252>\201`\262\275\346_4\276\374\234\224=n\034_\275%b\261>\377@\274\275A\036m\275A\330\260\275\032\245\253\276 \331s\276\375\322(\276\230\225\315\275\336^B>\005)\332=[@1;1e\353<\203JD>R\307`\276\335\357Q\276\361\360U<\244`\301\275\267t?<\266*G=\336\301\010>\010S\030\276\33787>\030\204\265=IIb>\035\r\335\276\214hB>!\312\030>\010.S\276\332\2635>\336\273\241>\261\304R\276\315\276V\276\276a(\276\334\3147\276C:\003=\337\251\232>Q\232\234;3~\204=\327\222\330\274\376\352\223>\203\356>>)\242\211\275\003\2109\275Q\034\222=hQ\260=%\331\356=;\275]>+\214\337\273,s\240\276\306\322\003\276C\034\257\276h`;\276\212Rb\276\203\004\256\276\177\2571>0\034s>_<\r;\2152#\274\022\235K>\341\312\236>\342\275\220>\266!\027\276\022w\274=19\256<\362\321\033\276\374\213\333\275\230\023{\276\312\243\216=\371X\004\276@\264\034\276h\240\245>,\201\312=\033\361\305\275\037\224=>\224m\222\276\241\204\222>\371a$\276\350\036\264\275+\376\235\276\016\241\310=\345\364\236>\243\0347<\037*,\275\272\031q\276\310\343\273>,\031;>\006\257\252<\334i\243\276\226\007\272\275\241|\343\275\262\345=>\351{\276>=\325\010\276\016\325R\276\256R?\276\'\032\366=\010\017>="
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "AddV2"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\203\355\204\275\257\021]\276\2622S\275,5x=i\033\337;\343M\260\276\025\326^>\007y\352\276h\276Z>P(#=\305<\347\274[\000\214\273v\227\304=\224Y\360<,\210)\276h\027\324=\214\320+\276%\236\302\274\'`[=\357P==\r\343g\273[v\031>F\240\255\276:\206\033\275&#\241\275\021l\336=,t0\276\210\252\'=Si\t\275\247\257\332\275OL\027>\204D\373\274\212\tt\275\277\245\254=\202\2555\275A\320\245\276\001\320\271:\0237\035>y\\\367\275\031\351\367<\034A\243\275\020\374\264\274\036\347\036>Q\221\227\275\253\237\321>\3644\253<\323\0176=\226M\242>\207\034#\274\0210\320>\330*[\275\n\002\264\274[\337\037\276H\312E\276\3217\244=\343\272\353<\232\246\226=\345RN\275\320\230s\276\204B\007\275\2701\335=\240s\224\276\211a\030\275\314\033\262\275\356\324w\276b\"\'>1\263(\275\250\331\327>I\343\006\276\311\336\t=)d\013=g\210\364=!e\'>\334\204K=\322\3157\276\315wP\275f\266 \276\331\316\260\276\022B\335\275O\275\337<\021G=\276W\306\354\274\031\347P\276\231f\030>{\253\316\275\231\242)\276\0147(>\r\216\212\276I\364\244\272~\231\007\276\304\002\347\274\352\206\272=\n\355\020>C\243\215\275\324Te\275\3017!=\355\177C<zD\010>S\204b\276\325\230\331=\361\202\250\2759f\250>\322*6\2767\275\"\276H\250\001\276\317E,>a\237\234>\004\202\033=\021wr>0\210\n=|\177\347>_\264\335=\251Q\220>\323\227\214\275\255\335\242\275H\003\351=\177\231\236=\231;|>\233\3238>u\365\232\275_\321U\275jT\035>\340\335>:\232\240U>\267\036\325=\016HM\275o0\034\276/\347\367\275btC=\261!1>*\267Z\276}\302S\276$\316\224\276\271\233\357\274T\274$=q?K=\212\270=>\350)\362\276\315\237\034\276@g\376\2758\267\355=j\030.\276>IZ>,\372\211>\373\327\024\276\305\347\372\276\317x\206\276\372~\236\275\247e\263\274!\313\003>\031\341\226=\252t\017\276\314\363\323>\236(\220\275{\224A\276\311\332\346\275\353tp>n\307-\273~\334\245\275\261\256\237=\337\364{>\361\207}<\352\247\255=d=\310=-\251\005>\321\300\361=&`>>\333\333\245=*C\027>\036\363\002>8]\220\276=\224\250>e+\">9\304\215\2768\\I\276\230\340\032?\233\342\240>\332\337\376<\315\230\000>\331$\365\275h\344\177\275\321\204\375\274\316C&\275\014\302\240=\027\352\014>\261\307(\276\275X\327=\265w\247\276\265\270\271\276\213\007\227>H\274\020\276oL\206\275\266\t\210>\235\376v\275\254\332\004\276g\366/\276\017r\241>\332\nw\275d}\r>\337\345\033?@\021\013>!8\255>\265F\034\276\244\002k\276!\033\252\274t\016\">\'\2037>Z\236\357<\202T\337\274JzI\275<\002\007>%P\204=\334\314\344=\204vj=\r\303$>\372\370\033>I\347*>\327A\010=Z\241\326=\014\273\227\276bu@\276\020\303&\276+\006P\2751\300T>\003\220>\274\0027\330=i\034\025\275\200R\353\275QQ\230=\237\032\026\276L\026+=H@f\276\247\207\251\275\320\344\306\274h\311\324\276z\233l\276\036\237Q>\016\343\343\274\315\373{\275\001dK\275\3048\237\275\r\273l\276B\005N>-\224\">Hf\230\2733\221\362>\211\354\026>\312\300\367\276uG\007\276H*\270>\350!5>$\355r\276!g*>\361\311\312\275JU\247\275\357\000R>FE\212>\360P\243>\367\033\204=\306\262s\275\217\211\020\276j\236\223>\374%<=\264\351\020\277\360}\r=\240\374\346=O\331\270>\302\342\330;\207\360\264=\007\300_:3Xf=\231\257\002\2763\376A\276\222\373\000\275\334\rz>;\375o<\'\2221\275\301\374\221\275\036a\344\275\374\350\231=1\304\013\276j\332|\274\217\"\014\276NA\006\276\226\372Y\275\234\245\010>\032\221Z\276\276?{>\034\r?=&\317]>\274?X>\313\312\215>*\020h=\314\300\"=\236\000\201\276\234\251\212=\315\242\214>l\210\340=\203\305)<\270$\303>\202)o\276\341\267\337=\376\177\305=\223\320W\276\230MI\275K-C\276\332$\246=:J\217>\213\321\224\275\265\324\334\274[\366\252=\250\0068\276T\272X\276\313\237\240\276\324s\221\276u\'\271=\004K\337\275\264\t\230\275\216d\026\276\352`\'>p\2546\276\317\270):\246R\313=`\t\005=\260#l\272\376hW>\301\346\231>\t\r\350\275\336\330\203>\207E\210=\277\374\025\276>\314}\276\337\271b\276\300\207\203>\302\335\366=\260\243\014>\r3\026>\245`\034>o\261k\276\201%v\276N\366@=\303\020K=\216\201\262<\233#\205\275\027J\206\274\206\2234>\251\247\313\275J\246\241=\265\261\336<\215\241\215>j\273Y\275j\236\306> 3\250\275\355\223B\273\334\247\027\275\352\353\036=\276\3245\276|\235\256\276\336\203\274=j$\352=\270\304i=\370\366\256\275*\341\207>\262\264\037\276G\201O=Z=;\276\257\013-?\214\013\264=Q\264\036\275\027\261\204\273+5\000<\203!t<T\305\321<Q\347\035\276\013a\203<\357\010\202<(\0345\2763\207\362\275h\020\351<\010d\211=/b\001\277\0175q<<\000i=\362\350\036>)\317_\276P\344\266\275\341o\346\275m\3621\275y\225+\276-&+=\324\370\247=\250\215\"=\222\346F\276\263\036\032\276\357\303\323=\3739\037\276\256cp\276\330\\=\276\372\352F\276\236\305)\275\242\371\003>\272\300\213\276\010\201\357\2741\343\375=S\266\'>\312\233\004>)\014^>\312\320\331>\271$3\276w\007\251\276\343K\002=@2\225\275i\361\n\275\367\273L\275f\251\254\276>&Y\275\201\202\225=\361J\263\273\014\030I>\343\363\330\275\324>\325\275\202\352\331\275B_\362=\305\335G\276\306]\201\275\247\221\r>\237w\270\274\"R\265\276\\\001|=\305\314\366\275\270\227S\275\372\026w\276\345C\022>\'\205\220\273\231\317G>\177\375 >@\n\262>\264\345\336: \'\010\276;\0149>\364*,>\234\306D\276\347\251\340>\254\310\200=(\030?=\261\017P>\262\344n\275\253l\203<J\232\204=\347\304\272\275\251\202\305;*\362\266>\355i\220=)\300\225\276\n&.\275\3169\325<\006\022f>93\323\275T\346\271=\376\363\300=\233t\363\274\211^\216>\264\027J;\217c\214=\374}?\276\247\007y=9gB\276\001\225\311=G\231\201\276\245\276{>\351_\264=\252\002\222>\275)M>\',o\275\000o\256<\362\250\264<\024\006\222>\373H\\>\264\025\237\276Zu\226\274S\315\206>\363\344\010\275\272\312\335<b\'\244\276\"\332.>\264\317\365\275b3\314>\273\350\334;K\253\000>\315\347\203\276\272;Q\273:k\225>\031\276\371;6\263\264\274!V\003>\201$l\276ca7>\215l\010>P\314\024\276\3148\300\275\266{\004;\240\275\026\275*Iw\276\374`\305\274\021\214[\276^\231\016\276\272\376\320\273\010\225@<\223\254\243>\256\352\225\275\336F@=\205\345\'>\257\202\271\2756r&\276\236\375\037>\264\224\303>a=\236=\256&\205\275\322\0078>\025\'\353<\347\202\364\276\214W==\\K\302=\003\220\035;e\311\250\275\246!\245<;H\273=#\373\374=\270\3026>\227\3419>\212`\014>\314\003\234\276a\206\225>\211\374\036\276HZ\261\275I/{\276ui#=\273\213\030>kD\246\276\250Z1\276\005\204[>\347\317\037>\376\023\365\275,\337\344=\260bb\275il\006>Z;\252\275\256\274\272\274`3/\275\255\317%\275\274\217\313\275PP\377=\341\256\001=\n\373\206>\350\t8;]\350]\276\353w\261\2757n\371<\272\264\365\275\243\317\206\276(~\301>$r^\275N~H\276-,\232\276\234\300\203>\377\244T\275&\344\364\275$\225\363>\277\307Z\275m\312\304=]\320\206\276\361\262j\275\2600\300>:\342a\276\213\230\030\2766\251\207=Jz\005>\206w\334\276`(\230\276\220\007(\275p\315\233>JV3>+\253r\276\000rA\276\270C\017<\n\352\036>\022!\231\275\031m|=%.\222\275i6V\276\006\032\226\274\367\034\217\275\254\356\004\276\375\277\234\276\255\206\233>\001\2112\276\226\333\316=\251\262\214<\257q\227=\371r,\274\367\213\007>\363\256)\276\351\344\231\276 \306(>\326\326\356\275;;\246\274C\327\267<pN\333=Z\375\375=)\273\026=\'\371\201>\251\346\244\275\302\305\203\276\242\200\266\2750m\010?\025\027\t\275\371\007\026>O\3459=A\257\215\276\230\003\201\276\377u\312=B39<]\255\352=&h\222\276,\333H\2769\270\317=\366\206\260\275\317y\227\275\237\032H>$\317I\276\257@\240>\274,#;\230\231\033>\306\204\224=v\302/\276\364\231\340=\026d4\276\232\023\323<~\312\345\275\346x\372\275\366;\022>5\2772=\\\'\224>\235\024\246=U\301\221>\267lo=\265\262\276=x{\332<\372\322x>^\356<\276\355\277\244>\'C(>\357y\367=&Zg\273\245\310-\276\263(\036\276\030\214e>\343v\201<\226\255\006>M\212\204\275m8\207<\267\267\204>iX\211>\023\216T\275\372\334\217>=7\265\273/\023\316=s-\024\276\020[\363<\375\325|\276n\315\033\276B\"\333\273\364\031|=\0355c\275R\266\002\276F\340\205>\3518\235>\\I\213\275\232l\265<\"\327Q\276+\006\202\276LZk\276\313\316\006>\341k\266\275\372\274\266\2754>\247=\207\036\201\275+\353\223;\277,\r>\3658\247\275~X\261\276\244v\326\274\215\314T>?\\\236\275\320r[>\342\377\010\276\342\340\355<L\345\355\275\325\321w=\002\203\214\275\361\314\332\276\233h\335=\303\231w\274\311\317z>\032\034T>\340|\275\275N\002+\275w\211\307\276:l\223;\004\205\356<\216\373R=\243\274L>\233\216\212\276/2\343\275Wn\031=\307\376\205=\315\201\264\276Ji`\276#V\003\276\223\276P>\335mx\276\354\354\215\275\223\273|>P?\250\275_X\227\275\324d\032\275\3153\226=\370\340\356\275\021\013\250\275w\217\301<\\\307^\275g\326\020>\224W\231>\020\357k>\240\326\317\276w\002a>\036\372\226\276\351\215\214=\371<\335\273\222\372\006>\343]\362=\000SG\276\302\250\001\276\311N\263\273\232\207\213=\243\265\211>\342o\264\275?\313\241\276\331b\243>\227\343\273>K\322,=H\001\237\272G)\345=\270\235Y\276{\017G>\364\306\216=\3133\035\276\3324G\275\355sD=\216\330\234=Un\345\275\211\314\337\274\311\216\253=\244MP<1\215\010=\007\351\\=\026\331)\276\303K\275=\353\213\016<p\2319>\356\254\265\274A\315\273\274i\242m>\023\013\244\275UV\031>\177\215I>*k|\276&Ev\276\016\221\027>\034\3754\276sp@>\271b\231\274\256\364,>\016bE>\317:\n=BF\007>5s\361\275z\235\336=\241\341\\\276\0106U>+\260G\275(\3309>x\255\215\276\201R/\275Hy\031\276\335\232?>\275~c\275\367*\234>\310\'U<\310\324_=\353\003;\273\315\016\010\276Va\251\275\017\r\002\275\200\325E\273\014\344\254<\327\3448>;h\010\276\302\031\245\275>\362\216>\026\200\231<Z\303\301\275\235}\021\276N[\336\275\325\310I\275\214\335\323=\265\307=\275g\237r\275}^p\276-\317O\276\317\037\225\276\343\313[>(\2432>\330\247\001\275)j\275=N\357\247\2757\232\262>\317BU><\016X<\353\201)=#\320\211>\020E\355\276A9\035>[\312\001\276\211X5>-\306\316=\034\277\205\276\307\244\255=\350h\211\275\2533\'\276\355\303\r=\326\244\200\276UQs\276\346\2464\275\3352\354=\r5\324<,\374\352\2755\305+\276\233\211e>\364&u\276\013\340\033>\332\0260\276K\345\216\276\363D\345\276\005\330\017=o?\031>\021=\365\275\272\207\262=\341\270V=E\'\202\276\257\014\232<~\223\274=\263\366\'>kn\343\275\177\255V\276\261\213\350=\365\355\230>>\212\300\275O\335-\276\316\336\343=z\320\356=5\257h\275BM\220\275\034\375P>\202\361\311=\371\365\024>\307\010\211\276\201_k=\\c\t>\247\310k>\0238\371<\000f\210=\367k\034=\007\2746\276#\365\'\275m\336v>|Z{>z3\004\276N\232\243\276\271T\027\276\216\245c>\326U\260\276\270J\224>\016\035\027\276ZB\230\273\002\357\250=\177Fm\276\032\214U\276\250zA\275\253n\347\275^\236\211\276\374\313_\276yU\202\275*\231\207\275[E[>\232\305\025\276$3\215>\331\255\340\274\"c5=\216\254\246\275!V\321=V\241\212\275\032>\237=\177H\t>N\275[>sN\311=\266\\\325=1-^\275\020\356v>N$\004\276A\023\207\275\257x\213\276\347\274S\275/\302\030\277@Th\275\324X\216= \255\234=Y$\211= iw\276\256\370C=m\341\001\276\r]\t>J\216.\276\333\346\204>?\207\016>m\360\216=\341\375\367\275P\202;\276\3253\217\275]\010M=\253\252:\274\326l\232>\t\"@\276\323O\016>\375\357 =k\350\027\276\2732\237>;w\035\275p\235\353=^B\242\275\305\006\004\276\341&\267\275\272\017)\276\270{N\2767\367\315>TK\220>\341\310{\275\037\343\213\276\204Q\235=\357+\235=N\203\212\276\221\266\276\274X\"\202>\216\020\212\274\330%\037\276I\337\004=x>\307\275\036+k>\205Vv\276\306\215\333=\360\221\315\275^\322\270<HS/>\3003)\276e\023\232=P8\243\275\263r\231=}\274\235\275\3661\220>-}\341=\030l\344\275\340eH\275\177\007\311=\313i\237\275\206\326\'=u]\306>\025cg\276\357\"\026=\224\005\027\276\324@\333=\245\243\212\274\244\014-\2765\000%\276k\266\327\276\32119\276F\000->\366vu\275u\200\350=op\002>\304\023\r=m?\214\273TE\231\275\225\340->aPG;\255\2470\275\325|\222\273Au\257=\034\346:=O\242*\275\341\203>>\305\250B>\251\274\316>\376N\332\275\3234\"\275\204\"\006\276\205[]>\360w\252>]S6>\010\270\256=\374q\226\276\305\342\013>\232c\260\276W\002\356=]\275\025>\326\214\271<\224\272\277=\240\312T\276\r\206};\241C\344\276\237e\027\274\220d/\276G[\017=@:H\274\313\236;=#\240.;\030\2245\274G{\206\275\275\264?>\341d\345=\254\360,\276\304\357\204>(O=>gm\023>b\246\274\2768\332\344\274\033m\323>}%\311\275\351\374\237\276\304y\002?\270\002x\276\0051\272\275\021=L=\360\246\333\275\004\"\201=2\237>>\205\000&>\277\240\203\276\2175\371=QYi\276h\202G\276\253\200\020=\2530\325<\006F\365;\030\033\024>\030\372\273=\351\252\227\276\211<H\276\033\300\275=\360\356\007>0{\246>\225\003\240=c\344=\276\2430\031>\024t\312<\323V\016>\2575\202\275\235\227\323\275\206\256~\276\300\030\242\275\254Y8\276N\256\303\274Z\374(\275Mv\r>\327\314\240\275uPC\275\005z\320=Fe\r\277\251m\224\276\2021\353\2759\214n>AJ<\276\234g8\275O\026\227=\r\002!\276j\321\207>XNr\276\347\237,>\330t\230>/g\320=\2074\363<q5\223\275/\350H\275\221\nH>\225\206\216>\311\r\203<\272t\014\276\263\233\244>\252\003\021\276\323\007\216\276%c\202\276\364\207*>3\006\024>\245\344\202=\360\227z=\257\336\244\275$\274:=\335\375f>q\007\353\274\2241f>\024LT\275dc\266\275\253p\222>A&\035>\205<n>\020Un>c\177->\372YG>$_\223;\361\004\365<\366\027x<\352%o\276\267S:\275\027\\C>\216\223\030>4|\237\2756\315\224=M\241\237<[\t\237=\261\365\353=\214\206C\276\2008\304<@\260w>\323\351\031>\241\266\206=\337\316\202\275S\310\252\276?\336<\276\204vH\275\000\264\271\275o\021\226\273\r\340f>A\020@\275\336\354\245=`L\020\275\320\321\n=\362s\335\2751\246K\275\235\310C\275\234\3457>Y\374\267=\2573U>\353=V=E\325o=\033\033\345=\004\366\276\276\220\021\203=\001\013p>\317\3517\276\273\252\366=\014\210:=G[\312=\303P\005\276^\232\024\276%\022\262\275\350\375-\276K\210w\276\326\210\376;\312ZS\275\347\323M>\332\245S>\nA\022\276T\031X\276v^\363\275\300\000\221\276\277\032\033\274\323x\265\275R\023\356\275C\322\032>\360\000\010\276yzG\276\037\207\350\275k\001\020>\026O\302>#s\210\275\240\2262=\014S\321\275\235\345->#U\307\276\263i\225\276\331\027\027>\007\377{>\007\205>>\\\360\241=\315\336\201\276]\250\037>\0008\030>\327E*\276\312xm\276\035\316\262\276\300\ty>N\217Y\276\002\177*>_\266\037\276 \373U\276\367\220\220\276\014\203\'\276s\315\344\275\213w\010>f\255\354=\302\017Q\275\271\353\022>GRP\276\343\305\245\2756\240\216\276R\263\314\274\233\277\246\274\337Ix=%KH>\231\221r\276G\020\202>\265\256\313<=\027i>\036\033\305\274^\006\220\275/\231\030\275!2\026\276\361\377\324>\262\255\256\276X\242\213>\t\332h\275;\332\232>?\001\261>\352\236\255<\177\274\337=Z\206c\275\206\326\006\276\021\207*\276zg\303\275\311\356\213={\237\033=t8\r>\352%r>\177V@>\0352\313=\\m\203>Z\260>>X\376\267\2728\252\030\276\372\342\215\2751\234&>\001LM>\240E\310\275!\302z>!}\321\275|\340\000\276\240J\030\276\r-\034>\222\271=>\332\217\237>\314\325\004=sc\235=:\243\321<\376t\003>\335S\315=\205a\027\276\276\372I>\0241+>\024j\251\276\225`$>\354\362\362\275h\217=>\300\327\362\275\023\231\013=\2673 \275u\302\226\276\376{\214>/\3438>\265a\272=!\365\034=\022e\323=\322&\374=\305/\361\274\304f\374=\210\311D>\n\345\212\275<\244\364\275,\323H\276n!\006\276\343l}=\304\243}=\370>y>=\005\202>L\256\235=\365\010i<\252\"\205\274\003\270\343\275H_B\276p\013?>\321\251\335\275\2218O>J@\014\276IN[\276 \322m\276\032\3674>}7\343\275\341\024\220=\373\016$\275;\201\344\265 S\350=\013\314\374\275O8\021>6z\210>\3266#;\240\270_>\305\310\034>+\361\325\276\321*q:\361$1\274CP\270=\215vW=\376\317S\276?\2731>\034\372K=\300\330\025\276\367 <>\237\364\217=\315\373\034>\227\350X=\n1\253>\223\240\370=\341\2740=\316\364d=8j\274\276\3427x=\021\360\253>Ls\245\275\332\332\235\276\314\r\266>\033A3\273F-\202>tM\347\275\t,\317\274k1\376=\025\237\221\275\247\202g\275\003\220\274\275`\370\226=\205nc\276\361\304\255>PQ0\2747D\017\274\251c\222\275\016m5>\300[\330\276\330\201$>\017`\276;\3375->\031Z!>\223vA\276W\375`=\242\312\215>\366\203\323\275\000\204(>?\001\207\275\362\364^\275\324(N\275]\330\000>\273\244\322\276}N\357<qE\212>a\016\265=\253}\006>On7>\363\337x\276\340\324\212>?\273\007\276ES7=\202=A\276\373`\322\274H\264P>\017?;>\232\257\033>Q\370\374<\312_e=o\317z\274E=f>\226\310\360<\025\210g9\002\366\000\276\301\014#\276\334\252|\275(k\255\275\264j\200\2758l\336\275\306\312j>\222\202\002>\240\245\212\276\304\216\262\276;\362h\276\270:\211\276\211\3734\274e;\362\275\376\361\330=\311\246\007\276\255\026\250\275P\266Y\275\317z\364=d8\214=\300\030\022=0\316\210>\331h\004?in\225\275\357\251\267=I\023\242\275\267S\">.e\013\276\\\233\r\276<ao\276\253\355\362=\005\311\222\275\002\222+\276\215\001\371\272N\340\035>^2\202\2769\246\025>\006\355\220>\n\353T>`\312;>\347\374)=\341\364b>\207\247\352=\222\210\277<\247\371\t=\326\307\335=2\326\201\276\004\367o>@\220\333=\301PQ<FS\376=#[\315;\343\204;\276\245B9=\331\343\225=U6\221=&\032\275=X\257j>\330\243o\276\227\035]=\'\302\254=\227\322h\275\344\341\245\275\366\331\252\275W\244\244\276\277\200q>\2706\262\275\340\351\016>,| >lAO>b0\030\276\\?o\276\315G%\276\373w\007?Z\261d<$mj>y\010A\276\376\332\003=t#\334:8\220u\276\"\200/=\"\211\210<\020\\\t<2\205\325\275\234\245\267\275n\340\003?V\371y>Rf\267<g8\214\273\2759\242\276(\010,\2765\n\311=\t]\362=pu\326\275\021u\277=>\370\213=\223\002\213>\267N7>\311Bj\276\340&\360=E\032\206=\252\261\243\275\307]\377=\233\316\201>n\214O>2\3161=\361\240\366=\272?+>V\360]=)\003\216>\003\270\003=\177\243 \276\006xM\276Z\\\325<s\037h\276\014\211\306=\347\016U\276\230Va\276\203\031\t=r\026\021\276XsO>\367\"\213\275\372m\275\276h\177\274>\005\346i>\337\347\377\275fR\327\274*\001\023\275_zZ\276\233>\374<\204\370\243=^\250\244\276\277[\343<~\344W\275J\211x>sG\345=\343\266=\276\315\263\237\276\333M\325<\320\220R=1\024y=S\2715>6\021\217\276\316\312\230\275\036\343R>\326\206\243>\311.\304\275\312\224z=\037\344\336>#\242\377<h\251\264>\372+\240>\343\035\271\276\266\325s>\203\301\231\276\025\215\274\276\3260\255\275\0069V\276\205_\376=\362\021&\276\271?\340\275Yx\310\275\313s\017=]\350\017\276!G\355<M]\345\275\340\316\315=\000<\275\275\337\014\225<=+\211\275L\361\260\276\347\220\325<XQ4>,/D\276\372\371s>\203N\221>w\3059\274Y\274#\276\236\237\300\275\027\006\005=\353{\331\274\240\016\014>%\000\354=\342\001k\275_yW>q\0142\275\270\004g\276H\004\213\276\336x\032\276\265\252\252\275\273\\\346=\315\272T>\000Y\366\276b}\274=\023\370\241=\264\201\351=\335z\354<k \240\276\226i\203\276W@\271=\325\224N\276\207\221;\276\230\250\221>O\330r\275\375\210\357=\026NZ\275+Q\017>[\207\211=\230\033\264=\023\374E>\255\262R\275\342\225\207>@\351\335>{6\243\275\266\265K>\234\001\220\275\323\317(\274\352\356Z\276\3373O\275\374[\005\275\017K&\276Kl\247\275[\220.\276\014\205A\275.\\@\275\353\344\304\276!\241\336\275G\004D>{z\220>\274)\267\275\223e\"\273\217\230\'\275\034E\220\275m\014\244\2749Q\351<K\313,\276\034\034\">\003\307\354\275BO\326=\240\010D>\332\374\325\276C\371\031\275g(\217>\241wf\276C^\341;\224\006\224\276\342L6>\'4\351=M\211$\276\000\236\302=\352]{\276h\332\274>\374\341t\275\377\203\215\275\232\225\025>\017\366\255\275j\266\267>\364O=\275\217\036\027\276\235\030[=\250\304\206>?lA>7%\311<\354w\033=\213u\231=\323\226->K\370\222\275\353\027\000\275\234\3753>QP\307<\220L\r\276\2638\021=\264\241\224=>\271\023\276\2134\262\276\025b\002\276\362\024B\276\034da>d\265\007>\004\245\'\276\254$\n=\300\035\377:\314\232\211\275\217y\334>\272\315g\274\244\265\207=oH\036>\030b\351=\243Ub<\245z\177:5\237c>d\371G\276\305~\013>^\375\221=\n)|\274\017\034\210\276\203j\031\276\366{\351=\366n\205\276\312\210;\276\357\360\252\275i\204\026\276\0075s>\321\032m>\224w\357=3\036\250<\036t\233=\323\205D>9d\253\275\304Mh\275X\277\270=v\274\312=\336\342O\275\227\257\013\276\367\222\226=\2404\333=^\002\003>\276\367h=\033\017\226\276\302@\254\275\204\314\275=\250\334\020\276(A\021>\270\222\215\276\304\274T\276\352\322\003>\\\357\215=c\317\001\275\220\341U\276\260d%>#\251V=\nM$<\340\307\272\276\277\027@<F\016\331\275\216T\013=\025\003\251>\245*\236\271c\275\300\275\246\257:\276L\353\233=:\010\351=F \227\274/\311&>\212\235\372\275\265;d=Z\271\244>R\252\020>8*\242>@\244\211>\206\327\272<&\0264>\255>\017>n\031\366=^\357\032\275\342\215\204>Z}\354\273,\241}>\367\313\n\275E\001p>\261\036\264<]\n\332\275\272\314\376\275\255\323\203>7\235\351=<\321U>\336\242M>\355\010\202\276\352\247\337=_M\267\274\317\272O\273\r\315P\276\210\024)>\3077}\276$\313\307\275\374\273o\276\231H\253\275\265b\352\275\031\236\331=\361`\342\275\303\343\003>GF\361\275yVO\276\004\266|>&\324y\276\216M[=\014;\\=\366\'\275<\375\370\272=\225\301\214=\021\264J\275\305\334k\276\217\334\356\2750q0>[\327`\276#r\230=\204vn>\242\345\275<8Sd=\343\301\202>A\257\344=\246+\362\273Tg\027>,\241\207\276_\'\271>\007\212*\276b!o\274\001\373|\276S\263H\276QnX\276\341\214\n\276\372\034A=X`f>\017*\217\276\300\337\254\276\373\022\207<<\002)>\312\027?>!\016\232>\334K!>#o\246\275\305\211\330=\230\036\352\275\270\237\370=\271\326\254\273\353\314\005=Pb\376>\210\353\215>#\253u>\312\357\206\275\311/L\276\301\2644\276\300T\235\276\037-\031\276\315\265\006\273b\3645=_S\002\275\231\333\251\274\313\360R<U\257\024>&#\204\275&YM>P\225\235>\262\276\231\273\006\273\263:\023\261\201>\020\343\331\275\036\255\007=)\306w\275\356\245\363=\254G\200>\347\203\325<\205\201\024\275z\2058=\235\210\\\275\255\232\013\276\006T\003\276\251c\000\275`s\306\274b-\267\275\371\272a>=f\360=\235\354*\276\335|\204\274\003u\\\275\341\334\205>\"\2448>\372\361V>~\230\354=\234\\R=\003>U\271\340\225#\276\214rL\275\036[M=\004\266\333=1\032\216\275\3503\006>\221T\212>\311\367\035>\354\320\311\274\370.\022\276\021\331\"\276p\351\n>\352X\317=\031\014\347=P\214\352=\253\312t>\r\365\003?;\333\023>r(\205>\273\017 \2755\034A>{y\266\275\\\032\360=:\305P>\373b\243\275\305\rN\276\364\363\361=\"\2752;\033G\212\276\037\261\332=q<\177\2747\2346\276\277\361\034>>\n\357=\362\000\227<\262-\021\276I\262\250\274\240\227x>)!\'\276Xe\344<\005\245\247\275\034\232\034\276@\316\r\275\303g}>\000t)>\320\273\223>\240-\010=\355\311=<r&j>FK\257;\006*\251\274|\223\321\275\031\274\272>\031(\371=\224<\205\276\204H\205>\360X3>\361\3543\275N;\307<\030\342\232>?\326\032\276`\257\343=n\210\200\276\222(\353\275\315\253\037\276\233\301]<\247\030y>\2501\357=\032\234\237\274\315\'Q>c(k>\216\330\345>\026\370\301\275\266\240C\276C\317\271\275\250<\341\274\314 f\276\226\332\253\274\354\353\222=\247\261F>a\235\204=\"*\241>\200\362Z\276\320\n\345\274\307*\327\276\271]\'?\305?\274\275\017{\032\275\342\201=\276\366\266\023\276y_\204<\243\332\266\275o\377(\276\207\324\300\275\264\343a=y\000\343<\336\010(=\370\223\241>\007\002K>N\351C>\232\000\220\276)q\017>\3201\024\276\372-\020\276\345\026\037>\336\355<>\347\366,>5\001\371\275\235\362o\275\352T\377<\327\210\225>\325\r\253=\024)\263\275jo\001\275\023F\232\274~\301\210>R@\202=W4W\275!\032\377=@\315\001>Q\354\356<1Y\025>n\267\010\276~z\257\276\374\240\324\275e\245\336\274\214\260l\276(\354:>\300\373\276\275\230m\355\274%\234\262\275@\220\216>r\2257\276A\315\024\275\033\033\032>L\273g\276\334\214\307\276,\027\203=<\300\226\276\275\247\214=\312\342a\276\236mk\274,\215\316=;\021\364=\251\n\235\275\020\367\"=\311\025\017>\213\035F\275\363\236\023=\300\327\351=!\3523>~\207\260\275\'S\365>\0260\216\275R\025$>\275\233C=0\235;\276\351\205\033\276\206Y\206<\225\325\237\275\273k;\275,\036#>\357\253$\276\367&f>\322\270;\275\333)\234\2766\223\231=(Y\364\275\031X\346\274\037g\006\276\301\257\365<l\313\213<\023pR>|=\354<Re%\276qY\304=\005\376\345=U\214R>\376\245]\274"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "AddV2"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\305s?\275\023Vu\276\326\355\220=~{4\276\322\265l\275\226h\246\273\016z\\\276\371\241\307;G\014\371>$\340\321=xKf\276i\374Y\273W\232>\2766G\227\275\254q->\317\270\347\275U\226j\274\314f\345\275\324\376\376=\027\253r=0N\244\274\035\231\332;D\r\253=\324\020\255>/_\251\275\2455\034>zL\201>\\\334\347=D\274\'>Ql\204<\304\036\325>\254\005\371\275"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "AddV2"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: ":i\343:[\335\3708\352\032W:\371:\237\272]\036\326\272\252\347\\\273\352\226W9\210\236/;\237~\032;\014\230\373:\312\326\236\272\376\2072:\362\263?:\0232\347\271\261\201\3519\363\311\311\272\353!\306\272Up\004\273&\216\237:4\221\374:\363\221\231\272\000i-8\214\031[;\311\035\245;\010\365\332:U,\002:0\263\305\272\310_\221\272\034\311\221:Qdh\271\273\265\201\272P|h:"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "AddV2"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "AddV2"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\336\316d:a\271\331\272\343J\251:O\366\263\272h\227\232\271L\214\017\273\261\217{\272\312\365%\273\264\220):O\001\312\272\234h\241:\345\205\242:\326\214`\273\364\256K;\020\254\200\272\232\330d\272\010{\234\272\322<j;fBZ9\304 \t9Z\024\253\272\240#G\272F\365n:\272\'9;\373\023-\272\006\013\022;y\253>:8\017\374:\364y_\273\017\345\371\272?\202\237\272k\366\2638"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "AddV2"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "AddV2"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "AddV2"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "AddV2"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: " \256\371=h{\213\276\005<m=\367\231\361=S\300n=[\325Q>r\232M>\366g\236>\020\023\204=%\362i\276\361\n^=%G\353\274Y4\211=\204\276\024>\245\305\232\2757\231?\27549\010\276@T\244>\376V\225>\2307\037\276\t\352\231\275\316\0006\273/\276p>5\021#\274\351\0219\275=\210a\276_J\270\273\202\271g\276w\206=\276\225\256\276>\340\032W\276D\\\315\275\034Si>\013\177\237\274\005\335\010\274\220\000\320;]\004`\275\232\214c\2731\360u\275\206`\245\274\r\217\347=\207\370\340=\340\353\'\2757\017\216\276F\230\246=\242e\t\276\256\020\260\275\361\302\252>\270\376\244\275\245\026\373= \214\216>\253\205x\275n\361k\276\274\005\313\275<\036\240\276)\217\204\275b\033\003>\207\264\324>\230\354t>\213\361\343\275p\0168\276\361\253<\2741\253\022>\300b\254\276\017\211\205>\323%\340\275\ns\013<\"\270P\2766o<\275X\307\246\273h\232r\276\3538h>{\220\000>\007]\346\276\321\000\327=\336\003\326>\313\230\304\274]\005i<>\374\373=\337\260V\275\362\327\221\276\355\005r\275\236<\257\275\270E\347=l\005\002\275\213\336n\276\035\021N\274+\r\025>\233\361\225>\340\377{;\343\n\246>\205=>>\023vT>\230L\220>$\2755>\362;\255=\367\330%\276\215\310\026\275\204?\005>\224 \234\276}\210>\276\376Q\214=;\013\312<\213Q?=g\343\235=c\256\220\275\344\306\032:b\251y<\335@G>\225\334T>\030\244\305\274\331\364j<5+\010\275\247Fl\276&?`<\247\367G\276\311\225x>\254Iw\275\005\2631\274\336\007T>\375Z\227\275:CC\275;A1\275\361\202\203\275V\021\225\276\354\353\200=\033>\326\276\373\0250\276\347\210\263\275\2643\264\275e\375j>\305J\002\276krm=\227\004@\275\0239\202>\364\355g\276\267k\204=<\033Z>z\203\004>\322\221\212\274~e\273=\326\256\025\277\272\023\256>\013V\300=G\004\215\276#\025\227=\240\271\263\275\027)\371\274\3651F\273\264\276\017\275q\263e\276s\364E=Y::\273\317\254\005=t\320\333\275\237\2130<\261\332\210\276\361\361c\276\307^\024\276\323\r9>\037\206\035\276tE\025\276\220 \223>\376z\257=\267\001\213>\025\355\317\275\n\024\226=T\324\350=g7\311=\307\325W>\005\351\221>\030\361(\276<b\204\275\357\240\264\275\377bR>\334q\344<\031E*>\276\317\026\275\242\320\241=S\320\234\275\004\364\203>\243\250\215\275\024C\255\275}\210\343<\262Bv=\r\"\">\327\275\024\276E\331\364\2757]\247\275\236\264\\=\260|#\276e\331\376\276*\376\026\276\222\240\306\275W\027\335<\004\341\320=m\273\257\275p\241i=\315\022K>io\021>\364\000\362<Ke\365>EH\245\275G\312\261\275\310\201\375\274\235\332\024=\242eC>N\251\317<\004\324\251=\277\025\364\274\364\234B>\346Kq>\270\276D\275\020\375\234\276\312T\221=\205\330\032>\276Z\200\275S\271<>[\022V>4>9>i\313\326<\224\310m=\227\367!\276 Q\377\275\300\022\226\275)\177y>=\221\237>\303\265}\275y\224s=\267(\205\273\002\t\367\275\013I\000\276K\333\302=0\255X=\254\344=\275\245\214\023>\375\212b\276T\032\312>\337\335\342\275\216\304\256\276\014\333}\276\377\r\341<\206:C>}\311!\274)\355\360=\337\241\216>\345\364\t\276\223\322P>7ki<\311]\343> %;>;8\002>\317\007w\276\325\334:>\255.\353;\217k\202>\206\034\222\275\254\223\246>\004\034_>\004Nu\276\005\3637>\255\034\262<\336\250\350\275\344\322\224\275\232<\026\275p\363v\275\300\342F>\336T/=6\224\266>i\267\202\275i\357_\275\310\210\325\275\361\201C\276\004\302\024=\221\273\031\274\257|\002>+\014\357>\276\037\344=\22322=\366\261\'>\322\263h\276\317\000\010\275\353C0>\251\360\267\276\305\005m=_\375\315\275\2155\201\276\263\340*\275\363\022q=\357\234\017>b\371=>\371&\247=Y\270\213\274\002\'\204>\227\212\t\276\265\207\321\275Vw\261=g..<\214\372\035\275\374W\231=\327\306\301>\331j\020>\342\367\033>\355\200\037=\227-\254\276<\317\223\274\233\317c>Q\322\375<Yf\367\273\267\003\013>}8O>\346\267\024\276\212\276$>\306\305\220\276\254\363\260\275!\017\351<\361\340\221\276\\\r^>S\365\231>\351\304\344<.\344\215=\303\022.>\357~\235\276\352%*\276A\016\243\275|\344O>^\333\306\275_C|=\355\037\260\275\373\016\000\276 \342\337=\356\375\013\275\353\301\344\276\275b1\276H\317\003\2756\317\323\275\232\341u\276KZ\253\276\223\366\000>_\246\r\275\376\341_\276\217\330\216\276F2\254\274\262\2621\275\364 \213\276r\177\206\276n\020\367\275\366=\262\274\033\3307\276\271\256<=\312\303\241=(3\003\276\371fN<c\020*\276\265\230P>,<&<FyT>`\030x\275B\336\003>R\366\243\276[\212C\275\305\213\016>Y\263\317=3L\216>A\004\016>4\"1=\361\307\217>\252\277\322=;\356\031\276\336\245\200>9q\206\275\001\313(>\020\265c=+k\255\275\017\020e\276\235\275\266\275\233\267\361\274K\351\032\276T\244\222>{\270\032\276f\366\">\246\306\314>0\201\334\274\356\371\024>\244\305\367\275V\371\227\276\005\353\224\275kf9\276\234\'s>n\317\257\275u\235G>e\340>\275<\035\210\275\375-\210=\322L\013\275a\311\240=\345\373\271\275X\277P;\014\332(\275r\017P\276\305\250J=f\314\027;\261\346M\276\331FI>A\326\325\276\227\320\\>\005\371\374\275`8\215\275QP\250\273n2\270\275\312+\210>\221\216\202<\355\256f\274\t\001!>\266\353.\275\006\210x>mt2\276{\020=>&\017\265\276\3170\274=A\277t\274\321\254N<\2766Z=\306)Y\276:\210\016?g)@>z\300\">\200CG\276t{\271=\n\030\301>\261z\203\275z\231%\276\365\264\204=C\264\034>\\^\331\275a\264\205=\374O\271\276\235%y\275?6>>\312\303\025\276\232:s\275Tz\013\276\350\352m\275\267~\320\275\217\320\210<\332\261\223>\2001\242=\336^\240\275\274`\265=\263a\266\276\006w<\276\006\235[\276\300\235\372\275\010\315\247\276\220\265o>`\262\257=xT\341\275 \370\317=Bv\366=\221R\t\274l\253$\276h`.\276\250T\010\275\370\004\376\275S\316 \276q\347\336<)\201\036>\370\330\222\274\261ZU\275:\275\205=\356\017Q=\266}\202=\240\350\312=;\347\336\276\241\307O\276\323\"\026\276\356\024\023>X\304`\276Y\340]>\213\207`>TQ\005\275<$\352<\020\374\241=\257B\200\275;(\216\275\271\240P>~T_\275\312\236\341\273\232 B\276\005\016\276\276I\'\372\275\356\323\351\275.\"\323=\211o\344:\2001\030\275\205P\305\276\327\351\245\275\227!\032\276\327f\001?\361\"x\276\0021\007\2754{ >\3407\302\275\252\317\304=>:\376\273\016\370\342\275t\"\210\274\374\264a<\365\256\266>\342\342\245\274/6h>Y\312\257\274\376\000\024\276\274Y\316\275-\263\210=t\245\277\275Z\353\247\2749\263\005>\313\372\352\275\177&\241\274Q\311\033>{\017\231>@\214\377;\225\341\213\276\007\252\025\276\352B\344\274\301\'\251\276zE>>\255z\020>v\250\353\275\367P\244>\241\350\307\276\267X\013\276\207\246=>\363\262\332\2755\230#>\375hi\276\203\303\200\275\344\001\343>vN\221\275\001:9=\212\250z=j\352\310>_\315d\276\r-8>z\241\371=\304\340L>\021\366[\276\211d\231\275\253\014\200=\334O\025\276\324\307\t>\376p\337;\274/P>>\230\206>e:\250=\272d\027>\036\231$>-\326\n>\213z\220<\242.F>-\376\230\275,\343\227=\223V\353\275u\320\t<\210\276\267=B\210&>\261$\000<\274i\020\276 \246\034\276\310Q\270\274[\256\203\276\336/H\275\025\273\251\276E\301<\275\241\220K\276gj\374=\312\347*\276f\265\234\276\013r\031>;\270\023\276\010\220)\275x\336@\275\243\337\211\275\354\210\256=\364\321}=\325!\035\276\376o4\276\363\030,=\\N\\\275\rg\264;\201\007u\276=\324\222\276\263\274\267\276zL2\276\220\0222\276\325\264\206>\0353G>1\212f\276#Y\233=\247\035\265\275C,&;\252A\031>\265\244M\276\373\323F>\"o\003>\244H\034\276i\376\013>\240\344\333\2744\350J\276\362oM>\n\314\305<\331\362\311=\321!\270=\312\212\";\315\000\233\275\343zj>\240\2271\276\263\327<\275\241`\322=N\322a\276y\2032\276\033\303/\276/\"\242=oO\273\276\266\213\231\275\007\217\321\275\035\333\252>\360;\274\276\002.\241>\241\362\033\275\317a\005\275\221Ej\276\013\314:>j[\016\276D\300\312\2758\262\233<b-[\276\261\203\226\276\326@\031\276k\001;=\024\r;\275\230\027\">\332?\371\274\360R\312\275\216L\324\275\1773\201>\204H\207\275\215,\306\2750\322\014\275\344\261\206\276\263^\236\274\342\222s>d\326\347=)\235\016=\302\254\223=\013\334\">\272Gr\276\246\235\250\276G<\026>\223\024\240\275w\036\234\276\336v\331=\324\3433\275\322\207\223\275\177\311F>uv\214\276\247\326\227\276\354\036\203\276&\034\325>\324\334\210>\032x\324\275\251\272K<\351\252\334=*81=\343\271%\276_\1778\275\370Zk=9[$\276\225\322\275=H\016[>\037\260\016\276\350z\316>\250\036W=\242l\013>\256\367\334\275\225\263k=\037T^=t\300\261\274^\323\303\276\243\035t\275K\376\320</\361\005>\0026\242>\254\325a\276\243D7\276\231\2441\276_X.\276Qb,>]M\332=he*>R\231\\=\320\0217>_H\010\276\327\200 \275\252Q}>\206g\177>\370\3751>N\265\360=\255\253\201>\314\241l=\001ef<|\002>\2753\305\223\275\272_\217\276\212o]\276\341\217\323\273yY\216>y\371\005=\371*\235\275VB\227\276\307f\210\276\365\026.\275\224\026B>\376\222z\274\246\312\270\273\207\017&\275=J\017\274\253\307)>\360\001\003\277\345p9\273\n\242\302>\"\336O=\033\260$=\005\0015\276;\264\325=\204\367.>\333M\210\276-\252g\274\220E?=\007\256\263\275\266\030\036>\273\261\243\276\243\215@>\246\230<\2741_n>\356\033\332>\245\276\337=\322\337\027>1e\r\276w\205]\275g\251\177\276\001\361:>\250\253\236\273_\354H>\303\254\305=|Y\342\275\221\'?;\377{\363<\007#\220>\314<C=\254\010\014=<\303D\276\331\030\001>M\023\275=\217\314\210<;\201S=\322\343\034=\001:\216\276\246n\225\276\255\204\017\276\214\251(>\36771\276\262\265q>p\323\031>\212h\366\275\231\272j\275T\242\200\276!\252\016?\242iG\275K8V\275\240tT\276v\303\364=W0Y\276O\214N\275\034\037\216\276\221\210/\276{\315;>\025W\030>\333\306\303\275s=\201=\220k8\276\317\334U;F2B>,\035\036>\203%\037\275\344\332:=:i\000\276\347\352\300\275-\357\306\275\355?\210>oF\252\274\317\223\021>\010L~\276\\F1\276\304\370B=\300\0171\276\225(\366<\177\273I\275\376a\272=\\\306?\276\'\370 =j)\351<f\303\236=\270\315\331\275\313r\222\275f1\372>\022H\273=J\330\030\275\201w\304=\"\342\320\275\344D\270\275I\370\362<\236g\355\2756GV\276\362\223\025\275pa(>\327\331\305>f\373+\274 o\000\276\034*W>\253\204\006\276\026g\224\276\373;e\275\244(8\276\2604\t=Z\303\311\275\203x\315\275\301[\355=\224\006T>\177\215!;M\004\310\275\340\217\031\276\037\326\030>\355\300\224>\323\023!>\355\200u\276\221\265\002>(\201\030>$;\315\276>\216\312<\252\351D\276\363S\203=YE}=\024\017\375=\004\301\342\276\254h\r=\317\373B>\211\324m\275A\342\252=(\373\220<\234f\201\276\005/\347\274\377\343\207=c\242\366=\367C\006\276\241V\346\274*\023\030\275\373\024\'\275\317\221\351>\032N\212>_\002@\2760\364\034\276@M#>\227\3406>\362\210\005\276\257\336\224\273\225\nM=\237y\007>\372\014n\276\037y\230\276\203%\246\275`\260\223=w\364\010=\257tH>\357N\251\276\252\300\t>\376u\376<\345$\020\276\334xm>\341\370\013=\210\252\'\276R>\327\275Pm1>8\036\354<\210\366\212\276\023\371\273\276<>\344;_\214h\276w\246\300>\3749d>\033\366\377\275\371\023\004\275\007\256\007\276\277\236#\274\357\343\035=h\315\345=\311\263L>!a\206\276,\026k=\333\334\007\276\366m(\276\343\304a>\216#\226>\3516\370\275\203\356\250>\326\375\376\275\262\236\321\275\210Sh=p8\217>\272\235\014\276\352%3=\016Y5\275\036b\264\275\362\021#>6\206\'\276\346\233\201>)U\303\274L;\223\275\332\034\335<\245O\343=r\343J\276\034\230\234>5\360\221>(WS\275\226\250C>\360\215\250\275\253\000\204=Q\273\334=\3213\276\275\\1s>\\\004\253\276\371\\\023\276\014\316\030>\317\212\001\276\037\205/\275qC\353\274V\304\224>E\304\314\275Y<\252\275\312>8\276\260h\302>J\2705\274\335n\207\274\344\330\333\275\302\337\025\276\331\2707\276\255\352\000>\"9\336;\200b\347\275\205@\365<a\350/>n\247\250=\346\020\305\275\203,\231\275\326eK>Wt\257\275\021gh\276\205\365d\275R\345\014\275\020\014\371=\264\2025\275\032\316\345\2750S\335\275\264X\224\275Lq\237\275\255^\215=\317\027_>\373\"\021>\343\300\022=\377\256]\276\372O\351=\320X\211>\257&\214\276\024\336\025>wG\303=\257b\">D\032\257\276\270\221\031\276o\356;>vr7\276\363O\347<Bk\232\276w*\355\276\033S4>x-)\274\003\256\264\275\331\312\234>n\200P\275t0H>\224@\\\275\"\325\203\276\233\320(=\374;\313\273\272\036\201=bKb\275\317\235d\275\366=\376\276~\262\032>G\326\221\275\354\320\267\276\"\0254<\263\227\324\273h8\005>H\213\310<c\030\233\275B\253\200=\222\346n>tj`=\036e\313\276X\321\244\275\234c\203<\334\273b=\204\355?>\366F#>\236\270\331\276\357e\351<\235\2215>\005\242\247>\016%\210\276\023*j\276!Xz\276Bw\300>7\375s\275\014-\367=\373u\332\275K\205E\275\344Bw=\"\022\270\275/\036B>e\2129>V\251M\276\254\251\331\274R\212&>\'m\266=\016\0012\276\037\221\247>Bs\017\276\237\372\245\276x\353|\276\246m;\276Hr\341=\336\324\367\275\374\002\255>\232\346+\276\301/B>\034\362M\276\306\031\206\275\032\304&=T\356t=\343\202\002<\203\2666\275\201\026n\276\2478\036=\034\200\026\276\243k\005=y!\202\276\363G\n>p\023F\276\350\023\262=\337\330\n>B\301\233;V\242\250<-\"\345=\327\236\353=1Z\006>\223\"h>=\211\374<M<\242>\365\241O=\330\342\245\275\007\347\237\275\350\351\017\276\271\352J\276\223\372\220\275w\026\274<\023\023\301= K\017\276\350\002M\276\314\026x\276\230:\267>\360 \204\276\274\254A\276\354\233\303=\306\364\202\276\263\260Z=\237\307\023\276X\205&\276\373\207\010\276\352@\244\275S2\277\275\321\340\241\275\265\351\347\275\202V\233>\025\262\004\276W\325&>b\025\003<\203\303\025>f\241\232>v~\240\274\355H\323<\n\306\373<\204/\200\276Ede\276\361Y/\276\000\342\t=\353D\264=z\375\200\276|\340l\275\301\256\200=\010\217Z\275\037@f=j\300\213\276?\351~\275\275\272\246>\336\021J\274\"\210\033\276\246\026*\276s\204j>\315:;<\273\312\203\275\206\rp\275\202\226\317<a\023\235\275\226\260\315\275\035e\324\275\207\270\341=`:\301\276\261\003\010\2761Y\331=X#\213\275C\213\250\275:\014\267=\265@\336=L\340\254\276\315\n\013>+\021\007?\"d\020\276,\375\253\275\023\355\234\275\207\035\005\276\336\240\n>\344.\016\276\217\322)>k+\250\275n\212-=\335\302\367\274\n\364Z=\022q\262<\3031\214=\227\r\225\274A=\231>\3129\224>\324\325N=8\371\205\276\0055\310\2754\226~<\245_\356=\303\264\202\276\365*\214=\357\362}<\335I\007\276\344q\004>\261\203\266>\245>\376=`\315/\2769\212\006\276\226\037Q\276H\235\t>\002\201\243>\371\251\005>Q\256\351>\352i\201\275\n\365A\272\t*L\276\r@\206>/Ww\276K~\277=\233\312\200\274,\336\201>\267P\213=\334\252\362=\3766$\276\3074\313\275P\'\376=\367\336\267\275\221\267]\276f\351\003\276\326kn\274\024\202\317<H\263\024\276\342\354\203\276\327v\222\276\266\306\316=\226\007~>\005\345r=\333\242\n\276.\007&\275Ov\230=_Q\"\276\\\227J>\243\205\317>\204\231@\2754\013\357=\265d\365=/p\211\276n\203\"<\021\3769\276\272\0322\276GU\256\2758-\031\276\200\270+\276\2032\000=\007\200\006>\247\024\375\274r\003\222\275\207\r\372\275\356=@>\005\377\016>\357\237 =\360\315/=\251\362\340\275\215\306\236\276&\247;=1I\034>:\0271>\244\253g\276\255.\333\275]\020#\2759\021q;8\264Q\276\327\346\217>\325\364b>\305Y\370<\300\023\005=\206\366\372\275\327W\347\274\331\301\021\276@\207\035=\010\366\257\276\001\353)\276\264\323L>F\240\216>Z\374z>G\276\026\277twS>\020\273v\275\211p4>\344\000\304=\003\2035\275\302\\\342\276\375\201\206<\251^T\275\223\374\032>\203\324\017\276\233\006\301<X\235}\275w\370W\276s9\267=J\2244\275\374\373\303=\321\273\263\275sF\203>\r\252\253\276\013\266!>\327\211\260\275\rs\276=\013\3547\276\207\243\340=\322\203\230=\314\241y\276\300\2517>\033r\202\276\331\210K>y\343#\276\274\214\017\276\267\375q\276\325kZ>H\005\215>@\334N\275W\247\375<\006\372\223\274I\010\335\2766\006\335=\300\254\202\273\213j\263>\320\360\222=\336\330\254=\263%\030>`\275H>\331\331~>m\253\307\275\366Y\014\276X\234\237=-.\264>\013Za>:\205\231\274i\001}=W\201\231\276m\312\252::T\322\276\tn\024>\267\337\033>\323\316\365\273\212^\373\273=\254M\275r$1=ch\r=\255\313W=\204\275\236=\203\242%>\350Z\005\276\212\225\036>7\013\003\276\204\366\211\272\223D\004>\302\325\177=\305eC\2758\026\341=Q^\017\276\2536\233>aG@={\212;\276\376dN>\301]\206;a\232\240\276pi\353=\263@\225\276\261\273\210=\031\2647\276\300\322\033>W\217.=\304~\253\275\275\214\031\276\034\260i=C\341\220\274\201 \354\275\351<\324=\000\203\023\276\353\026^>\231Rk=\214`?\276\370\271\026>\313\246Q\276\245\027\017\276\314&\350=\214LK>\007)\205\276&\243\006\277\216r\262=u\010x\275S\240R=\252_\356=\323]\037>\275\222\346\275\244\372\021\276\273\003\007\276\231\210z\275\023\364K\276\345\221\233<a\3454>MN\020>\311\316~=\305\252K:\251\224\245\275!]\001\275\216\301\346\276\237S\007\275\246O\235\274\277\300W>;4\257=\223\264\231=\247\\\232>% \'\275\370Y\035\275KX4\276\250\005Y>Y4\342\275\n}\020>\213\371]>\373\232\030\276[q\204>CfY>\266\257\317\275\225\'\323>n\263\216>\225D\033>2r\033=F(\275\275\252U\312\275d\221\276\273\233N\000>\025\013\366\275\206rt>\034\344\326=l\233\202\276C>\002>\372\356k>\006\007\366=\370)#><\373\217\274\304\245]=\222\204\310=\205<\220\276X\023\226\275`\343\'>,S]\273g\356x>\332$;=\307\033\246=\"h\241\275\022t\010>*6%=\266\026\246\275\246\276u\276\370?\260\2755\014\022\275\224\375g\276,\010\232\275 Y:\276\312\365\270=\"\013\323=\277\335\202;=\n\313\275\212M\260\275/\313\340=V\320\027>\255X_\276\210\260d>\300\242\213\276\201\316\327\275\007\027\013\2768\351\254=\250\313+\276\360\345J\275>\204A;\241\217\360\274\350\2151>\327\001\270>\316{A\276\345\277\003\275\226\324\252\275T\027\253\274$N\305\275\232\305\344\275\337\177\375=52\221>\265\330\325\275>g\261=h \245>\013\245\304=L\334\252\275\3607\t?\302\001\367\276W\317+>\235^\312>\223@\340=w?\222<\313\302W\275\3458n>c)A>+<\333\274\t{\230\275\3312\245\276\216\372\">\343\322\n>\200~\260\275\351\325S>m}\010>X\244\001\275\377=\311\276\245\216\232=\223\034\002\276\no\234\275\217o\230\275 \252A\276\367,\374\275\263J\255\275{\232F\274\367\037\217>\034\267\035<\243\022b\276\223UZ>\305\204\356\275#\316\357\274\\\323A<\275b|>\230\275\240\273\230\017I\276k\267\021>B\315\342\275,\tS>;`\274=\010\225\265=\375\226\245=\001\233p\275\350\271,\276\213\233\262\276\r\265*>q\262\264>]E\032\275\033ZQ>\311\026C>Xc\002\2767\225\314\275\037\340\262>7c{\275A\277w>\325\017v>/\036\255<v\323E\2765\306A><\330\236=\221\354r>bN\340=\320,\225\276\204\222\202\274\331\306\205\2763\375\000>\323#\031\276=\001\225\276&\207\266<\231O\014\276\027\237\250\275\261\352\363\275\334n/>J\347\231\275\376M\271=\322g3>\374,\n\276y\356\220;\343\035\221\275U\033j\276p\254\\>\313m\250>\273}P\276\234\257T=\204\017*=\212\304\242\275\361p\237=+\302\363\275\2566v\275Q\230w\276\220!\202>\207\212\252\275\226\210\260\275O\233\312=\317oG\275\000\200\326\276\326\251\275\274\345\247\265\275GTN>\251\316\307\276 1\002>\310\354\264\275\262\322\037>\253\273~>\200I1\275R d\276|\350 >\344\224n>?\277l=I\r\311<X\211\252>\335\026c<~\260\304=\213+>\275\017\006\210>\355\246M\275(#\034>\227\032\032\276\255\240\004>\372\316l\275\005\211/\276g6\262<\374\270G>\337\227\031\276)\030K\276\036Q\232\276\301|\371<\322\252\230\275\203\255j\275\320k\221\2769A\204>\231\020J\276<a\216=Q\203)>]\r\227\273k\366\317>\354kT\275%\310\273\274#\345!\275\252A\311=\027%\364=\010\261\315\275o\304b>\263\336\232\274\300\tQ\276\225\th\276\377\377\376=B5\005<\345\341\225>Y1\305\275\224KW>\244b\361\275\367\370>=Xa\223\276\265([\275\210/\274\275@\325\341\275\242\316\007\276i.\010\276\2538\006>^\'\017>D\023\374\275\303\225\326=^2.\276\301\364\027>\304\252R\274\341\313\315\274\360\353\321\276\205\000\277\276\252\250\260\275\357z\345=\277)\301\275\037\000\260\276]+\033>\302b\213\274\363\3755=\032W\356\276L.\'\275@\333\273\276\026\306\343=\252G\232\275\371\222\263<\'\221\212\275\013\214m\274\030\";\275\237\035\346<KhW>)\220\304\275\274\010\274\276X\231\214\275\362\302(>\037\233j>\213\263\027>\t~\376\273\307\214\213\275p\013\225\276`|\025\276\346\\\221=\355H\'\276~\233\375=\r\315\223\276 \033\253=\013\010\227\276\324\341_=\200\273I\276\224\251t:r\267\351\275X\335\024\276@+V\276uy_>l\223\037>\234\220\203\276\323zA>\277K\207\276]}\';Z\305z\275\356\226W>\234\200\304\275\233\004h>|\204Z\276\252\235\215\275\335\204t\276\254\261\000\276\007\322\311<-\3150\276\177\021?=\346\300\263\275\004\r\312=\0031\336=\212)\221\276\350\300\210\276\246bN\275}\"^<\013\270c>\236n\246\275\026.^>F\331%\274\330\261\252\276\256\214\026>pc0<\217\250\243\276\311#7\275\336\312{>O\333n\275\306\302.=D\3734>\3401\242\276\225\3718\276(\252\255\275\375\036]\276\364XN\275E\335\320\275\022M\025>\366k\304\274-\220\375=\033\342\306\275\257Y\206\276Y\255\">\225\"\366\275n\322@\275=8\303>y\235\242\276\241\241_\276:\320;<hu\244=3p\231=\202`\356\275X\212V\276\366\302\371\275\014v\215>\227\353\031>=\223?\276/\276\311\2754\274\204\276\345\276\363=\317\326M\276\301 \237\2753W^\276\262\001X<{\177\013\275\366n]\275.e\243\276\343\330\264=\371\203\331\275A%Q>\322g\230>\215\350\376\275b\333\361\274\233,\361\276\301\\\014>\234\327E>\347\025\261>#\314\325\274@\312\234\275Q\261\333=X\032\362=5\316\304<s\210+>O[\270>\235\364->\337[\222<\211\217\251=g\335\302\276\344\272\307\274\t\363\004>\242\374\357\275\260/\261\275\332\377\023>\025\225\017\276\025\034\004\2756[M\276\314M\260\275\310\260\245\272Ob\030\276\313\345\313\275cM\013>\207\r\210\275\252G\360=\1777\243\276\"\314\254=\330 \351\274\217g\026\276\227\262\n>\"\324\033\276,~\207\276\\\364\356=\352A\003\273*\247\235>M^\373=\274\200\251=c( \276\363\305\365\275\267\326\250\276\320\206\367<\336\327\301=\277\316\326\273\331-\323\274\034o\344\275\315\266\020\276~<&\275\027\221\346\276\341\315\007\275KA\375<\345_\252\276\014\'P\275Wmf=\263\351\035\276\036\336\000\276\326\376\223>\230\026\026=\361\351\027>G\030m=~I\247=1\212\t=X\325#>S\260\230\276}\257\273>ux\241>p*4\2745\257\325=\364\2069\274qp\205>\026C|=\317q\021>\272V=>\246\234E>$\273B=\212B\026>\323e-==\205\010\274\353\234\215\275\302z6\275\331\236\251\274M\001b=\322\310\026=\346\316o\276\236\237L\274\313j.>\306T\231=\205\"&\276\016\333\031\276;B\036>J\277\223>\306u8\276GJd\276\2566\375>\312\231B=\036P\263\274\203\325J\276c)\234\276J\213\221=%:\342\273<jc\276\320\235\033<\241}\025>\272 \222>(~\327\275\032\377\n>\370-\245\276E\272\006=\t\327\017\276\213\\\247=\277\207\031\276\323\300-\276\377ou>\353\333\022\276\316j\217\276Z_ \276X\222\232<\2132\223\275.Pk\2750\345\233=\256\242\232>\245\030\376=\305\003\033\274\211\271Z>7KV\276\256\362\243\274\211\024>\275\200We>\221\034<\275\301a#>77\372\274\252\025T>\205\313\234\276\243P|>Ut\361\275\314R\242\276\365BQ\276\\\005\302=\243w\000\276\370\'\210>\301\tO>\200\255g\2750I\204\275\375\334\260=V\335\340<\243U\237\276h\361{\274\353\212\307>\034\236\"\276\335\017\032\275f \241>{\257\000>%\230\014=\262\200\246\276\303\270\246>P\275\375\275\326+\036\275\336\250\252\274\013\3232>,\320\320<\255\355\025>\375n\323\275\'\r\213\274h\256\234\275\313\316\002\276\032\232\203\276\276)\007\276\322b\006=!\n\207=\311\236\237\2744\331\252\273\0229m\276\rB\207=\223!\237=\031\036\250>u\210\014\276\215A~=^\342\333=f~\255=\024e\263\275\204\275\232\276\0310\020\276\013SW\2758\372\267\276\002A\266=\240s+=\346\032\212\275\026P\364\276iN&>W\344\027=\245\027\276\275-?\207=HY`\276\213\265\234\275\204_W>*\220\222\274\023\366\204\274\300\265\217=%\037\315<\333\333\226\276\335.\365=\2348g\276\266t`>\335\023U=\233o\340\275\323\211\226\276\332\007\346\275=\333\007\276\014\353*\276Do\235\273\224\305J\276\372\307\210>5\325!\275\002\037\266>\021\371\230>\262y\">\334\315\267\274&F\264>\337\025\322=JT\307\275\276h[\275\000\264\215;]h\277=\004\016\230>x\243a\276\342\222\030\276\016\256\256<\004\337\347\275I\350\014>T\231\313<\265\201\220>{\005\246\274\252ko\274\037\200\001\277\275\2269\276]4{\275N\t\213\276na\202=\030\344\340\274\304\004\276\276\242\266\020>{\237\344<\363dM\276D|\323=\312\257\300\274\263\254\036>Ue(\276\332f\007>\366\005\021>\330&_;>\360}>u\371\001>G\216\"=\326\366\207=;\313\031\276b\010i>\226\241B>*5.\275\251\374\325\274\375\024k\275\366]\204>D\034\221\275\322\374\232>\266\371\233\273z\202\232\276\n\013\344\274>[1>B\362W\276\363\035\031\275\313\264M>\264\273\273=[\373\217\276\232\324Q>6\375\021=\300!b\276$\264\350\275\352\315\217>\032@\371=\023|s>\337z\3509-P\033\276\026\304\037>\032$\324\275\306\270d\276\243l\357\275h\2713\275\305\300.><\311\237\274\032\035y\276\371\354\271= \342\246={\t\237>`x\336\275\360-\244=\370\204\227\276\326\317\356>\272\201/>\340\346E\276MW\240\276\351\253\205\276\320\212\014>p\305e=|\225m\275\026\334\016\2741\213\310=\366\372@\276\001,\320\275C\237h\275\347\273\253\276\215\245\006>\204\013\037\276\347\205m>\346\231\356\275\027Q\226\2755Y\263>L\023\227\276\274\210\272\276jv\214\27533\207>j\244\020\275\010\365:\275c3\231\275-\345\351=\270\010\'\276\"\312@\276E\276\004>\214\272G=\r\000\240=\037\213\202=\213\246|>\243i\377\275u.\217\275\252L\177<\362&\301=\267\0010\276\332\322\265=\363:\367=\tb\245>5\246\340\275 }0\276\350s\317\274\255\321\016=\345\307}\273\246\273\255=!J\234=p\327\020>\030(\000\275q%\224=s\370\225>t\321\201>K+\310\274\216\311\201\274\306J\\>\276\370\235=\"y\214>\342l\211\275b\355.="
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\000e\\\276\024um>]\221\002\276|\354\273\273]0\341=\006\0376\274\201\373\223\276\340\226\037>QX\214\276\3772\255=\314\256\267\275\252\265\264=6/\377=\007\271+\275}\017\267\276+L\016=\270\377\347=\331z\035\276e\316\335=\202\271R=\303\210~\275=\035\314\275\222\346S>\225S\373\275\244A\276>\2750\313=m\251\"\276\3024\013>\276k\004\277\321\214\220>9?\030=\255Q\356\2754\261<<`YG>\331\235\247>\204\030j>\016\270Z>\212\245~\276\321Y\2029`F\236\276\307+\347=\363\021\001\276p\330\231=\316\030\377=w\274\376\275\320a\036\275\257\331\345=\262\371\n\276G3}\275X\262\010=3\311\007\276<\260\230=\004\037\224\275:\335M\276*\007:\276_\331\257\275\341zj=\325\2739>\324\210\211\276U\366\302=\251\271\014>)\216\234>\014\027J\274p\345\257\274\323\277 \274\252yO<\226\n\356=\343\334=\274\360\001]>\204-\027>\334\331s>\226\324\345=6n\311\275\002a:\275\240_H>a\037t>\366\3264\275H\274\n\276\202m\362\274\372\272W\276cJ\246=9\206{<\203\247#>P\270\251\274\210\331\000>\320\243%\276\212\212\266\275\204\034\361<\203RW=\203\007\254\275\216\3749>n\324\373=\212\320I>\274\3521\276\330\314*=S\033\277=\335\315l\276\344\275\246=\202\3579\276K\351\001\275\271\033\323>\327\236q\276\026\251`<\232\334|>e\341\240>T\027\273\276\373P5<3\0134=\313l\233=\310\244\007>\304\002c=Qf\367=n-\215\275IL\013\276=\003\357\275\275\004\345>\375\010\273<p\260t\276\036\356\212\276\236\300\245>C\270\261>\022\210\030>\317\325q>\254s\220\276\213\002?\276\034K\331=\334\232\303\274nJ\006\275q3\200>E\013\014>\351\274\036\276VR\257;\003\225j\276\'\260\234=\267\0135= \330\302=bA\267=U=w=\200\350U\276\254\201P>\270@J=\347d\'<\372Q\032=\027\203e>*pL>\250;W=Fl\336=\005\350A>\030\\\216\276\274\232j\273\305\217\231\275Mi\300\275Ru\002\276e\000\207=\024\274\276:\237#:>\007[\201\275\251\320\311>\2045 =tgA=>\374\210\276\206\013/=\201\370\314\276g7+\276\262\021W>\256\024\277=\200h\202\276]\302\264=\365\324\341\275\336\362\200=\254@\203=\353;_>\217={>\216\237\231>\360\367X\275\241`-\276G\"\273>d\214 >P\n\302<\256\227\331\275SF\236\275J\033\t>p\000\330=\200\357\006\276Z\355\341>\210\242B>\266$G\276\r\016@\276P\262\377=m0\267\275\241\205\313=\322\025\220>X\373\004>\232\217\\>)\035\335=\375+\206=\205\326@=\253\315\310\275\350\021\236;\030\027w\276~\177\266>|\242\202\275)$\340\275\034F\221=\227\266\335\275t%\304<\001s\354\271n\241\213\276D\020\241\275\261i\211\276\t\\i\276\241n\341\2751\351\373\275\302O\252\275\200\013l\275*\001\321=c\202;>\326\370\225>\032\252c=2+<>\013zJ>L\t\343>s7\213\276\013V[\276\007\321\t>5\326}>\036Z\201\275\361\236\252>\r\010u\274\307E\202<X\031\312=>Y\265>y\322\324\275\013\241\241\276ik\226\276=\375\t\274\240\tk=\315\235 \276\343\002\010>\353\n\307=\265\355\245\275\t\014\244:N8x\275\304\256\217>\244\021_<\250\334\010>\226\340q=\331\2251\276\273t\365=\331\200y\276y&\202;\211\036Q>`\256Z>sJ\230\275\242&\021\276Q\231\004>\r_5>%\006\307\274\3657\205\276\352\321t>tC\314>\320\357\204>\323=h\276~\343q>\335\342\207>\3404\004\276\270\342f>\350H\020\276\303IG>H\244:\276\203g\234>\000\271\t=\351\343\225>U\321:\276\267)\005\276\376s\231<3\004\330=!\206*=\031\004}=\007\320\264\2739\031\357\274\256i\212\276\274\264\027\276k.\">\202e\030\276#\301\364\274L\206\262=\313$2\276Y\2770>\237\354\216=)\231\026\275eW\201\276\216[8\2762M\303<\000\215I\276\030\317\006>\246\027\200>\273S[\275\272\234\345\275\310\354K\276\002\022\202=\254\215\263\276\301\246\306\273\351\373\223\276\251\202T=\226>\352\275\340\365\231\275\350\024\t>-\'4>\306\362\346\274\033\2361\275\330[h\274\274\220\333<\240\335\010>\210\322\020\276\005\t`>\200\363*\276)#X\276g\372/>+\317\211>\024\207\335\274@ L>\326J\204\276}F\371\275\254\262\367=\237h\222>]\037T>G\307\216>\320\327\n\276\030\323@=\364XB=\353\260\326\275\206\014|\276\3549V8\030\022u\276h\032+\276\264\343\205\276\030*<\275\320N\364\2753\372\236=\361\025O=\366\273.=/@\'>(\270\005>\246\231\000\277w0->QU\037\276\345\327\022\276]^\370\272-\240%>*\274\322=_\013\232=\007\337\022\276~5\243=\335\3152=\247J\247>\343\275o\275\202?\307=/N\021>m|\002\276?\006\377=\3637\323\274\376<\254=\357N,\276V\000\307\275hY\010\276li\237\276\232\003;\276\033\330\212<\316\010\'=\215\033\351\274\t\\$\275\222\260\245>\003\351\224=\004`\031\276.~U>\207L\243;<\364\020\276\300\301\342;\033\"\240\276\243\370\213>\345\316{\276\357f4\276\026S\256>\"X\353=$:\010>-\265\256>\r\2431\276\261\305\323=\360\335D\276\251\371 \276o\254\223\271\024\013\220=\264\232H>[\270m>\230\250\220\275A\315<\276/\237\205>\260{\010\276\320\236\230>\265\203\362\276;\000\230\275m\2278=\250\246\334=2\264\377\275A\314\021>s\261\005\276\313\222\037\276\037Mf\275\375\221E\275\021~\223=\034\007\222>\344\227\261\276>\017\202<\274\261\024\275\251\325\273=\004\021\323<\373X\021\276\206\004\'\276\314\204V\276\374\250\234>\022=\006\275j\202\373=pd\207\274\321\344\247<.\tJ>\357\312!\276\212\221\274\276,8\254\276\031\027\016=\2639F\276\236`\372\275\250e>=\213\005\375<\313s\272\275T\007\276>\201)\325\275\350n\216\275\201\251!>\017O\210=bx\205<z\257\336\275\177\222\346=(\374<>\240\272\007\2768\035\200\275\307\343b=kmf>\356(\"<\261j\026\275\250\2735\276\021\304\314\275N(\'\275:7\256\275Z\302s\275\364c\202>7\226\241>\337\233\364=\224\244\013\275\211\260$\275\217 \332<Yp\313=)\226<=\322\322\336\276b2\014=d\262A\276\007\256K>\223W\205\274\352?;>\225\270\226\276u\3672\276\231\374\222\276\212\346\"\276\201;\315\275Q\003&>\364\326H<\230\375\237\276\365\263S\275\256U\034>&\301\"=\220\021\361<@YV>\335\336\225=G\372\240=L1\377>8f9>\227I\232>Up\215\274\321\004\264\275\020\007\321=\311\332\220\276\342\317\003>\254%\305=\n\361\252=\030x\344=\355\215\304\275\250NG\276\005f+=\246\200\262>4\t\215\276Y\264m>\210%\n>e\332\001>\346\241\224\275\243\016a\2752N\n>t\202R>G\221\240=|\206\016\276\355\242D\276P\205\023\275#\347\"\276\302\267\001\276\340gD>2o9\276\002\036\004>C\357\236>\017Tg\276\245J\314=\371\'\027\276\305\021s>2\261\211\276t\374\222=6\256\232>\214\325#\276Orb>i\305I\275\274\337\351\274*\263\024\276\310\006\016\275\327P)\276\251\301\260\273bN\r=\346\3330\275>\366\246>,>\022\275!\324\021>S\031\365=\315i\206\276\2220\222=cBE\276Ph\260\275\236\211\215\276N\323`=\037\372\273\275\251O\022\276\200]\200\276\316\301\267\275J\177\361=W\263[>\342P\177\275\211\317@\276\342_\304>#\211\255;.\270\253=P\217\327<AP\307>\224\252\375;\260i\225\275\205\203\243=\377\312\036\275\rBp=\3671&\276:b\345\276\365\330\032\275\020\344j\275\265\255\030>9\244\007>d]M=\314J\214\276\265\357\003\274\214H\357\273C\347\253\276\020\315j=\265\014\024\276\031\000\367\275\035W4>\'%T>\231\356\237\275=\244N\276\230\034{\275\007\305\376<\243\277X\276\214+`>K\306e\276F\364\227>\265\250\210>\177\326-\275\353p4\276\031z\224=\214\226\242\275\210Y\230>\327vr\274\025\357\213\2750\3764\276@\323\255\275|\303*>\030\207\213>\276\036\271=\n4\361>\327\022\373<\271\320N=\247P-\276\353\236\205\276\260\370\327;\017\375c\275\345`-=\303Z\027\276\261\2375\276\315h6>\353\271\034<\352\244\227<\031s->\370\2022>\207\344\n\276\211\354\265>\004m~=\355n\372\275)\361\371\275\320\344\013>\332\316\036\274i\345Y>\2254\316=2\375\317=/<E\275\355\362\251\274\272$\007=\337\3765\276\306S\034=\204\217s\276\014\004\212\275\303\026\226\276\027T\007>\020\227\010\276\364b\274=Sx\\>\210\251\231\275!\024\213\276\206\214t>R\377\277\276\201x\003\276\267\253\021<\344z\337\2748\252\034\276\021\201\316\275\311\267\217\275\2253~>-@/>\316\354{>\375X_=\361\317|\276}\033\260\276\216\023-\273>\312\266=\262\237\341=\003\202\237<W\260\305<\3519\224>\270B\004\276\253D3\276\2601=\275\267\350\000>\314\005l>RZN\2753U\315\275e\315H;\230\373S=c\'\230=Z\375p\275\313\226\364\275\350m\322\275\271V\354<\223\227\037>\256\271m\275\324jg>Go\341\275\255\217]>\214\021j=\273\035\274=\3054\271\275P9b\274\314\035\252\276a!)\276\255>\224=\311j`>F\214\324\276\306\317G\275\211t[<\212\310\336=\342s\231>\007\361\"<\230\244\231\274T\376\004\277\371<\325\276\202.\t\276\252|-\275\303\351\301=\177\r\366;$\235R>\274\361\000\276\363FF>\t\336\251\275R\020\261>\322\360\006>\367\254R\276)>\027<v\025\306=\247\273\315<\035\357b>\205\252!\275\257\215\037\275\350\306\254>\237\353\224>1\236\233=\242\320\206=\252\210$\275*HH>Y\352\t\275\316\330\r\276\203\213\305=\017w\251\276\350\333\r>u\247b\276\321\tX>po\202\276\326\307\016=\177Y.>\252d(\276\202X5=\334\204\244\276\021.B\275\237c\177\274io\300>f:/>\240\373\034>o\261a<G\313\250\276\242\225\234=\244t\250\275\004\330\215:O{\376\275\274\255\273\276\317\024%\273\240V\220\276~\227\264\275\211\305]\275*MD\276\320]K\272J \204>\335\007\r>U\261\301=]\236\213>u#\306=\367\033\360=\377L\264=\323\277\033\275\2207a>\030v\350=\253\357\236\275\373\307:>\020p\027\275:\346\253=\321\346\367=\357\340\311>\231;M>\2219\335\274!\331\005>\234\320>\276\304\2672\276\374\337\001>\246Q\205\276l3\370\274\020\215&<\036n\006\275\221O\365\276\230r\311\274\0237t>%V\235<\304\360\372\275Q\213*\276\370Jh;p{\272\273\303H\350=]-3>\267O\276\275{\t\020\276\205\342\221\276c\352R<A\374\211>H\324$\276\370hl\276\003\275B>\231\244\246=\362a\237\276{{P>\327m\211\275\035\315\231=\017\\\\=\370\277G>\020\270\215\275\267\310\265\275\035P\261\276=\213V=:|\004>(\036@=\356;.;\026IO>7\n\250\275\224:\034\276\316\2679\276\364f\251>\':K\276\333i\241>\342\235{>?\262N\276\3460\361\275\235\202n\276\212\255\226\275\3576\213\276:\223\031>l\026E\276z\237\266:\304V_>\374Q\340\275\225\374\004>\262&\001=\034Q-=@\302\227\276p\300\001>\240@\243<\211\334\336\275\333\r\240\275\377\317\360>\331\377Z>\030>\367=v\000\032\276\316\344b< o\275<\315Y_=\206\235`=!i\330=P\021<\276\217tK\2763\216\035\276NZF>\312\254\352=\1776\350=l\376\006\276\361\276\r\276\260Z\270\275\030@\021>>3\202\275\236J\324\275b\017\337\2758]\010=\351\306\273<\314\362\360\276gc/\276\270\223\255\275\216D\211>H\351\"\276\214wx=x8\354=d\031\210\276\367\306\374\274aMs\276\000Tg\273\354\313\031<\203\250\013=\314\221\210\274\267\274\334\275>\241\347<>\367\213=n}\203>(\336\200>c\234\340=5\230\372\274\207X\222\275VP\231>\345\013\247>BUG\276yc\223\275\026Mh\276\324\351\253=\306\240N\275\364V\327\275\375\320P\276\212\371\026>w\017I\275n3B\276xD\232\276\260\322\210\275\214WL>Q\016Y\275T<\037=\224X\350\276\031\010\036\276\221:\230=C\026\023\276\336\031\354\275\204\274>>\341\024#>\263\217\324=`\033\310\275\016\002$\276\020\310\260=\266#\\\276\213\306L=\223*3\276|T\214=\030\\D\276\223wg;G+g>\016\313*\276\245N\335=\363?\237\274\024\007\303>\275G\022>A\n\177\276J\315M\276\0172\341;\365\177g\276i\313\345=\014\261\231\275%\277\212>A\266&\276\310h\232\276\211\207^\275\025\324\033\276\260\025:=a\177R\275\261\353\031\276.\252\230>q\"\256\273\002G\242=E{\211\276\026\342_\276\200\363\353=[q\034>\256\036\342=\246\334\203=\177\236\267\276%Z\241\275i\223\374\272\240\263\211>.\212\226\275b\206\237\275\326E9>\350\361(=\256(Z>\271\347\030\275\210\324H\275. \017>\261/\333\276\271j\233\2760\310\251>\337#\222=k~\315\275;#,>\013?\332\275\241\214\227\274\343\204q=\222I\237\274\266\t\302\275\021e\235>\312\272f>\t2\"\276\367E\367\275R\257-=\274\032\276\276\311\022\360\275Vl\232=\363\336\020>G\237D>\210\345n\276\010\374\021\276\223\327\344>iw >\330\000\027\276\'V\023\276\330\211\264\276\204\341W>\212+\253\273\334Z\270>\226w\001\276\r\177\000\276#\361]>3\203\373\275\250\025\224\276/\313\024>\340\330\351=\202H(>2[\273=\263\037\036=H4\242\275{&\315=K\334\005\276`ef\276\024LM>\237\346\000\276\350\031\004\276\007\245\032>H?\303<Z<\274=\227?\202\275\336\351$>\201\\\236\275?\247\"=\371\nx=\315\257,>F\032\233>*\025\\>\270vK\275\030\002\221\275p\260\020=\335GR\274\376C\255=\311<\240\276\020bn>*\303\372\274\031\026\252\276\220\200\332\275@\255\235=\006\r\212\275\352\177\232>\2221\207=8\023\232\276\330\314\035>\322\340\302=q9V=3g\233>\306&\353;2\317\253\275\330\315F\275\022j\243=\361\352O\276f\234<\275\3522I=\205\323H\276\n\233a>E\304\014\27632\215;\245~-\276\301AL\2767\004g\276\030g^>s\221?\276JyL\276\323\221\036>l\220]\276\313dS\276y\342\004>!\322\337\273\257\021\017\274\007p3>\360\320\315>\316\200\036\276\320\306\'\2753\376T\274g\313I>}\r\014\276r\253\023>\351\264\217>\223]\335=\330\265|\276y\352\255\275\315`\360\275\232A\246>\256\260\317\275\336X\234\276\361\313\321=d\210\031\276\371R\005\276\253\316\253\276/\\\203\275\224\353.\275k\027q\276\344\240\005>\013V\206=\213\375\213=\207\273J>q8g>\227w\034;\'\264\207<\352 E\276\242\252\330=N\224M\276\203\300M\276\267\226 >\n\013\371\275)\367\367\274`\264\024=a_\345\275\352\342\271\2753<\212\276qJ\205>\317\214\022\2762\036\330\275\036\273N\276\264%X=\013\261\204\276u\014k>{pD\274\276\006\250\275\320\222\244=\315&\354\275D]\207>R\024\024>\227\335\203\276\030\3242>I\313<\2760\366O\276\026=\267=\024\232S\276\"\251\006>5&=\276\273wG>\216\237\276=\027\230x\275\245\004A</v\223\274$2\255\275\202\305\024>K\311.>l\250\236\275\372\223\346=\\L~\276\362\037\002\276\014\340\206>\230C\234\276}\\<>\255\340c:L4\005\276\252GF\275T\363\226>g\224\362;\216\2108\275\224\371\235>\006\306\253\276n\317\205\275\273x9\276\244\r\345=s\302z\275\001\336\334=\000\321\341\275\2154d\273\353r\216>h\277\000>R\024~\2769\002\344\276\227}R\276\207\206\023>\323\361\007\276E\240\331>0%6>\037\235-\276\270\330\235\276\377Aq\275d\333c\276\336\345\263\275\2355\265\273\376\224\215\275\375\3119>\362\316U\276\006\244\034\276\261\333\274=J\364\304=O\014\207<\355bQ=\351\034P>I\033\331=\243\227\245\276\035\331\271\275\347#\213=\242)\000>\'\027\375\275\037\206T>Ip\204\276\250\333\243>\005\276{>t9\355=s\036\362=y\030\r>m\352\252\275=\256\262\275\265\262\233>iI\263;t\271c\276\'\004\334\275\364(\245\275(2\035>\305\366\n>|\240\204=M\350\302\274\314A\014>\355V\255\275>\215\313<\"\332&\2761Fb\276{\271\017=s)%\276\315\270Z\274\265\231\300=Le\310\276n\213\032>}Xc>3>\342\276\276\305\010=\302\336\327= \222\326\275\327{^\276\001Q\r\276\004?\\\276\305K\345;\254W\316\275\300J\363=t\240?<\223H\021=\007\322\200>\354\n\255>_F\212>\231\320\375=*\231\240>Q_?>,\005\014\276\n4\240>\334\010\">\373S \275\272\232\356\275\260\331\207\276\213\230z>/x\010=\315-\356;\025\351\210\272p\014\035\2731M\300\275\231\031*\276\023\272m>\0140\203\276\006:B<\371\333\226=v\230V=\265^\001>X\244M>q\202J\276\224;F\275\371\362\242\275j\325\342\272Ddo>\237\367A>\021\345P<\370y\036>2\271\017=>]\251\276~\tt>}\227\025\2757\353\325=\254\310\212=\316t\335>\227\217\355\274\323&X>A:(>E\007H>\3456M\275\246\030\014\276\034oH=\\v\030\276\354o\251\276\216\267\223\275\316QM>K\221v>\354\324\306\275\213\010\267\274fkZ\276c\243\327=\1779\243\2754\004<>\255n\000\276\234\241\202>\223\273\203<m\322h\275Q\230\251\275\323\204\301\276h\353\265\275\365n\225=q\376<>\016\276\336=\303Mw\275\335\365f\275\371l\343\273\367\024\335\275&\345\221>cMy=\261\234G>\264\217\017\276\\\037x>]\\.\275\311\353\\;\002\347\023\276\261\340\032\276\316P\225\276\004q\343=\305`\241\276\0204\010>&\212B= \376W\276\236m\311<\n\377w=^\337\250\2751\367\353\274~~\026\276\313\013\275\276v\237W>7\020\267\275\363\227\211>\3028\204\276\212b\220>\246\255\017=\005~\276\274H\354\241>\036\230}\275\2168b\276Zu\303\275 \322\254<\237&\215\275r]\356=\200I\352\2755up>/w\003\276A\304\237=O\"B=\355\014F\276PCN>\240\262\016>\314D\217=\235\267\370>\270\330\243\276\233G\275=\016L\203\275\334\000\027\275\345v?>\014.\032>\351_s=\310V0>0E[\276uOp\276A\306f\275\264z*>`\003\001\276{\035~\275-\017U>gf~>\323\322\002=Tg\204\275\3167\353\271\373\336\002=8\\\r\276\332F\332=*\345q\276p\220Y\276#\200j\275\305{\036>\243\264\273;\235zw\275\340\346\215\2759\335\002>\t\024d\276\326t\256>b\010\311\275X\306\007;\361D\010>\362W@<\273d >3\273\232>\314dX>\371\226\245\275\303\370\216>{N\020>\204\376e\2767B\243\275\002V8>UaW\275\234\034\222\275I\202\346=\376\351\033>\322h%>\341\312\301\274\206J\266\276bf\256=Z\360D\276\202c,\276}\334\237\276\233\376\364=\001S6>\251\240c\276\343\001\364\274\351\303\026\276\2009R\2756\260p:wr\325\275\301\257\300\275\263Co>E\r\211\276\310\217\022>k\241\236\275\327<!>\356#<\276\201P\t\277v\033\370\275\022\372\031>\226\276\340\275\362\224\266=?\375\252\276\230\231Y=\224\230\200=;\036\006=\272\"O>\312\324\'\276\320.(=4\206\221\274\353I\326\275sW\261\276\311\313C\276P\266J\276\221\327\200\276\204\027\027>,\177\014>\0065;>\370Ce=\373\010\250\275\352\024=\276\354\007\230=\020C\212>\024\337[\274\304\026\">Q;\316\275\275\341\204\2763\201\304=\262\203\022\271\r\277\210>\260\372\315<i[\311\276\024\277C\273c\351\024\276wn\033\276\373C4\276\0326\013\276\362 ,>&>\224=\332\231\213\276\2640$>\271\353\275=_\346\212\276\310T9\276\243a\027=\367\005<\274T\210\020\275\230p\266;\265\002|>\022\235\313\275\023[g>t\264l\276\344j\236>?N\'>X\017i>~\034H\276C1b\276Z8\021>xE\306=\001\345\206\2763Dl>\022\354\375\275Z\234\223>\2040\026<3T8<p+\004\275I1 \276x-j\275\340\270\010<&\001<=\232s4\276\264_;\275\323\274\230\275\3456y\275`\251\027=:\004\252>\024\n\026=\003\313\314=\341\035\341=%\251\321\275\014\222\004\276\246\036\345\27566\"\275<\367\201\276\366\352\313\275\\;\026=\007\355G\275\340\246\">.]\006>\335\260|\274\033\371\266\2757\242\210\276t\363k>\214\036\036\276\360\243\350\272\252\006*=\316\000\257\276!\207-\276It\"\276\006\345U\276\001\321\037\275\210\373\327\276\037VE>\346<\017\277\240pw\276\027\026\324\275\2328/\276\203[\324\275\260\031\214=*\203\210\276g\257\325=\254b\205\275>gw\274\300\370\013\276v\035C>\220xx>\335\200\032>>\035\253\274\323|\305=\257\204v\276c\177A>\224\301\212\275\264>h>tI\233>\305\211\334={\250W\276\212(r\275\033\023&>\245i\251>\265\200\216\274\220Ez\275ZC\272=\014\016<=b\370U\276$Nn\274\3201\235=\231\233\372\275~\031W>z\260\351\275V\225\240\273\363\332\211\276\234\031\266<\014z\204\274\247B\341\275l\317#\276K\266\320\275\341\364\344\274gY\237\274&f\234=v\260\235\275\364\245\254\276K3U\276x\267N>\336\327\311\275\260i\002\275T\004\211>\226\307\376\275AK\217>\036-\251>T\347\207\276\215\243\006>\257\210\365\275\222 \343\272\264{\337\273|\300\216\276oL\'\275*\006\242=a\031\340\274\3366e\275\031\246w>\323\246\201>b\033\022\275\315\0369\275\310Gu\276\023A\033\276\272j\335\2767[\206\276\035\000\272\275\232o\242>d\215\202<e\365F\276M:\213\276\007\321\272\275\303lr>\323\367\242>`w\232=@\2554\274\007\007\004=\001Qz>\216\332\233\2713\3331>\370\274\202>\322W.=|H\310\275\375\303M\274I\016\222\276\376A\233\2758\033=\276[/\263\276\r\033\316\275\375\305*\276\355\265\277\275\351\322h>\237\302\352\276\360\252/=\367\333\316\275\255\204%\276%\217\013>\033a0\276k\232\334\274\016\361P>\365J\215>\300\267Y\275\313\221\344<\020o?=]\262\025\276\217F\202\275\346lo\276\024\351\217\275[\"\373=8\334x>\226\\\024\276\364a6>\277\263C\276\r\344\232\275\021f\372;C\037\235>\324%\302\274\376H\216=\026\220\224=\000(\313>\267\237\261=\331\264L\275\247>Z=\002,a>\177\305\240\275%O >\253f\265\275d\317\260>\201\364\252\274\345\001\225>\251x\310;5\364\020\276\223\033\212>\251\031\336\274-^8>\317\317\233\274\271W#\275\326\023X>R\035#>\n\201\307=\022\320~=\362K\217\276<\301\020>&(|<\240\303>>D\013\316=\300\363}>\365\310\r\276G\221\021\276\3133\215>UW\332=\350\230\351=\005\202@>\226\r\032\275\310B\201>\222G\355>F\375\263>/\201\365\274VY\027\275\003\302\030\276.c\245\276mD\320=\3177\t>sG\274\274\226\035P=\3578\225>\325\tL>\231Eh>c\r$\276\220\225\276\275s\221\250\275SwZ>\034\3420\276\247\343\262>\n\027\307=\320m\241>sl\207=\252\267\003>?f\222\276[\367\350<\311\017\211<\235:\205>\253r\031=\223\\3\273\334\006\317\275\345xO>\"!\245>-\215q\2750\307\250=\307q\343\275\3574,\276r\366\001>k\"\261<\006\025\351\274\177aG>@mO=\330Z\272\274\320\335@\274\226\256\357\275\250n\360\275F^G\276\020\346\377\275)8\337\275g\231i\274V\027\203\276\213!!\276\3135\315=\240\344\321\275\205^\236>]\024\024>\326\306\005>8\351\270\275Z^\245>3\364\201<\273\265\007\276\372\310\264=($->\004f\301\2767f\244\276\244`\237\276>\327\202\276Y\211\341\275k0z>\200\t\320<A\nO\275\0015\365=\004\3143=N\207{=\247&\310\275\214\220\357=\223V\226\275\032\324\227=(\356[\274\200U.\276\267\002\335=\236\233\003>\352\017\316\275f\230\t>\202\004\270\276\245\233^>Y\327I=\245a(\276p\302\363=\357\314\224\2757-\352\273\3756\022\275%\003\256<\n\024\315\2753\002\354=\0325E\276Z\177\212>\222\333\321<\n\230\237=\255\023w<l\013m\276\301N\021=\313\206\273>Q&\000\276\021\347\340=\026\252_>\225\237\005\276\260\217\\>+\245\272>@!\361\275\362t\237\274\220\256\027>s\202\004\276\204s\310\276\0176X=.\324\233;\350\265.\276\331\340\366=\003\337\250\275i\304h=\307\037~>\243*\350\273\371.\022\274V,H\276_\215\030>\276H:\275\005\331\217\274k\2667=\316\362\013\275\363a\343\275D\006r>,8\253>\250\371A>\337\361O>\302\320\317>\022\235\351\275Zpu=\013\020Y>\237(\037>\217\220\377=\350\214\211\274HF\202=$\372\335>\221H\243>\240\223\200=\013;\224<)t\212>\372tm=R\027\262=8\002c>\270\322%\275\227\362P>\222}\350\274:\3335>Jnn=\222<\377=\322\002q\276\3463d\275\007\255R=\376\241\021\276\2340x>\311}.=\302\177>=\r\372\200\275\212\001\001>0\001\301=\036\372\266\276k\351+\276\325!\262=I\030p>R\300\305\275>}\321=\241/\361>\315g\271=~\226-<FA\357\275$\210\246=Y\013\305=\363\262t\276\275Wb\276\300o\027\276\274G\003\276\254W\177>\230\003-\276i@\004>MQ\031=C\314\032\276\366%y=G\301\213;\361v\021\275EMg\276\336b\203>H\204\200\275bP\216\276A\321\017\276\032\342\214\275&I\312=)\220\024>\256U\365\275t\337\350\275\005\377\346=\327\036\321=;\222\014\2763\267\036\275\367\213,\275\3457:\276\267\021\036\275$\326\230<U\001\033\276A\021L=$\350*>\007\325\205>x<\263>\234\220\372=\270:\222>\t\371\370=P\\\376\2769\340\214=iwA=\036*2\276t\314\206\273\2564\236\276~(\246=d\230&\276\245\361\000\276\322\221\007\274aP\377=\267\217\031?\230\263<=\372\233\323\275\212\027\010>D\200\010\276\260n\354<7),\276`\266\235\275\000j\207\274kr\303=,i\022\276v#\250\2763(\355;e\341\031\276\007\310\031>^\034;>\214d\260\275\020o\020>C\036a\276\373\252`=Yo\001\275\021\033\306\275\3722\367=W1#=&\222\342=\305\361\n=1\273\010\276\276\255\254\274*\305\007>\257\346y\276<\260\365;\333L\341\273\013\r\351=K\263\311;\025\233\003\276\010\006w\273\306\022O\276j\272\035\276\347\244g\276\371\005\222\276\2037\034>\262\377[=\036I\r=\314\374\275\276\377\r\277>\307\223V\276\ty\260=Cg\335\272\303\225\000\277\274\231\356\275\014\357\211=\205\325\023=&\231G\276\333I\371<{\367e;\236\025\335=\374\n\224=\355y \276\200\340\240>U\323\007>\002?\205\276\245\251p>h\350\240\276~:\203>KF\214>\357\207*\276\320\371\016>\343\270\336\275\322\006\266<\217\025\003=\377\016\367\275\343M\235\275\20370>\226|\244\275\367pb\274}\323$>\355\036\300\276\341 R\276{\226\266=\354\030h\276\200\377\367\275\t\005\363:L\210\206=\276G\324\274\006\367\267=\213\367\004\277;\272S=0|j\2756\351Y>\271L\276=\337\371w=\371\347z\276\022\030*>\025x\005>\332x\034\276}>\033>\2716S=\307Vb=\322\3220=\004\366\340<\246\234\004\276\337%\025=\204\036\377<\266<\352=\025\321\010>\006]H\276\226F\301=\377Eu>\211\262W\274\233\0108\276\307\277p>\3642\243=\307w\206>\252u\037\276n\023\030>\013\225\233\276G\215\225\273*\263}>\202\347\321=_\342\016\275\337\266P>\371f\226\271\004\341\302\275h]\366\275\314\2334>\333\332\353\275\'v\371=\224o\244=*\217\314>xk\221\276\217Y\277\275\215\337\000;g\014\367=\336_\226=\n\201\320=/U\235==\307\204=\273<\256<\017H\330\275\303\353\014>\001\002\333\276\356\033\223\273\264y\242\276\224\253\233=h\202\344>\237\305#>\222\361\222\274n\3316>\227>\265<*XH>\364)\031>dRK\275;D3\276)\307\352=\rD\214\274\307Xy\275f\277\314\276\371\275\305\274\035\320\320\275\304\030\324<$8\032>\221\227\'\276v*\177\276\377c\007>\035d#\276\321C\247=&\276X\276\356\264\013=\032&\203\276\202\311\204\275Z!M\276\331m\202>\037lb>\030\327\230\276\034\242O=M\254g\276\364CW>\222\254\247\275\346\270\253\276\252o\227>\370<\305\275m\337\003\276G<8<H\215\323\274T\n\222<uN\372=\311\013\005>\225\023\310<\332M\370=\335\025\261>{\205\347\273\237*q\275\375\253\016\276P\353\304\274\314\266J\276\233(j\276\376\024\365\274\034)_<c:\214\275\203?\256\276\352\305\005>\374K\363\275\247\370\216\276\016\260\320\272s\265O\276\207Lx>\0161\023\276\342V\221>-\274\300=\tb\252>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 33
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\322\310\036\276%\321<\276;\332*>\223\216\177\276j\016\234\274G\340>\276@{\221\275\332\310\322\275\315\307\230\272Es\250\2758\177t>\363\256\t>\223\021&\275+\014b\276\t\364\017>\345\'^>F>a\276\336@\200\275\212C\260<\211\376B\276CP:\276 \r\256;\242\006y=\321\201 =a\255\025>G\361\255\274$\r\204\275\302)G\273\304\247\211\276\306\022a\276\357\211\n\276\217\nE>\010\002\234>u\311\013>\'\336D=\303\366\206>T\236\014<\306\246\244\274\376\224s=M\307\206=\323\212G\276\177L\376\276p\304\255>\241,6>&Y$\275\0100 =\330\364\315\275\352\3764\276\333Yh<MFk=\204\362\256=\r-\025=\030\265\025\276\347\273\224\276\036\221\032>\346\217\236\275\206\\\337=\363\034\224\276\007\330\227>XS\373\275\240\0369\276\272\360]\275#\336\257>\210n\225=O\254\365=p\360\344<\316\220>\276\037\232\346>\263\372\005\276\304\327o\275\262\032\206=\0226.=\354\256\343\275\002\327\r\275`b\027\276s\266S\274T~l\274\021\200\317\275\223e\036\276\227\304+>\263\230\372=\251\255\020<=\023\262=\206\304\246>\360\350N\274\274\004\236\276\222\312w\275\2412\202>\200\001>=\007\000\\=\225\212\216\276\366\255\303\275\363\315\021?\326)\327\275]|\023=\310c\234=\036\033\245\274\233~\232\273\210\031O>\206(R>\213D\037\275\267B\276>\272J\373<0Z~\275\373\303[\274\330\344\330>\231-\037>wX\215=\2074\272=\036\342+\276)\3562\276.\265\252>\371\313\263<2\2474\276_\0140\275\241\321\260\275w\363\025>.\022\023\276EY}>wL\367=}<\033\274B5W\275\024\312\373\272\037\263\307\274\376\007S\276\263\265\215<\031D\275>\3347;>\365>\177=E\260\272=d\250\347\273\232u\355=q\362\244\275\332\210X>\361\364@\276&\255\266<\304\250\301\275{ \177=\262fA>\261\260\334=\356\373 \276\246\305\361\272h\223\310\276\266\352F>\232\022\302\276_T\320<mIY\276m\264\223\276\346\364\005\275\010\311#\275\305\303\014>0\007\005\27645T\276\375\233\014\276\276S5>s\306a\275,\224\264\273>\224\361\274\\\037\254\276~C\245\276\221{\312\275d\036\314\274w\343\n\276\211h}<\356+\006\276k\242\251>\227\336\376=\357 \257\276N\3410>\317k\373\275[\n\013\276oq\267\274\242/\212>)T\211\276\026\232\320\275^\315;\276p\013B\276\006e.>\255\360\342>\373t\n=-&\232\275\301u\354\275\315\221\006=Vl\213=\251u\367=\365\202\260\276\0355$\276\037W\r\276vq\237>\0032\001>\265^\013=8\240%\276\202\"\r\274\322\267\002\276z\323\302\276\021\223\271=\246\230\255=\365g\013\2761@\330\275y(2\275U\345o>\365\336\212\275\304\254\206\276\212\2159\276?\311\005>\314L\217>\014\257a\276\010/\234;S\277\003\276\250]:=\377\314[=\324Q\024\276\271\220*>\240\345c>\343?\366\275\2708a>\234\305\276\274\023\333\305\275M\335f\276\332\357@\274&\354\236\276T\t\036>![\006\276\002\004\214\276px\203=\336.\001>\250\362\260\275TVK>8\220\236\274\230q~\2766\307\322\275\377g\020>\277C\014\2760XT=\257\303\003>Z\204\364=6=\231\276w\216l<\354ds\275n,\274\275\3137\237>l\352x>\323%\233>>[\272\276P\221\000>e.\255\274\226=q\273j\006\371\275\337\325n\276-\327\375=n\250\267\276\354\344\020>4\262\246=Ju\300>\334\330\000\274\336@b\275=\240l=#\351\244\275_\335q=NS->\247\340\376<yO*\273\303[?\276Cf\253\276\241\317\266\276\350(E=<\304V>\341F\267=\021\317\371=.\374\023\276A\266\307>\324\220\240=\253\270\032\274.\215#\276 \336\216\276\250\335\013=\310\365.\2766?I\276\"\341v=\177T\345<k\264E>\260\335\016\276V=\232\276\031n#\276,w>\276\303p\371=\025\234k=\372Z\306\276r\027<>\347\253\202=Y\013u=\200[\303\275cP\'>.\004Q=\034\227\325\275\265\244>>7\237\t\276:\032/>\242\372\226\275\346\027p>B\252\360\274\244\264\220=\367\033n\275\320\350\312<\354E\221=\235{\347\275>\216=\276\315\033M\275\"\177\036\275\027\327S\276N\351\316\275e\345\252>\243\0335>b\274E>\323\361!>A\224y>\317\017v=7y\032>F\261 >(K`\276\224\366\016\276U<\344\275N\212\026\277\260\006,\276a\240\245\276x\303\262=y\210\212>\310Y\013\275_\027B\276\2339U>\017\247Z>\250\000\024\274\213\375)\275A\366*\275\334\033\331<\274\020B>O\022 <\350\261\340=S5\034\276\257oP\275\266\224\006\276w\350\237>\202\020?\274d\027\027\276\305\345\303<\223\0215;_9\004\276rvQ=\376\345D=\320\336\016>\376\235\227>\020\245\324<\363\363\347\271\324dN>Z\200\026\276\301\nX\276;\035\030<rn\311=\325\255\246\2754\303\266> \232\270>\2704\204\276>/T\276\3156\273>O\025)>\327)\032\276\n\027\254<\375\202\'\274\037\204G\276z\340\034\276\213\256\224\274\371\357\343=\237;f\275#\312\261\275\"_\212\272o\303\006;M\235\263<N\225_>\213Bl;\216NE\276\243<\212\274f|#=\304\371\355\275i\0173\276\241\320\001\276t\353>\276\210;\345\274aL\241=\3140H>\260\265\250\276%\356e\275gI\364\274j\205\233\275WP\215>L:\265\276\255:g=\001BZ>\034\335\\>\307\306a=F\000\256\276\360\024Y>\333\326\201\275\245\346\206=\345gb\276\0264E\276\207s\321\275\nj\233=\301\032V={\331\221=\025\313\260\276\177\030\307=93\005\276\207\006\237\273\234\357\272=\225\301&>Y\244\227>\213\360\201>\007\344i\275\215\n\326>\236\310\032\274Bu\003<\002\346c\275|\210\236\274c\327\225\276+|\023>,%\364\274\036\241\016=Q\234\330=\302O\027>\317Y\310\275\257\345\247\276\010\365\263\275\255q\030\272\365\rb=D\317\331\275\221P\235\276\366\220\270>\010m\033\274Nk!\276|\307R\276\0356>\276\261H\004\276O\r\017\276\266\354\021>\366\362i=\361;\300>]\320\222>\2247\231\275\303\244\233\276\323!\325>4\016\227\275\375i-\272R\030N\274\357}q\276\215\037`>\206$\014\276e\216\235=\030\311X\276\267\"\n>a\302x\2754\314<>\304\033\014>:\373\363=q\236\245=FJ(=\037\221\270\276\031m\341\274v+\223\274\273\204v>\317\001\271=\377N\323\275!f\002=\356\261~\276v\210\364=\r3\206>\205 \336\275y\321\016>\360P\003>/b\240>oB\230=\3734\257=\316N\361\275\246\345\211\276\000\025\301=D\267\322<\023\205\344=x7W\276\336\002Z\276\363\301\242\276H\370\032\276\235W\237=\003\342\202>\223\246\241\275\275\216s>\032c~\275\2078c=\020\0364\273I\027T\276\255uo>\271\212\341\275\313@%=\311\310\365\275\336\334\035\276\260\2473\276\200y\273=\202w\203\276\267r#>\004\330&\2764\324\024>\211\345\207>%\267\274\276\347\017\252=6\3108\276%\232\024>d\007\003>\020C5>\361f\272;\302L\377\273\220w\364=\372\247Y>\017l\202=\010:\351\275\247YN\276\363b\026>\216\215@\275\264\257\016>&\222\234>\333\026q=$\210\003\2779\261\027\275\242f\177\275\326\377F\276\\\033!\276@\'J<\035\274\226=\017\353\251\274\037X\001\276\t\326\367\275^-O\276\277qS>\363\267?>#\0250<?\350#>\325\"\237\275\245\023\337=`\274Y\275C=,>\026%<;\022\0345\275\373\226\221=[0t\276\231\3413>\004h\311<;\n\356\273\007\231\032=\256R\210>\256\003\335=\316\365\317=>\307\327\273\316\254\337\274U.\026\276Y\360\334\275\213\223\300=\263\275?>/\322\027\276\317\202\301=VP~\276\323\376d\275\002\334\007>\355\266J>\254\032r>),\002\276\032\341|\275\202\236\234>O\273~\276O\342\343>]\367T\276\205\360\326=\016\254\373<s\326\n=;\257b>s\272 \276*\306\316>\253\357\336\273\3625\242\274W\2201\273\357\0258=fp\365<\271\256\277=\213-\230>\300\327e\275{\000>\2767\356K>\2501\223\276\270\247\310\275=\304\304\274\242\026\027\276\000pf\276?[\244>\345\220P\276\2753\266< \201<\276\264LJ\2762\207\303\275\241D\366\275\204\245\n\276%\367K\276Z\241s\276+EC\2745e >\272d\005\276\024\257I>\306\327\002>\033\000\246\275]\326\273>HV\313\276\007\360\252\276\342\265\317\275\002j!\27693\302=\234D\262<\'\254\206\276u\356?=\211\375\'\274D\262\343=a\0002\276\007O*\276d\264\331\275\3436\243=A\n\004\276\212\037V\276\363\203\036=&\025\225\275\237U\231>\220#d\276\317\020\264;J\021Z\276\320\357\356\275\244\2009\276\2131G>\341\272\321\275\025\013{=o7Z=\264\223\201\2764\034\277\275\362\326\333=\027\320\031<\371\245\201\2760\0040>\263\010\376\275=\375L\275-q\356=\377=\343\276\025v\341>\013\354\364=x!\377\275\355u\t>\276\270N\276\343T]<\210\234\275\273\214<\014=\337\246\033\276\261(\222=\374p\200\275r\033i\276\316\264\207\275sy\323=`\212\000>\3302Y=\377i\010\275\346\256\331\274\322}\306\272\201\262U>\023\344A\275Q\255\343=\022:#>\207k*\276\315\377|\274\344\034\321\275MG\331\274\242\332\245=\300KT>\226\200\001<\333f\315;\267\004O>\022\nC>\213\022=\275\230\303]=)\342E=\342&!\276\325\340\000\276\326! >\310}\225=\274RV\276;\216\344\275-\305\363<gQ\235\276\342_\350=C\3723>Q\352\030\276\250\177:\276\274\271\247<\026o\036\274\372c\275\275\020N\340\275\302-\322\275o\341\334\275V\377\335\276+\363\014\276\377\325\225\274\246x\300\275\252[\003\276\337\203\212\276\204o?\274M\313\"\276\017\035\322\275\311\217\217\276\036a]\276\017\301\306\275\207\363\334<\023.\261=\245\351\010\276a`\022>\303\277\177\275)\372\022>\236\203 \276\367\274\222=\032\026m>\330\310\254\276\322zk\276\326Z\245>s7/=I\002\243\275\261\346U=+J\"=\312\277\313\274\353\001\356=\225\363\203\276e\255h\276v\037\233=<\335B=5\013O>\367\336S\276~\224\342<\221\300F\274q\010\273\275\017\362F>\324\245\024\275\252\177\255=\211\037R\274_\205\256\275\257\260A\275IBc=(h\362\274:\r\315\275\266\346\201>r\006\250\276k\nY>\313\206\027>m#5\276H\010u\276\264?3>\370\224\010\276\325\317\226>\205r$<\240#$>E{\216>\247\371\345=ar\242\276\036\023\020>\332\212\201>\3547y>2z&>o\345\014>W\331\244\272\314e|<;\034\022=\025<\262<\033\365\214\276\276j\332=\313 6\276O`\307\275\255J:>\035S\302<\034$\256\275\345Jx\274Q\354U>mx9\275\263\361/\276~eE\275fO\016\276\rv{=P\\\260\276\311.O>!\234\222\275\303\335a\276\30200\275\231\370\360>F?6=@\222\017>p\242\024=\313\014\337<\272S\254\276p2E=k\024J>\224\016w\276\316\222E\276\2676*\275\264l\304=\276\005\353\271\216\203\010>\232w$>\266\347/=\3647\207>S\361q\274\3659\274=;\230\325=u1t\276x\010t\275`fo<y\244\274\275b\256k\274\037.#\276\3057\203\275\355\231\237<\022\307\006=\267\307\346\272\235S\230>T\035\231>\371n]\275\325\035\n>L\320\'\275\034\324\204>\257\250u>3\033\241=H4\363\274\365}F\275\031\367H\276r\004\026>g0\252>\271|\211\276\323\216\341\275\315\021\205>\226\255\240=&\2319>\302VY=t3Q>\030\024\314=\330\341\240=N\023C\276\374\274\301>;\226\001\276\224\232\212=\220\342\001?;\335&\276\353\030s>k\376\373=\017w\224\276\223^\312=T\317\277\275\022Y\207\275\226T<=\307e6>\263pS\275#\247\260=K\325\227>\310\276\201\276q\227\247=\317u\004>\010\323\001\275\002\226\013> G\326\2759@\010?Xj\033\276-\340\200>\371\251\257\276\351|\253\276\361\226\311\275\325\373\236\272\3776Y\275\000^I=>\232\332=T\2665\275\0224\312=\344\3300\275\310\220\030\276;\313\240\272>\242\023\276\347\204\033\275\r\277\n\276Q\002\207=\022,\271\275\331\241{\276\214\302\244\275l\215\014\275\202:\036>\235\377\032>E\330\310>\371\200I>\341\035\262\276\357\341<\274\r\327e\276\356e*\276\215\347\226=\032\3603<(iJ>\367\213\254=\227\362*\276\007\306M\276.f\243\275\335.j\276\327\024\215\274/$\003>%J\223=K\3060\275oby>kx\244\276\t!J<G\000e\276\2678\013\2759\0275<I\301\225\275Ry\205\276\227v\223\276\3318r>o\364\211\274\322\212d>\013\340`\276R\277\\\275\256\265\353=\027*\021>Z\236l>\206J\224\275 \316\362\2748$3\275\213\246\225<\251P+\276\243\376\220\2762\200`\275\005\310P=\025G\316=\316u\021>\3216\004\275#\366\276>D\207\250=_\366\033>\331\010\220>\206\265\237>\236\363->\363X\033\275\362\331\231;\265\326\355;\177\344\032\276e\217\306\274\263TX<2\324\222>Q(k\275\250\265:\276\257\247\316\275g\034\220\276\360\203\321\274C7@=\214\205\345>4\333\237\2762\024\244=\253\364:=dc\220>\236C\014>\234\025\006\275\360j\353\275:g=>\004\033\313<\230\221\346=\214-\371\2751\363\213\276\376D\301=t*\216>fV\000>\310}A>\321\324\030\276\310Yr\276\367u\030\276\247\354\266=\002\317\336<\021W\031\275\026\2075>\370\n1\276!xr=\357\301\014>\213({<\373=\006\276\336X\373:\201eI>\335`\344=\202j\211\276O\317j\276oD\300\274\213Q\324<\362\357\240>uQ\017>c~\360=\364\337B=\2502Q\275)\227a\275\220\200\010>\357C\032\276\261(\023\276\271\013 >%\325\021\276\2116\252\2768\237\227>W4==e\000\255\275\200r\230\276|\300\020=B\035\r>,\365\034\276\234\003\260\275}\2644\276w\270\313>\356\217\302\276eB\232>\243V\307=\271\032\325=ia+>NKw>5\005\274\275h1Q\275\031\244\244\275\214vP=\265\255\023\276d\341\323\275\335X\017>W\303\035>\366\276g>J\2667>\216f\013>\204jZ<\373P\223>chm\2752\326\240\273H\257\243<\004\r\007>\021\177\234=5z\237\276\261\254\377<H\341\031>^\353:>\373\305\226\276\330\300\361\275Zq\022\275\'\224+>w\034\251;\225\022\363=\375\254S\276%%\240=\334\031\202=\211H?>W\312%>\323\003\023>\372J\006\277\304\3069=\200\357\200\276\317\207\355=\371\243\223=\345\342C\276V\321\253\2750\244<\276KO,\274_\351\307\275\251\274\333>\374\3069\276\350\346\235\275E-\230\275fJ\334\275\277:\222=V\264\213>cG\214<5\357\220>?4\007\276;\033\314=\315\203\214\276\240\316\214\276pG\000>\205s\234=\310\303->\345\000;\275Q\257\003>\320\310\261<\177\275\251>K\373\320=h\241#=\367\017%\276\346\"\300\276\246\353\303\275#\031\314\276_\262\025\276\205\230%>\000\223Y<\232\253\251\276\024\374T>\257\177G\276\215\033\025\276\030\345<\276\336\212\225\276\255Y\033\276h\013\022\275\316=/\275\242\227\223;\372\024\t>b\023\263>\261\267,>\t\277u\274\371\244D>\035\376\223>\217G\005>\306\350D>@\020\357=\0034\'\276\242l\315=4\304K>\276\016\311\275\247\255\241=O$\'=\243_ \275\372\204\241\276\033\222[>\342s-\276\345U\020\276fk\361\275\304\030\333\276\273\000d=\000I\023<\315\343\263=*\216\212\275f\346z>k\327S\276\032;\001>\261\032\342\272\014o\007>\r\275\205\276\203\251\263\275lw\004\275:y)\276q\220\233>\021\273\206=~;\240=\364\214\310>\2601\350\275z\324f=\275\304J=\0325\251\275\320\231\302>\241^T\276\002\330\223\275\320\272\203=\372\010\276\276\273\273\204\276\372\033\345<\270CE=S\263\226>\025\340\351<L\363\206\275\325].\275\217J~>c\236w\276#\211\276\274\017\024\307=E3\251>\236\r\005\275g\315\226=$_\031\275\340\264\235=^\355b\276\372\030\324<\t\362Y\276\332)H\275,\370J\275\271\300\204>G\233&\275\262\261\277=\375Z\023\275L\235e\276j\035\206\274\340\372Z\273f\305\260>\007\345H\276\245\010\211<\n\307\341\274\265\227\302\275\321\225k\276weL\276\025\365d\274\311\275\313=\367\335-=x\247\021>\226r\\>\216\032a=A\264\377\275!x\364=\334RB\275,\3043\274\377(\032>M\374\247\275\256\250b\275\265\273\251\275\321\253}=zB\000\2773S\006\275\3606\331>\372\036\t\276/%\260\276A\324i\272\316\233\007\2765\276\n=\236!(>\345\023W\276\257\207\014\275\330\323\322<\350\335\274<\230j!\276\023+X\276\304<\346\275\242\334\227\274p\247C=\203\033\007\275\366\371\356\274\034K\375>I\336u\276\242\205,=\3461\276\275c\241\326\275b}\204>\353T\311>K\372\037\276\216\027\217>\0047\200>X\2314\275p\202+>U1S>\241\311\270\275M \257\275\351}\322\275X\024\356\275w*\222\276\021\307\344<\276.\025>\347\006\203=\234\271\341=N?`>}\301m\275\303\332A\276\222\020\273>ZT\034\275O\210\n\275\370&x=\032~%\276\363yg\275\236\221\210\276\340\320\226>f\202\351>\272\312\010\276\236a\216\275\21123=\316\025\211\273\032\376\264>*b\265\276\006\177\003=I\334\261=;V\222>[\221T>\237\344(\276\315<\361\276Z_\251\276\315K\313<5D\252=\255=\374=\265#M\276\007)\213\275\312=\033>u^|=7\250n>\342\0016\276q\312d<\322\r\030>\010`\255=o\365\022>e\374\034=\005u\t\275r[J\275c\203G9\036\026\307=\333\2050=\304B\241\275\331\2364>Q\244\322=FN7\275\217\266\222>ar\037\276\304V\201>/\213K=\276+\271\276\211\005&=G\247A>Q\357\234\275V\325k\273\222\201|>#4\257=ms\247\275\006\344\016>\266o\033\274k>\206=\017v]\276\315Xr>W\005\025\276\241\346\177\275\017\262\037=\356\006\344=G\275\035\275\334\020N>\336\271\211=\263n\001>\215\t\307<\3330\234<\334\034\204;|\342\322\275\234\351/\275s\326\245>L\\%>p\252\016\276\357\367\272\276MT,<s\234\327>\333^\235\275\257)\342\275\211EQ\276\021\343\304>\211\240\023\276\362\214}=0}\253<\252\0060=4\231\277>{\032U\275\006l\261\275\261D*\276%\316]=\'\271\014=\231\317\032=\367\232\274>x\016\316=\244\311\251<r\2167:\243\300*>8i\255>\010F\010>_\242\033>+\336\014=+\005\\\275\334[P\275c\273:>\336\201\346=\rL\323\275\250\356\271>\262\233\363<\301|F>fZ-=5#\274=u\344E=\211g\356=V\013x\276\303I\261\275738>\243\325(>\371W\300\275\272\305\310\276\001\221P\272\375\360\317\276\365\300\254\276\035\320\033>\264\013B\275\270>\035:\201E{\275\371#\013\276\346\005\221=\024\202+>\207\273\264\276x\001\277>+H\t\2766\333\314><\365\021>\0234\204\276\213\317\252\275\333*\033<Q\013\370\275\"^\t\276\362\027G=|\335t<\221ba\276#\014\370\274\033\341\\>+\303\026=\263\324\201=\177X?\276\270\301\014>\262P\255=/\372\265=\207\377\021<\372e]>:\321\240\276\370vt>\333\3022\276D\007\225=\333\345\000>NWR>\204\276\310\276_\007\000=NW\212\275\2410\257=|[\001\275>W1\276\2574\233>\257\331$\274?\237\026=\tV\332<5\221+>sH\242>U\253X>\037!\013\276\336\346l=\006i(\276\355#\236\274\3176\027>\225\200Y>\250\261.\275\271\272\025>\203\031+=\204\017\370\275\261-\201\276z\202w>\032\354L>\213\331\303\275\362\254\327=U\274\224\275\2240\000\277\354\007\215\276\263\213G\274\332\357\312=\203\n\332\274w\210\205\275y\344)\276;\210K\276\330wc>\r\255\354=\270\364\032<\202\270\211<\246\277\002>\353\310\225=L6\231=/!u=\326\200:\276-2L\275\003-\016\276(\255\001>\375\310\034\276:\221\234>\030\257\353\272\222\374P\274\365\177\206\276\217>T=(<\315=\013\270\262=s\0105\275\354\342|>dW\251=j\2614\275\'\326/\274\'\272\266\275\0141\\\275\212dh>\353\301->\221 \222=\\\375\305>k\352D>\306\376\000=\331e\021<\013P\237>\277\243_>T\201\207\276\314J\024\276\r\220{>6\254\025=\331\321\205\276]\365d>\014\372f\276\rGU>\037|&>\263\266(>N\360\227>\312\260\322=\234\255\034>J\3438>\017\303\006\276\034T+\275\376\352\217\275u\232\306\274}(\243=\211\357\224=g\374\004=5\310\232>\\\213\336\275\205=6<\'l\312\276U$V>\352\301\217<u\004\\>\366Z%=\304R%\276\220\221}\276\271\257\211>\224\253\355=\010f\216\275\322\312\265>\336S\314<\301H\202\275\240\201\360\275\275V\203<\203<\317\2765\276\246=\334\370\033>R\177\216\2757\367d>Iu\366=\332\340\316=?\375\004>\242\306\371\274\201a\235\275\007\323\226>\214B\271\275\037\242Q\276\336V\351=x\036x>U\237\256=\013{\253<:1M\274\216%:>\362)i\276\204\213\243=\300s\242=0\325\242\275.(\216\274`\013\022\276\220\351\217=A,\016\276\232z\353\275\203N\027\276\271\360\271\276#*\236\275&\232\213=\375\305m>\363\263\001?\017#\302\275\016\3203<Rg<\275\221\223\344\276\225\033@>\314\251\201\275\324\272\017>OY\222\275\310\374u\274\027\321\237>\t\322\346\274\345\370\361<\030\202>\2765}\201>U\216\352\275v\003\027\275\377o\225\276\2749^\276\365E+\276\365\304\272\275{\353\230\276\007\372\246=U.\324\276\324\354\373\274T\246\342=\364<\236\275H\321\001=<\337\235\275\020\310\375\275\373\032d>\311\256\374<^M^>\312\262\003>\303h\203=\320\2451<\213\243X>\263i\\\274\211\224#\2765+\361\275\265\242n>\206\307\025\276.\250\205\275!\363F=P\374\310\274[\033\244=\254\275\234\276\311\314\360=\257SS=\333\355\016\276Q\257\211\276 4:>\314\301i\276\200\207/=\370\310\277=O\366\025\276\026\254%>\237\031\215\276\r]B>\220\276\264\275\234N\025>\027|\230>\240\321\362<\324|\014\276\327\005\016>\372\005F<\305o\211<.\000\347<\370\035*\276>\216\247=\366t\022>M\250\257\275\033\231\361\274\311\"\'\276[@`=\371\220*;\263#t<\225\247\245\276\325\307`\275\327&\010\276$h\267\275\262.\000=o\3223>}g\305=H\n^>\323\007.>\0368\265;\300\240-\275\2046\022\276\233\230O\276\343\367\241\275\270\254\234>\350\3354=\336m\253=9c\310\274Q\"\336\276\234\253\007=\027\367c\276S\"\n=\021\365\213\275ao\037\274\'\234\225\276U\266\357\276\266\2732>\366\243\302\276e\237\210>9\303\336=H8\003>$\237i\275\257m\255>\"\370\310>\204\225F;\002\003\232\276\200+\335=\260\270(\276&\3044\275\002\346\200\275\254E\000>d\210\216=w\374\307\273d\306\211\276!\355\\> /\004\276\303\317\272=\260t4>\025\336\354=m>\227>\312\230\275\274$fV\276\2300U>\273\254\245=\223\210.=\333\\\036>\310~\364\275\020J\321<\317\207\013>9\360K\276S\213\231>\210b\336<\271\276R\275\243\024.\276\307sG>\276Z(\274\260\355$\275\375)\217>`jp\276\200\343\331=\032\255\322\274\333Q\201\276\206\335U\275\337\215\200\275\274\307\255\274U\305u\276\365S\236\276\237L!\275{\261\260\275s\347\360\274j.\034>\3711\242\276\3750\004\277\273\253\021\276v\n\333\275G;\222\276\000\270\227\276\236\3311\275\216_\252\275\263\205)\276\344\242[\275\0051\273>\251)\334\274\203\350\264\275=\"k\275j`i\276\224;\032\271\n\272\357\275x1\237<\205V\006\276\241\335\371\275NI`>\345\242\036>b\361\352\275\250p\366=E!j>\326\242\013\274\247\036\212<\376db\274\334CG>\264D\007=\312\\\340>ChX\276\207\341\201\274\013\303\207=/Q\036>\242G.\276tP\371\275\"\333:=\225\0313\276\303\034\216\274\317\230\263>H\027\025\276Tr\364\275v\346\306\275gF\272>\030\266\343<\007\346V=v\023N\276\000p\277\275G\007\252\276\240\021\031\275\003\326Y>b\233V\275\037}\021\276\345\216\216\275\306\270\342=7\020\031=\217\245\027\276\340\230\026\274\tmP>\010uw\274\006\216\261\276\027\357\215\276\311\020\330\276Oe\356\275\037\263t\276_\272\177>\254D\021>Y\033Z\276\203v\t\275p\nj>i\222\351\275\216/\'=\014!\257\275\304\256\331\275MX\032\276T\370,\276\335\335\244\275\002@\000=\375Lp\276\310h\231=M>\">M\301\317\274\3572|=I\036\036\276l\361h>\345\302#>4\353\357=\274\370\210\274e\036\227=\363%\242<\342\rq=\2271X>\342\331\322\275\212\332\266\276!\032!\276\332\230\346\275e\331\243\276\327K\034\276YKF\276\nCp\275\007N;>\3042\205>R\242U>\316y\346\275\007q\002<X\250\330=\317= =\231$J;Hj\326\275Xe\277\276\246\003\203=\027?\234>o\264\'\276s\353\261\275\352\201\243\276~RU\276Gn\221=\265\215\302\2757\361\036>\325\314\254\273`\220\230>\274\232\232\276ZR\250=\374\304\315\274F\026\247\275\263\375\224\274\227\301W>3\201\206\276np\300\275\365\377\036>j\324\017\276\346\034\177>\250\331\314\275\002H\242=\037_]>\255\360\363\273\345\263\271\275\315\266Q\276\275t\\\276\2375\303=\3618\007\276ick=?\370V>T\360\312\275\242#:\276\203mn>}\236W\276\333\311A\275\355\207\026>G\233L\276\316\345\322<T\372!\274\253\310\036\276\337\257^\276\230C\205\276\013iu>\214]_>\313\006\326\275\340))\275\244\260\\\276\260\242\207>\310\205\227\276\372\323\274=\242\370)>\240\243\325=3F\322=\347\037j\276\252W}>\211\275\216=\200\275g\276\373\025\311\275\275\2271=\2370(\275e\337\007>\262\257S\276PXg>u\276\313>\220\n\262\273w|\351\273\373_\034>\361\275\272\2758\306b>\245\331\210=\024\021\266\273\007\230\227\276\2116\t\277n9\000\276\353\373\014>\321\212\350\275P\245\247=\312+\266\274\216\271\260=\n\325g\276\331;F=\337\034\026>o\204\256<\022\327o>P\270\200\275O\213;\272\226<\024>\265\r1=\213\216\231\275\025\305E=\357\r0\276\300\257b\276}\377\205\274Jy\327=\347\344\260\276ajK\276\260R\211=\315G\301=\243\224*\276\352\345\016;}\254\206>`3\250\275\251\343\022\277\227\017\353<\2423\224\276\333\232\005>\243\267\246\275#\232\212=\325ih\275,\227\007>\225v\375=|\356\364=%\257\027>\354\222\315=M\253q>\372\271\'\274O)\275=\256\236\017\276\323\211\211<\006\237\210\275\252\273\335\275\202\341\216\275\030L\200=\300{\377\274KU%\276=Im=9\247L\276\214?\327\275!2b\276\330\026\224=p\342\357=\354\225)>3.\340>vv]\276\321\324\275\274\016\032x\276g\261%\276P)\315\276\255b>\276\032\320\026=\3350\242>\2263M>\344\261\217\275\360\342\310=\316\254\330\273\n}[>\257\316\024\276\'\227\034\276~\033e>\245]d>X\250\001\276\030\324;>KDX>\033\355Z\276\211rN\276\264\356\202<)<\246=\033\301@>\335\216\263\275S\030\n\276\221\330e>e$\030\275\313\260(=t\347L\276\307? \276[\372%\276=~\256\276\206\276\233<w\255\216\2748\252\333\273\270O\226\276 J\245=\262\034\207=\327\217\377\275Y5\n\276\332\364`<\275\204\200\276\222c$\276\313\241\255\275A\n\311>\027\007\344<\265\356\225>\234\257\321\275-\302\225>\2343\217\2760n\220>\363\203\370\275\3753\374<x\205z\276;\230\247=\220C\320\273\214\016V\276A\346\212\276\200\353#>\240\226\263\275\nU\206\276\370\232\303\275\265\240\023\275\202\235\241>\334\360\277=n\205\270>m\307\025\276~\323A>:u.>\034\270%\276g\271\016>\252_$\276\332\314\317=\360\215\023=\240\262|=}\265\022>\211\031\014\275\207\354\246\275\370]\004<\244\006\233\274\317\372\246>XV\374="
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "AddV2"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\224\231\356=\306\2414>\331\314Q\276M=\313\275\341\223\031>\3054\306<T`\243\272\305\2751\276z\316\016\2757\375\246\276\233#\301\274\261\257\036=\263\226i\276\310\3741\276\245i\327\276\361\347\034\275\332\210;\274\237\302&=\213\377\014>\025=\251\275\027\226\221\276\033Ag\275\026\036\261\276\370\205\231\275?\225\227>KF\362\275\344It>\351/\202\276\021\311\030\276\177\242\352\2759\245{\274W\315%>\342\344\340\275&\242\204\275o\215}\275\"\345\265\276MW\255\275sW\\=\351\315\360=\330^*>p,8>\245Ux\276\027\202\265>e\256f>\345\265\004\276,\255\330=`x\000\2763\327{\275F\237k\276\244z\224=\016V\203>\263\226\263=qo\007>\033Es>j\332\007>5\016\306\274.\232,\276+\274\362=m\336\341\274r\226\204\276\3037`=G\376\261;\273\245t=\356\267j\275TK/=\"\333 >R\321\031\276\241X\006\277\'\210\227\275|\314\225\275N\372I\276\031\321>\276R\353\247\274\334\002\n\276\017\277\237=C\020\232<\004\031y=4\302\246\275\333\353\204>\354\365+>Pd\205<m@\006\276]\250\344=\243,B\2755\343-\276\306\000|=\233H\205\276\261\177[>P\372\016>z\000\000\276\363\3413\2765\3452\276f[?<\263\036\311\275\020\324\036\274\262\007\357=)\n\202\275\242;J\276\276(\320<\316\3132>\345\347\205=\307\232\225\276\013~\007\275c\357\246>\314\217m\275\211\006\245\275(\\\253=\215\325\247>X\357\013=\t\304\020=\267\3672\275\337\323}>\254-\207\275,\202\305<C\275\264\274\267\274\027=\355\275y\275\306\362\302\276n\016&>\236a\266\275\266\211?=`$B\276A\307u\274\366\372\316<\271\266\243\276\374O\333\274\016\\\220\275\017\\\247=kZ\325\276\217\202\251=L!\216\276\310\303x\276.\'\021\276\357Z\220\275f\335j>\035.L>Q\377\004\276}.\001\276\377\240*\274{LP\275\262`w=)\353&>\375K\032\276\335H;\276\364\240\036\276\002\213\231\275T\361\331\274I:\327\275L\351\033\274\030\204s>\350,j\275;\t;>\0370\210\276[\202\266\275K@P<\327Ip=K6\\\275\300ZB\276\221]\271>\344\335\314\275\367\254\034>\213\227\277=\205\337\357\276\321\337\275>\360\304@>-\276,>2o\037\274\377\332\207<\034yy>1\211\376<\'\315\255=\025x\210>V)\215>\3350\232=\003\302(\273\350h-\274\206\236\214\275.+><\241\017\006=\017+E\275p\237y\276=\333\223\275\220\274\017\276\304*O=\247\236\221\276\223\301!>\243\t\344\275`z]=\224\263\336\275Z\032G\276`8\224>8\253\013>\200\035\316\275a\223j\276n\263B>\337w\r\276`-g9\215p\221>\320\245&\276\375\037\303<\355\257\363\275\265\242$>\215%\006?\337\005\333\275\225\000\203>\377\205D\276\177\227\250<$k#>\256\344\264=h\0142=1:\331\275\315\240^\274u\035\332\275\256\004\245\276j\236\034\274U0\300\275\374R$>\330A\307\275/\334a\274\013(\351=\327\261!=\221\372Z\276w\261\250>\320\205\247>\235\t\250\275c\032\321=q{\363\275\211\213\202=~b\220\276\2501\207<\245\002\225>\017\267\020>]\274)>\312\265\300\273As]\276\353\243\020\274\333~\025<>\334\234\276B\330\224>\341}=<\326\213\240\275is\267=n\204\274\275\024q\302\273\021L[=\366\353\202\275\226\223e>\337\254\266\276l\212p;\350~a=\207C5>\207\027\353<\256_\326=X\313\233<xZe>!q\263=\212C\346\275\213\210\202\276\273\352\250\275\245\367\222\275\3245\254=?\314\215>\2713S=\351#\206\276|}\025=:\372\356\275\261^\243=\026\203\300>L\353\236\276\345\n\300\275(\377\322=hR\024\276\022R\027<\370\313\221>d\262\355=\214-}=\216\375\'\276\016\245\354\275\350\364\226>\034\267O>\204\022\213>k(|=\314\323\333\275\014p\211>\020\300\315\275\200\371\231\275h%\261<\t\251.\275\321\005l=\272w\315\2741J\245\274\002\013U=\304\240N\276TOq\274\242N\005>\316\346\301=\244\355\301\276\275\315\313\276E.5:\255\345\347\2752\205*=\210\3162>\340\004\255>\235*\352=BS\'>\275\2026>\315]\315\275\273\322\210\276\220i\311\274QN\246\275\315\304\260\274\375\200\251=%\203,>\366\365\304\274\252\026\256\276l\370\034>i\200\033=#\275\003=\252\320\376=\367\217\203=Mq\343\275\336\350v>\311\220\325\275\255^\r\275\203\033!>\205+\r>\257NM>M\323\352=t\246R\275\273\221J\275:\300\271\275|\260\224=!\007P>\337wD\276L]\232=\347y\306>\266Au\276\313\304$\276\363\215\312\275\222\200T\273\363\375\223\274\207$\037>(\022B>\355\004c>\347l\000>\033\331\022>\001\355\245\274~\031r\276//s\275%~z=\021\223\376\275\236\241\005?\343C\207\276\273&\227\276j\233i\276\\\354\334\275\242\036\240=@\371\311=)L\236=M!\216>\025Lv\276?\336\242\275)D\342\275\341xQ\275jBs=\314\376\301\275\331\n\024\276\354\321E\276\372\332\004=\031\021\032\276H\311\333>^\252v>r]]\276\313\007D\274\253Mq\276\206\241\355\276\3528\371=\353\2418>\365\024\371\275;\177D\276CT\315\274%\034\216\274A8\033\276i\340V\276o\2019>b\331\240=o3\230=x\265\231\276\316\305\023\276\024\324\270=\210\267_>H\202\001\275\033\254\021>Id\307\275/\037\016\2768i\320\274\003@P>\244\236\206\276\232s~\276+$\315\275\0255R\276\226\256\200>;\364\221\276w\241|\275|\203\372\275\314\"\201\276\030\273\340\275V2$\275BG\210\276\266g6\276l\223l\275o\246\203>F\323Q>\014\352\005\276\307\\\275\276\036\024\336\275\002\315q\276H\030\231=|wP\275\316\305\310=\243\362+\276J06\275.r\317\274\3005?=\252y\036\276\304^W\276\002rD\2767\205\340\275\257\267\034=\363\3272\273\222W|\275R\033}\2762\3022\275\3050\231<Q\362\233>\371T\024\276+\201b>e\226;\276\"k\256=\257a_>\372\276\232\276\244=4>\223=\273>\246W\320\275\274\266\327\275SR<\276\307\227\347\275N/\'>V\363\020>\375_\222\275n[\001<\263\030\331\275Yz\211>\244n\342\274t{\361<\255\"\255\274\232\326H\276]\000\314=\317\374\225<=`\274>\374\"=\276\036\200Z\276\205\205\301\275\027\375\230\275\220\033\225=-\325\201\276\335\227\t>\367q\213\275\372P <?\373\342\2754\257&\274\310g\307=\330\254\226\276L\215\301\276\334\325`=\362\330\201\275\210\275\201\275\231k\216>Q\365\326=\353\t\370:\204\316p=<t\242\276j\010\252\274\022\261\204=\316\030\306=-\324\215\276y#\303\275\0057\030=Z\266\n>\224\244\211>\224L\357<\201\005N\274\014|\221\2765rF\275\345\021\235\276h\275\276>\257\312\037=\367\207\375\275\rw\311\274eaN\276\3441d>\351\242p>\332\314\265\276\303(6>#\\%\276\030\3658>Q\306\201\275\241\306\032>Nw\247>B\t)\2757\301\355<K\006\201\2746\356M>\205\0340>%\364\335<\206\032f>RCp<\216\261&\276\355\211s>\341\344 \275O!*>\003\354\023\276\205\321\224\275i\342\005>z\243\321\275\235\027\204=\326Yw>\032\222\206\273\205\304!\276\276\223\233\276\205\013\236>O\237T>\302\225\000>f\233>\276\0148\235=\350\2579<\353\314\222>\302\312@\276\213#S>Q\304\025>\216@\354>\321O\227\276P\242\004>\354;\027=\002$\256\275I\217\031>UR\246=\341\207\r>e\226\027\276\354\237\'=\311\353V>q\001\242\274\206m\230<\215\260K\275W\017\210>\311\227\230>\221}\201\275\226\036l\275\\\330\017\276\230L\306<\374p\026=\311\251\032>\256\3056>\016\355\267<gx\022>F\242,>\345}2>\032i\177\275\006&\232<Z\237\036\275\377\246!\277\313\303\222\2762i\235>m\030N\275\332_`\276\334\340\324<E(F\276\232\305\314\275t\241\362<\220>G>Wys\276\236\252v\275RxF\275\034#\324=\025\013\345\276\360$_\276\332\211\006\276\350\010\253\275\001\235X;\334\020y\276\266\374->\221R\010\275\2174\007>\210\372\033>\312\347#\276\244.\326=\233;\r>RZ\224\275\025\370\360\275\376}\003=fx\243\274\274>i\276@\313?=!\237\314\275!q\036>\260\025\030>\230aM>\213mN>\230\374h>\334\250\351\274\310\223\331=\030\375\263=\027\213\206\276\336R\255=\367\214\033\276\323\032\374=\217@.>D\311\266=\261o\362=\361\037\201\276\344\'\261=\023f.\276\300U\372;V\271\000\270\356o\3519\010\016\202>\034^\252>\327W\000?S\272 \276\351\005\007>:\323i>\234\371\314>l\233\334\275\006\322\250\275\327\252\026>S\004e\2768\260P=g\014\017\275:\264\022\276\211\0202\276\302\032N\276\373~\362\275\214\020E\276E\373\376=24\023=\007\275\220=\226\226.> \201\342\275\305?#\276].\014>\255\275\232\276\347Ab>\313(\002\275\276\376<>r\262:\276Nr\315=\372\357\340\275\236\253\355\274\343{\326\275\234\334\026\274\277\013\014>\032!S\276\026\356\003\275\311\320\325=W\362q>@\336\224\276\\x\207=PIN\276#\320\201>`\'\\;\244\205\">\242\006\273\275\'\300l=<\266\225\276\031\350\210\276l\206o\275N\334\224=vu1>\226\310\031>0V\211\276\005E\022\276\347\346\240\2753&\177\275\000\236\227>H\332p\276A\374k\274\2450\332;\335L!\276qSH>x\250\017>\357\337\217\276\346\005.>\0274r>\306\302\300\275\210\222\362\274\310S\013\276\377\206\220\276KN\213\275X\272B\275L_D\276 \370i=\333\3445>\211\323\255\276M\253\250>5\331\020>\371lR\275 \327\261\275\330\241\202=z\005\032>\363\032}\275\340a4>|4W<\020\236h\275\255\205\025=\007\010W>\013\306\306\274Lxz\275_\357\026\275\332\227E\275\037\332\342\276\207\375\243>{$\214=\213\303\201\276Im\372\275W\007D=\016y\216<3\317@\276\365\231\265<\363\264\274>\347\333_=7\332\362\275&\327\024\276\322\356u>\\\244@\276\026\213\026=3\352)\276\n\361\333>E\251\020\276Y\352\362<p\202z>]\005W\276*b\344>BS[>c\262t>\326M#\276\257\374\274\275w`W>G\356F>\261-\246=\301@q\275\037\354\271=\206\027>\275\366L\245\275\270z0\276C0r=\234\272\270\276\307\347\216>\203\000>>\235\244+\276\317V\n\274\317|d=i\213\325\274U\032@>\252uI\275\273\265\224\2761d\361=\242\t\355\275\317\222\224\276\320\016\027\276\264\257\266>?\035!\276\215\266\251\275\235\216V>g\377\355\275\3253\225>\314b\221\275\275\376\246\276\272\021\223\274i\374\212\274\335\341\226\275\332;,>\336\251\261<\273w\207\276\330+9>H\256\003<\350M&\276\257\336\000>\260\320\265=\310\270\342<\326O\205\275\235\025+>Ym\235=\204K?>\036Q\243\275\267\330\223\275\3522\257>\370\033\270\274(\362\262=d\207-\276k\256\300\276\306\322W\276H\207y=\363\321\036>\227\221\340=\241\004\026\276V\232\032\275)s\370\276\316e\177\276F\315\\\276\365\360X\276I\000\227\273[\340G>\2422\226;\200Rx>\013\003\222\274\r\305B>*\267\363\276\"\003\240<\306p\023\276\250\020\230>\024\"\305<+97>\354\303)\276\021\r~\276\020\032\034\275\025\354\206\275h\316\332\275\346\233\024<]\363\354\275E\323\003\274+2<\276\321P\224\275\377\3647=D\251\211>Y|\344\273e\000\247\2741\320\242>\347\313\242\276\320\246(\276\327Y\201>n\020b=$\303\022\275\251P\017>\221\314(>\330\353\241\274\315g&\275\330\267b=\316\343\206\275-\367\020>S\033\227>\026\371\217<\345\276\355\275\260\3147>n\224\245>\231XV<\023z7\275jW#\275\010h\323\276\313<\300<\211\345\016\276\263\321\237\276\211D|\276\003J.\275\236\250\306=\267\n\266\275w\277L;\321\336\273\275\r\375\325\276\210b\201\276\036UG\275\326f#\276\231\217\241:\234\\\334\275\363r\303>\242`\322=]\027@>\302\033\027\2750<\227<\242\317s\275\211\026I\2730K\254\274\331\351\006:\3433>=\204\020\222\275\010\371\026\273A\210\306\276\030\320\242\275\000w\251\275\262\245\203\275\251\263\265>@m&\276b+/>\367(\260=\372\002\221\276\210\232\031=:!\366\2749\247\231\275\3216\221=n\3732>\352Ph\276\351\271W>0\036\037\276\270J\025>\272\243/\276+Z\206\276gd\232\276R\351[>\032\323\273\2763\305\266\2764\r(\276\346l\036<\001\266Y>\306\003\320\275\031h\016>\266\351%\275\354\313\324<\346\212G=[D\"\276;\371\'<\324\234\214=m\260\243\276\212\335\026>\036W\253=\227\274\335<\345\377\242=:\315\221=A\314V\273C\334\005\275V\251\361=\177H\316=>\213\245>\252\241\030>V\037\263=\2677,>C\031\317=\255\327\310=\202\322\233\275\242\361&>\313\023\262\275\374N\326\275\205N\372\275\177\340\340\274T\365\254\276zQ\214\274\232\260I\276\377\"\317>\201%\212<T-#>\003E\255=\255\323\223\275Q\362[\275\216\026\026\276Mw\262==\214\021>\375I\272\275\372>\274\275\366\321\214\275\374\232\217\276\021\247J>T\213\255=\341\2220>\326\277\331<\220\364\037>\357\3306\274\007.\206>\036\'\254<G\202\322\274\341%p\275\007\333\025\276\375g\352=\020\257\235\276\002\033];\351e*>\n\312\231>\271\305\217=\313e\205\275\232\307s\276{\276\251\275\260\241\215=\002\203(\275\224\206+=\"\262,\276\225\206U>.Z\221\276e\267\020\276_U>>\342\014K\275m\247\202\276w\003I>p\233\217\275\276;\354\272\301M~=\377\212\221\276\023\251M\276\3744^>C\365z:\325\203\321<\202\257X>\341\361\315=\240\034\275\276\255\215\221>\270s/=\363.\036\276\340\214n\276v\313\222:\265\354\244\276;\rE>\324P\244\275\237\376\016\276\373\277:\276\350\316\025\275\006\030y\276\2705\007=ca\027>\'\354\347\275\2674R\276h\241C\275\025l\222\276%\326\305\275\003\300b\275\016aj\276&n\215\276b\206\227\275#pA\275`\324\231\276\333\007\027\276\004K\247>L\010\217>\335\341\270>\246\363\347=\n\334\016\275\016\016\243\275\002\326\250\275EM\271=\3565\377\274\350>\217=6g\\>\255\241{\275\003\240\354\274\331\373\202\276\317\360\235=\262\366\351=J\354\003>\231\235\005==Y\000\276Dn\207\276\250$\253=\306\243\301>w]e\276\220\275\344\275\3557$=\322\177!\275%\275\036;\213z\035\276\332\373\036\276r\031\343\275/\203\311=\273\007\244\275\220\362%\276\n\327\014\274\335\272S\276w\004\'\276\3461\272==\353\237=\205\311;\276\257B\333>\033<z\276R\022j\275J\310\263=\320{\262\275\301\222\017>\243\347\005>\257\212\"\276\313r>>24\006=N\032\004>\245N\231=\275\253J>\330\364!\276=\352\354\275B\305\001>Q\244y\276\321\341N\276L\263N\275\374\226M\276B\341\231\276Z\0160\276\332\314\343\275\\\025\226\276/\272;>\276\'\254\276\tBu=\212\337\226=,\376n>\234\341n\276\253\340[>$k\221>\002\000\261\275w1\244\276$\317\216\275\nL@\276\215~\227\275\311\224\t>\334\032(=\300\200\252=~\'\367>7h\021=\370\210\312\275V*y><0<\275\336\334\217\276ke\371<\322\0016>\334\270#>J\tD>$\000e>1~\033>\362j\025>\324\324\210\276\201\232\320\275\373\336\342\274\024\016\341\275\033d\241\276}\035\022=\244&$>\316\365\264>^\356\245\275\313E\257=\3158j\273wK\005\275\345K\333<\361\365\270\276e\344\217\276\265\351\236>hS\n\276\226\022z>\0353\003?\231\224\233\275\207o\236;\301\362\037>\n\357\262={\254~=Y\017\303>\207\351l\276\334b\225\275\352\307\220<L\003\217;\243_\370=\t\257\204\276\002\245\257\276?\033o\275=~a=\014\310v=\250\307R\275?\254\242>\232\"e\276\207#\333<*\276m\275\312\001\001\276;#\r=\321t=>)\354=\276\204\244\210\275\331j0=\207\273\245>\352%\265=m\221f\276|}\356\275\220\343\354=\032\317\t>\343x\244=\321\310V\276uo\251>\231u\260\274N\256\253=\030p\335\276\024\270\'>\2537\010=\177o\220=\320[>\276\367\326;>\200\367<\274Uq\014=\364\032\277=\330j\000\276r\234,\275\342\266\203\2760\013\214>\265}\265\275\027e\205\276\030\272f\276$\273\356;\326\315(>\231\317\014\275\307D!=\233\360]\276\365\310\250\276i\255?\275\215i\333\275\301\346V\276\343\033\216\276)\177B\276\213\267\370\276 \010~\276RB\316\275\320\201\232\275:$\315>\251\270\226=zl~=w\232\202<\327X]\276\304\203\276\276\014^|<\320\2458\276\022U\013>I8u\276&\351\326\275c\'H\275\335\002\333<\200H\202\276-\314\221=2\345\324<B\3130>R\206\323>\252\217\312=\236\210W\275\035\321\226\275\226k\202>\265l\214=\241XB>`u\346=\032\t<>\014\357\021=\264<\323=k\211\327\276\266\233\313>bo,=\013\257-\276\330b\327;\242\346\'>\227\273i\275\255\246\266=\313o\300=i~\225\276I\177\232\274\236\245\226\275\360Y\311=\211k\202\276\255V\243<\224\371\275= \355\247>\245\230\034\276\237B\236\276\234\220\023>\036xF\275\016\234\203=m%\267\276d\306->;\357\244\276M\000\201>QI\262\275\213\325\034>\342\362^\276\001\367\320\275\257b3>\217\351\276\273\313\311E\276-\tP\275WE\274\275?\017F>\330\326\334=\006\201\210>\217\221\224>\006T\313=\013\347\323=`[\213=\364\303u\276NI%\276\302\203\250\274\233&\205\275\225[\232\276+\366\242\276\362m\273\275\007\324\005>\025\235\233\2747\365\212\275\021\"g\274\342\252H>d{(\275\303\215\024=\342Qw>Z\0346\276\2315\">\361\330\276\275\242\306\304\273\035\276\316\275\334\263\362\275pH\215\276Z\0272\275\340\222\361=\307\233f<\343%\306=\214\3553>B|\225\275\313d3>\276]\360\275\262Y\001\276\267\344o>\376\216{=)`5>\317N\364\276O\n\377=[\333\234>c\223~\276h\220*>;\260\251\275\2178\263=\032\300\267\276h]\007=\265\000H=\227O\232\275\025\315V\276t\0073=\256\022\003\275w\211\236\276\032\353\013\276wyU>r\275V\276\305+.\276I\277\017>\367s\036\276\272\271(>\013B\213\275\254\243\333<bo\246=\234\365\254\275\031\026\265=\375\tQ>O,\302=f+\255=Il|\276)fP=lwN=N\367b\276t;8>\202Y\217>m\250\261\275Z5\216=\350\235\223=p\023S>Q\216I\274\301$\234\275\034\261N\276\235\242\004\276\242\270J=\366\323\240\275T$f\275\340z}<\265\353q=\334`Y<\237\205\201\276\206\356u=\017\"<\275\200\0003\276\214\237?\275\307\361\010\276o\'\324;\rJ\202\275\246\317\357\275v+\247\275\215\027\227\275\0137\215=\027\202]\276v\347\322\276\232\261\024\276\241\031\364\273)\002\177\275%A\361\275\264ax>\273\203\006\276\034\205\306>\323\304e>\242Cx>\374\367\361\275\357\035;\274\006\026\3339a2D\276\025\264N=\200\320\204<\001\007*\272\241\250q>\377)\021>\274\267\345<P\311\007\276&\370}\276\016S}\273\371?\021>S\000\336>\231\2472=\345VZ>G`\275\274s\357\232>\357\316\n\275\222\364\001\275\2365\255=\020\021\203\276\214O\004\276\352\331\026=|\036\"=\265\223\323\275\364\352\"\276\3275}\275\354\270B</\371\036>\303\311\265=`YD\274U\304g\275\211NB>\r\257,>:\250G\276\213R\301=\000tQ<g\246s\276\2661g\276\204\256\266\276=\202\376\274?\251\014\276}\305\251=/\360\242>HI\213\275\341f\032\276\322\347\221>\320\036\"=\240\0326\276\201~\274=\257\265g=\3074\226<\372*\210<GX\016\274\246\003\303\275f\\[>\311\211\234\276\364P\263\275\265>_\276-n?\276\370Q0>\302r\260\275\327\'l>X0\235\275Z\323l\274\0044\302\275 \375L\276\302\226\023\276\355\tz=0\005;\276\3765\037\276\261\355D\276\274r\244\275\245P\217<\365=\314=\026\365r\275\270\341A>\313\250\311=\341!<>\032 \371=\253?G\276H\272#>!\230\n\274+\342D>T\335\004\276\006\346\201=]S\017?2\000\200>\n\276\016\276\027\263r\276}\026p\276\365\3328\275\2348\027\276\322\264\035<\213,W=\340\201\312<g\214R\276y\267\234=+\342\270\274\366\203\304>\235#8=vq*>6K\006\276\323\232\243=u%*\276\317\250!\276+\2419\276zZ\241\274}\244C\276\225R$>\240#\205=j\2019\275\026\302)>\035R\000>\310*\346\2750\031\356<\207#n\276\242<\334\276\217A\271\275\356 ?>\303<\303<*\220V\2766{\037\274\350/\205\276\353G\241=?\264f\273>|\333\276\242UR>\203!R=\310\271;;\223\216\270=\n[\000\276\357\241\255\273\201=6=\334\330t=&\344\001\276%d=\276\3139\227\275zn\327>}\222\227>a\232\177\276\000\207B\275}\r\022=\216C\024>e\213\t>\215{\313<\324\323%\2751\354\230\276\354PD=\0210+\275?\360C=\314\356\001\274\017\r\221:\033\013\374;\025\242U\276\n\031g>\200\330t\274w\276\001\275(w&>\346\032T=S\346\266=4\214\376\275\262\232\205\276^_M\276\261n\243\274\032W\201>\'f\204=\222\2338=\307\023\217\275z~\n>D\210\335=\237\350\270>\232S\243\276\365\306\216\275c\217`=7\020!=\214\231\275\276\001\356>\276\360K}\276\220 \024\2756\360U\276\025y\255\274\023\341\207\275\016\310\260\275\240G\201>\3113~=\013\3245\276Ln#\275\002\243d>\206\342\266=\257\017(\276\"7\031>\310n\340\275+\347\240=k\306\337\274Q\312\347:|\200\325\275\252\006\251\276\0001Y=\244\351Z=\333\320\202\275\204\344\"\276\322\223m\274\224Q-=t\272\253=\272\211\351>$\276L\276&\037!>\226\370\213\276\321;\">\305\242\255=!|.=*\357\036>\252+\002>\362\3062\276y*\270\276\212\313\034\275S\253\245\275^\262\300\275\010\326\331\273\026\273D\276)n`;\2273=\276\177\251\320\275Z\214\257>\315h\363=\354\372\221>\301I\303\275\244\225\341;\013\'\204>\003\262\205\276r\266\367\275M\373\347=\001\205\322;\257d\366\275\0160\302\275\347\003o>\374k\020>\2270b\276\363\'\226\274V\2702<\305^\366>\372\255\251=CX\374;+\330\017\276y\354\361\274bJ\022>\221!\314\275\313e\000\275\'d\226=_\251-\276\227\345\005=DwC>\267\243\031\277W\204\t<\276\275E=g\\\020\276\020\037\315\274\257k5>\023\354\356\274\335D\247=o\273,>F\3770\275}\244\214\275\304\023\000\276\'AR>\032\t\204\276\000?\236>\001\274\366\275\256$\023>i\342o>\220\024s>\253\'=\275?O\262\274\373\3770\273n\314\310=\013\023B\274\266N\321\274z\313K\276\211&~\276\224\224D>\355\205\253>\333\003o>\220,\272\276\275V\262\274\261/\323=\374\207\330=\r\017\223>^u_\276\037\3322>\276z\215=\260\244S\276\357A\273>\223\225\"\276\355\210\254\275\251b>>\352\206U\276\356\230H\276\337\002\272<\250o\312\274\212\345.\276\217\'\235\276V\003\223=\321\367\300\275%\264\270\275\275\216\034\272\030\2342=g\351\303\274\333\224B\276\233\323\252\276\341+\201>\215m\006=v\375\346\273\005\t\t\274\246\320P\275\340T\311=\272\221\000\276*\017\207\276\367\356\020\275\216s\303=\307j\372\275\300w\307\276Y\345\231\275J\221\221>N\264S\276\033\302\237\276\331:y\276h\000\365=\337\003(\276\n\303\033\276\376\262\273=\323y\013>\204\2505\275#s%=@\316\276=`\353K=\334\357:>w\301\200\276:&\204\275}\010\252\276\231\230\215>\025\341\033>\302\2464>\r\035\261<\327\226\007\275d\221\307<\013b\316\275\277c\212>8!\217>wp\327\275\256\225\206>\303\372+>D\370\210\276A\252\230\275\210\023K=\006\365\371<\200\334\'>x)\016>t\017\253\276Q\317\243\276\374\233\360\273*6\001\276b\366j>\243\274\214<P\241\006>X\256\022\276\304\305L\275\204\313\335\275\035\3025\276\270\344\240\276\037\177\353>|\010<=\242!\240=\335c\212>\257\323=<\225\252==b\250\212\274\030\237k\276\233\034=>*\367\026=#v\204\276\252\0034\276w9\227\276\206|\026\276N/\200\276\2241~=\251\350\366=4h\271>,\017\222\276\355Q\014\276\351S\246\275\177\233\020>\311rP>\300\263b\275\025\026\225>\271\020\205>\252\321\203>\322N\271=^\255\365=u\034\222=L\006\255=\335w\030\275\201\022F>\261HP>\234$\303\276Y\024,=\354\3507=\0336<\276\273O\375>\013\213\r\274tOK\274\231\202\334=\005\267\205=\264\032\252=\346\227h=L\227\205\275\242\240\270>KF\321>\223,\034\276\270Ir;\207\2446\275)\0369>QQ\277\276\311N\220\2750,_=\370\330\231\275\204!\261=\301<\225>O\032\330\275U\226\273\275N*\225=x\tJ>RG}>c/\306\275\312j\033\2763XG\276\330k\214>\022<\216\274\342-8>.\025X={t\270\275E\305k=\377LB>\366-\216>\267\364t:\013%\025\275\246\327>>\022\236R\276i\031\017\276o\341\007>\364=-\275H\315\006\2769g\200\275\260\256\032\276\367o\351=)\037\344\276\221.6\275\271\276\017=\251\274\004\276\362\337\264=w\341\\\275\263\201\311\274\345]\017\274\262\255\212>+\221\242>O,\016>\350\277\205=\035\251v=\332H\232\275\032\205\026\276\312.\026>\234\201\215=\303\306\020\276CO\007\276]\'\264\2756\211a>\232g\013\276\262k\205=)\020*\276\343f\014>=A\373=\363\257\254=\265qF\276XJD>E\217\036?!9\211\273p\200\007=\263n\034\276\345&\343> \215\353\2753\030\360\275\r\262w\276d\231\216<\036\271r<]:u=x\317w>\247\341w\276\354\374.>\3440\236\275\026\306\337<\366\227\207>\024\220H\276f\251\362=\252\272\212>^\3112>\245h\023\276\266\3167=NC\325\275\223\003\372=\300\217>\276?\010+\276\224\"\310\276\0053\n>\262.\001=\303\365\006\276\276\251\212\275\000\206\233>4\366M=h\371-\276\320\341\233;w\325 =j\250\222=\000rH\275\230\201S>\230\207\212=\265\006C>)\270\372\275\270\377\257\276\273#\262\275n\215\266\275\215\266\035=\334\222H>$r\355=\\\216\263<n\001\253<\340j0\276\272\254t\276\330\346x=\014\230\324=\265\243\237\275A\3215=R\346w>\374\300\330\276\337\031\246\273\252\356u\276 \376&=\215\013c\276\223\221*>Qd\245>\223v\316=\014\200?\275\031\256\022<\272\272P=\205\017Z>\263\357y=\264\007\207\275\307Z\"=_\262^\276\241\000\304=\321\333\312=2\376\371=4\002(\275\231\326\222\276#z\321\275\307e\035;\034\302x>2\027\376\275\376\303\323\275\223\265\225\276P\007\363\275uH\025=<\317\026\276\327\030\207=\376\366\321<4\033\257\275W\257\223=\201\352;\275q\225\r>4\326k<t\375O>*\014\276\275e\311\027\276\035\224\316>P\361\035\276\315\274\257>4l\016<\357\311\221\276\200e\263>E\030\252\275\252\353\300=_?8=\340\271\253\275<\005\'\274\203\277%=\314\201\312\275\372\3255\276\224\033\207=\364I)>\255\377\024\276\375\356\211\274\333\236\'\275\326{}=x\'_\275Sv\255=#v>\276\2272\251=\177\227\264\275\0037#;\301\352\205\275\206\306b>\324\0161;_\255K>&\316*>\253C\252\274\212E3<\327[\020>b\262=\276\340a\326\2753P\210>\232\250\333>\260\313\334<\237\262>\276\355\323\021\276\252\023\207;\334\221-\275;\352\254>B-E>\313\031\'\276\274 *\276\343\323\014>&\277\251\274I\373@=\316)-\276\315\005~=.\303\353\275a\312\301\275\270&\263\276\035\331\276>\205\362;\275B\346K>@d\355<\371\317P\276L\274\243\274v!\263\275:\236&>\354\004\235\275\242\216\r\276!(\207\275V+\376=j4\277>_\3315\276\216\025z>\013\371\236\275\267\3248>Y-+>\006ow=\374\035\320<\0164\260\276C\n\247>\237\276\256\276\\\000\273<\316G\303\272\210\210\244>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "AddV2"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\010\234n\276T\005\242>\371\310->\016%\271\275\315\334\002>\355\345#=p\326,>\216\217==\235\202\034\275\215\302H\275\001\254\313\276\036\002\275>\322\210\275=a\212\016\276\366\340+\276\037\t\225<\"\253\016\276\347\257\213\276B\311\032\276_nS\275\351\004\213;\205\3465\276\237D\310\276\3657Z=\325P\223\275Z\210\002\273\354\343`>8}*\275\211\0323\276\260U\'\273mr\346\275\213\t\255\273"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "AddV2"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\373m7\273e\257\'9\007<\027:O\017\025\272AG\263\272 Z\022;\204\334n7\237\320\345\272\317\235\2169\263\202\3019\031\017\261:_U\350\2720f\3639o@0\273\265K\226:\017F\270:\325\234\003;\302H\206\272\215T\236\272\265\307\220;\0218w;i)\247\272\013W\274:\324*\341\272\334,\274\272\261\215\330:\340\236\021\273+\254\017:\006\2258:pf\244:I(\3749 j%\273"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "AddV2"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "AddV2"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\027\025\247\271u?\023;\303\336\334\271\361\230\230\272\252NK\272B\030\346\272(\345\202\272\216\375(\270\300\023\306\272\327\224.:\241\210q;\333\006\0269p\321\263:\220+\3659\337\370/\273\311$\332:\010\214\003\273\315\265\027:\207\305L:@\024o\272s\203\201\272\271pY\273\204\006;\273 \351k:bf\222:\351\215L\273\001\266\376\272&8\035;%;\351\271|\336\016:\002\234\314\272\371\203O;"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "AddV2"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "AddV2"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "AddV2"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "AddV2"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "AddV2"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "AddV2"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385175704956
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "AddV2"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.009999999776482582
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "AddV2"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "AddV2"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "AddV2"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "AddV2"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "AddV2"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "AddV2"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "AddV2"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8612
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "!\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6400
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6432
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8480
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8512
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8544
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8545
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8577
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8578
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8579
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8611
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8612
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Square_5_grad/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum_1"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "AddV2"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Shape"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/Exp_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum_1"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "AddV2"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "AddV2"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/truediv_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum_1"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Shape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Shape"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 33
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2112
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2112
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8612
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_aa8f75d735a34a55b76259eb3ff9ebae/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/MergeV2Checkpoints"
      input: "^save_1/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 33
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    library {
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 33
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
